<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About the Examples | Data Visualization</title>
    <link>https://edp693e.theoreticalphysed.com/example/</link>
      <atom:link href="https://edp693e.theoreticalphysed.com/example/index.xml" rel="self" type="application/rss+xml" />
    <description>About the Examples</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <image>
      <url>https://edp693e.theoreticalphysed.com/img/course_info.png</url>
      <title>About the Examples</title>
      <link>https://edp693e.theoreticalphysed.com/example/</link>
    </image>
    
    <item>
      <title>Friends Don&#39;t Let Friends Use Pie Charts</title>
      <link>https://edp693e.theoreticalphysed.com/example/01-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/example/01-example/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-timers-note&#34;&gt;First Timers Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;first-timers-note&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Timers Note&lt;/h2&gt;
&lt;p&gt;You’ll see extra examples of visualizations and full code chunks you can copy or download directly into RStudio to edit as you want.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Base R is a Thing</title>
      <link>https://edp693e.theoreticalphysed.com/example/02-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/example/02-example/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-prepped&#34;&gt;Getting Prepped&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-things-first-set-your-working-directory&#34;&gt;First Things First! Set your Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#download-the-script&#34;&gt;Download the script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#foundational-structures&#34;&gt;Foundational Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-types&#34;&gt;Data Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#classes&#34;&gt;Classes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#example-100-fake-data&#34;&gt;Example: 100% Fake Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-frames---a-format-you-absolutely-want&#34;&gt;Data Frames - A Format You Absolutely Want&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#importing-and-viewing-data&#34;&gt;Importing and Viewing Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#looking-at-variables-in-a-data-frame&#34;&gt;Looking at Variables in a Data Frame&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assigning-variables&#34;&gt;Assigning Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#basic-visualizations&#34;&gt;Basic Visualizations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-bit-of-context&#34;&gt;A Bit of Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#basic-visualizations-1&#34;&gt;Basic Visualizations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#histograms&#34;&gt;Histograms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#line-graph&#34;&gt;Line Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scatterplots&#34;&gt;Scatterplots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#boxplots&#34;&gt;Boxplots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#plot-options&#34;&gt;Plot Options&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#rendering-more-than-one-plot-in-a-window&#34;&gt;Rendering more than one plot in a window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:   #003277;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}
&lt;/style&gt;
&lt;div id=&#34;getting-prepped&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Prepped&lt;/h1&gt;
&lt;div id=&#34;first-things-first-set-your-working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Things First! Set your Working Directory&lt;/h2&gt;
&lt;p&gt;Your &lt;em&gt;working directory&lt;/em&gt; is simply where your script will look for anything it needs like external data sets. There are a few ways to go about doing this which we will cover. However for now, just do the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up a new script by going to &lt;code&gt;File &amp;gt; New File &amp;gt; R Script&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save it in a preferably empty folder as whatever you want.&lt;/li&gt;
&lt;li&gt;Go to the menu bar and select &lt;code&gt;Session &amp;gt; Set Working Directory &amp;gt; To Source File Location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;download-the-script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download the script&lt;/h2&gt;
&lt;p&gt;Copying and pasting syntax from a browser can cause problems. To avoid this issue, please download a script with all of the needed code presented in this walkthrough.&lt;/p&gt;
&lt;a href=&#34;data:text/plain;base64,&#34; download=&#34;Week 2 Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;foundational-structures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Foundational Structures&lt;/h2&gt;
&lt;p&gt;Akin to how atoms were viewed as the building blocks of life, these are the basic structures of R.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;vector&lt;/em&gt; - The very basic structure of R where one type of information can be stored. These are given by a single row or column of things that have to be the same data type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nothing_vector &amp;lt;- c()

nothing_vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NULL&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;number_vector &amp;lt;- c(1,2,3,4,5)

number_vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;character_vector &amp;lt;- 
  c(
    &amp;quot;Oban&amp;quot;, 
    &amp;quot;Macallan&amp;quot;, 
    &amp;quot;Pittyvaich&amp;quot;, 
    &amp;quot;Balblair&amp;quot;, 
    &amp;quot;Glenmorangie&amp;quot;
    )

character_vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Oban&amp;quot;         &amp;quot;Macallan&amp;quot;     &amp;quot;Pittyvaich&amp;quot;   &amp;quot;Balblair&amp;quot;     &amp;quot;Glenmorangie&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;object&lt;/em&gt; - These are the different ways you can structure your data to do something with it. All objects are made up of one or more vectors.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;data-types&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Types&lt;/h2&gt;
&lt;p&gt;There are six types of data that R can read on its own without the help of any other piece of software. These are known as atomic vectors where &lt;em&gt;atomic&lt;/em&gt; means the vector only holds data of a single type&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;character: “a”, “swc”&lt;/li&gt;
&lt;li&gt;numeric: 2, 15.5&lt;/li&gt;
&lt;li&gt;integer: 2L (the L tells R to store this as an integer)&lt;/li&gt;
&lt;li&gt;logical: TRUE, FALSE&lt;/li&gt;
&lt;li&gt;complex: 1+4i (complex numbers with real and imaginary parts)&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;raw: 01010010&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;classes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Classes&lt;/h2&gt;
&lt;p&gt;A &lt;em&gt;class&lt;/em&gt; is the blueprint that helps to create an object. These are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;matrix&lt;/em&gt; - A two-dimensional object made up of rows and columns. These are essentially a bunch of vectors stacked on top or beside each other that have to be the same data type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;some_matrix &amp;lt;- matrix(c(1,1,2,3,5,8), nrow = 2, ncol = 3)

some_matrix &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2] [,3]
## [1,]    1    2    5
## [2,]    1    3    8&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;array&lt;/em&gt; - A three-dimensional object made up of a bunch of matrices that have to be the same data type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;some_array &amp;lt;- array(1, dim = c(2, 3, 3))

some_array&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## , , 1
## 
##      [,1] [,2] [,3]
## [1,]    1    1    1
## [2,]    1    1    1
## 
## , , 2
## 
##      [,1] [,2] [,3]
## [1,]    1    1    1
## [2,]    1    1    1
## 
## , , 3
## 
##      [,1] [,2] [,3]
## [1,]    1    1    1
## [2,]    1    1    1&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;dataframe&lt;/em&gt; - Similar to a matrix, BUT columns can vary by data type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;some_df &amp;lt;- data.frame(col1 = 1:3, 
                 col2 = c(&amp;quot;take&amp;quot;, &amp;quot;a&amp;quot;, &amp;quot;nap&amp;quot;), 
                 col3 = c(TRUE, FALSE, TRUE), 
                 col4 = c(1.5, 3.2, pi))

some_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   col1 col2  col3     col4
## 1    1 take  TRUE 1.500000
## 2    2    a FALSE 3.200000
## 3    3  nap  TRUE 3.141593&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;list&lt;/em&gt; - A set of objects.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;some_list &amp;lt;-list(1,2,3,4,5)

some_list&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## [1] 1
## 
## [[2]]
## [1] 2
## 
## [[3]]
## [1] 3
## 
## [[4]]
## [1] 4
## 
## [[5]]
## [1] 5&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;example-100-fake-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Example: 100% Fake Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;height &amp;lt;- c(145,167,176,123,150) 
weight &amp;lt;- c(51,63,64,40,55)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Both &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;weight&lt;/code&gt; are called &lt;em&gt;variables&lt;/em&gt; because they have been assigned a bunch of stuff which in this case are integers. Well we have these, might as well do something with them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;height &amp;lt;- c(145, 167, 176, 123, 150)
weight &amp;lt;- c(51, 63, 64, 40, 55)

plot(height,weight)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well that wasn’t exciting at all was it? It’ll get interesting soon.&lt;/p&gt;
&lt;p&gt;R provides many functions to examine features of vectors and other objects, for example&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;class()&lt;/code&gt; - what kind of object is it (high-level)?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;typeof()&lt;/code&gt; - what is the object’s data type (low-level)?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt; - how long is it? What about two dimensional objects?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attributes()&lt;/code&gt; - does it have any metadata? (underlying set of data that describes and gives information about other data)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;class(weight) # Yup there are numbers so numeric makes sense.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;numeric&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;typeof(weight) # You see the term &amp;#39;double&amp;#39; here but you may also see &amp;#39;single&amp;#39; or &amp;#39;integer&amp;#39;. All this refers to is the precision of the number and you can assume they are all integers.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;double&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(weight) # There are 5 objects in weight so length(weight) = 5 makes sense.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;attributes(weight) # Null since there isn&amp;#39;t any other information except for what you see.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NULL&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;data-frames---a-format-you-absolutely-want&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Frames - A Format You Absolutely Want&lt;/h1&gt;
&lt;p&gt;We want all of our data to be in this form. A &lt;em&gt;data frame&lt;/em&gt; is a table or a two-dimensional array-like structure in which each column contains values of one variable and each row contains one set of values from each column. Characteristics of a data frame are as follows and in no particular order:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The column names should be non-empty.&lt;/li&gt;
&lt;li&gt;The row names should be unique.&lt;/li&gt;
&lt;li&gt;The data stored in a data frame can be of numeric, factor or character type.&lt;/li&gt;
&lt;li&gt;Each column should contain same number of data items.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;NOTE: You can always check if a variable is a data frame by &lt;code&gt;is.data.frame(whatever)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;importing-and-viewing-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Importing and Viewing Data&lt;/h2&gt;
&lt;p&gt;Read in the file &lt;code&gt;USpop2010to2017.csv&lt;/code&gt; that has data on US population estimates from 2010 to 2017. You can do this in multiple ways but for now and since you’re getting used to menu. To bring in the file, go to the &lt;code&gt;Environment&lt;/code&gt; tab in the upper right window and then &lt;code&gt;Import Dataset &amp;gt; From Text (readr) &amp;gt; Browse&lt;/code&gt; to find your file and load it in. Before clicking on the &lt;code&gt;Import&lt;/code&gt; button, name the variable &lt;code&gt;population&lt;/code&gt; under &lt;code&gt;Import options&lt;/code&gt;. You should get an output similar to the one shown below.&lt;/p&gt;
&lt;p&gt;But know that we will be moving away from the idea of using a mouse/trackpad to do things because it wastes time and is generally disruptive. Instead we’ll use the file’s &lt;em&gt;relative path&lt;/em&gt;, that is the locations of all other files in comparison to your script to bring in data. If the &lt;code&gt;USpop2010to2017.csv&lt;/code&gt; data set is in the same folder as your script, then run the following command&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population &amp;lt;- read.csv(&amp;quot;USpop2010to2017.csv&amp;quot;, 
                       header = TRUE, 
                       stringsAsFactors = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a look at the file by running&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Census_ID Collection_year Total_Pop  Male_Pop Female_Pop Estimate
## 1 POPESTIMATE2010            2010 309338421 152082993  157255428        N
## 2 POPESTIMATE2011            2011 311644280 153242210  158402070        Y
## 3 POPESTIMATE2012            2012 313993272 154452348  159540924        Y
## 4 POPESTIMATE2013            2013 316234505 155596820  160637685        Y
## 5 POPESTIMATE2014            2014 318622525 156807419  161815106        Y
## 6 POPESTIMATE2015            2015 321039839 158048153  162991686        Y
## 7 POPESTIMATE2016            2016 323405935 159243817  164162118        Y
## 8 POPESTIMATE2017            2017 325719178 160408119  165311059        Y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well that is long and annoying. We can use the &lt;code&gt;head()&lt;/code&gt; command to make it only display six lines.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Census_ID Collection_year Total_Pop  Male_Pop Female_Pop Estimate
## 1 POPESTIMATE2010            2010 309338421 152082993  157255428        N
## 2 POPESTIMATE2011            2011 311644280 153242210  158402070        Y
## 3 POPESTIMATE2012            2012 313993272 154452348  159540924        Y
## 4 POPESTIMATE2013            2013 316234505 155596820  160637685        Y
## 5 POPESTIMATE2014            2014 318622525 156807419  161815106        Y
## 6 POPESTIMATE2015            2015 321039839 158048153  162991686        Y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or any number actually&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(population, 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         Census_ID Collection_year Total_Pop  Male_Pop Female_Pop Estimate
## 1 POPESTIMATE2010            2010 309338421 152082993  157255428        N
## 2 POPESTIMATE2011            2011 311644280 153242210  158402070        Y
## 3 POPESTIMATE2012            2012 313993272 154452348  159540924        Y
## 4 POPESTIMATE2013            2013 316234505 155596820  160637685        Y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can actually look at the entire dataset in a spreadsheet like window by using&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(population)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to know more about how a data set is made up you can use the command &lt;code&gt;str()&lt;/code&gt; or &lt;code&gt;glimpse()&lt;/code&gt;. This essentially asks R for information about the internal structure of any set of data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    8 obs. of  6 variables:
##  $ Census_ID      : chr  &amp;quot;POPESTIMATE2010&amp;quot; &amp;quot;POPESTIMATE2011&amp;quot; &amp;quot;POPESTIMATE2012&amp;quot; &amp;quot;POPESTIMATE2013&amp;quot; ...
##  $ Collection_year: int  2010 2011 2012 2013 2014 2015 2016 2017
##  $ Total_Pop      : int  309338421 311644280 313993272 316234505 318622525 321039839 323405935 325719178
##  $ Male_Pop       : int  152082993 153242210 154452348 155596820 156807419 158048153 159243817 160408119
##  $ Female_Pop     : int  157255428 158402070 159540924 160637685 161815106 162991686 164162118 165311059
##  $ Estimate       : chr  &amp;quot;N&amp;quot; &amp;quot;Y&amp;quot; &amp;quot;Y&amp;quot; &amp;quot;Y&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(population)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 8
## Columns: 6
## $ Census_ID       &amp;lt;chr&amp;gt; &amp;quot;POPESTIMATE2010&amp;quot;, &amp;quot;POPESTIMATE2011&amp;quot;, &amp;quot;POPESTIMATE201…
## $ Collection_year &amp;lt;int&amp;gt; 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017
## $ Total_Pop       &amp;lt;int&amp;gt; 309338421, 311644280, 313993272, 316234505, 318622525…
## $ Male_Pop        &amp;lt;int&amp;gt; 152082993, 153242210, 154452348, 155596820, 156807419…
## $ Female_Pop      &amp;lt;int&amp;gt; 157255428, 158402070, 159540924, 160637685, 161815106…
## $ Estimate        &amp;lt;chr&amp;gt; &amp;quot;N&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;, &amp;quot;Y&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This may seem like a mess but it actually tells you a lot. First thing you should notice is that all of the columns are laid out into lines to be “easily” readable but the structure of the data set does not change! Here is some other important things in no particular order:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;We have an 8 x 5 matrix (aka a data set with 8 columns and 5 rows)&lt;/li&gt;
&lt;li&gt;It is a data frame with variables given by &lt;code&gt;$&lt;/code&gt;. More about this below.&lt;/li&gt;
&lt;li&gt;The first column is a character vector (made up only of strings of text).&lt;/li&gt;
&lt;li&gt;The remaining columns are integer vectors (made up only of numbers in the form of integers).&lt;/li&gt;
&lt;li&gt;You may be wondering why we skipped over the &lt;code&gt;factors&lt;/code&gt; and &lt;code&gt;levels&lt;/code&gt;. That’s a bit complicated for this session but we will get to it because they play an important role in visualizing the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;looking-at-variables-in-a-data-frame&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Looking at Variables in a Data Frame&lt;/h2&gt;
&lt;p&gt;To call a variable in the dataframe, we use the &lt;code&gt;$&lt;/code&gt; notation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population$Census_ID&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;POPESTIMATE2010&amp;quot; &amp;quot;POPESTIMATE2011&amp;quot; &amp;quot;POPESTIMATE2012&amp;quot; &amp;quot;POPESTIMATE2013&amp;quot;
## [5] &amp;quot;POPESTIMATE2014&amp;quot; &amp;quot;POPESTIMATE2015&amp;quot; &amp;quot;POPESTIMATE2016&amp;quot; &amp;quot;POPESTIMATE2017&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now try to use the same method for the other two columns.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
Solutions
&lt;/summary&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population$Collection_year&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2010 2011 2012 2013 2014 2015 2016 2017&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population$Total_Pop&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 309338421 311644280 313993272 316234505 318622525 321039839 323405935
## [8] 325719178&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population$Male_Pop&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 152082993 153242210 154452348 155596820 156807419 158048153 159243817
## [8] 160408119&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;population$Female_Pop&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 157255428 158402070 159540924 160637685 161815106 162991686 164162118
## [8] 165311059&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;div id=&#34;assigning-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Assigning Variables&lt;/h2&gt;
&lt;p&gt;Now let’s call these something because writing those out over and over is annoying&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;census &amp;lt;- population$Census_ID

census&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;POPESTIMATE2010&amp;quot; &amp;quot;POPESTIMATE2011&amp;quot; &amp;quot;POPESTIMATE2012&amp;quot; &amp;quot;POPESTIMATE2013&amp;quot;
## [5] &amp;quot;POPESTIMATE2014&amp;quot; &amp;quot;POPESTIMATE2015&amp;quot; &amp;quot;POPESTIMATE2016&amp;quot; &amp;quot;POPESTIMATE2017&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or to do this quicker, use a semicolon &lt;code&gt;;&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;census &amp;lt;- population$Census_ID; census&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;POPESTIMATE2010&amp;quot; &amp;quot;POPESTIMATE2011&amp;quot; &amp;quot;POPESTIMATE2012&amp;quot; &amp;quot;POPESTIMATE2013&amp;quot;
## [5] &amp;quot;POPESTIMATE2014&amp;quot; &amp;quot;POPESTIMATE2015&amp;quot; &amp;quot;POPESTIMATE2016&amp;quot; &amp;quot;POPESTIMATE2017&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now try to use the same method for the other columns by using the variables &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;total&lt;/code&gt;, &lt;code&gt;male&lt;/code&gt; and &lt;code&gt;female&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
Solutions
&lt;/summary&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;year &amp;lt;- population$Collection_year; year&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2010 2011 2012 2013 2014 2015 2016 2017&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total &amp;lt;- population$Total_Pop; total&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 309338421 311644280 313993272 316234505 318622525 321039839 323405935
## [8] 325719178&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;male &amp;lt;- population$Male_Pop; male&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 152082993 153242210 154452348 155596820 156807419 158048153 159243817
## [8] 160408119&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;female &amp;lt;- population$Female_Pop; female&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 157255428 158402070 159540924 160637685 161815106 162991686 164162118
## [8] 165311059&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;div id=&#34;basic-visualizations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Basic Visualizations&lt;/h2&gt;
&lt;p&gt;Let’s plot these&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, total)
# Notice that the x-axis variable goes first!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK well that’s better but it looks funny - the y-axis looks like the output on a mid 90s calculator that couldn’t handle exponents. So we’re going to divide and round. Since everything is in hundreds of millions in our data set, let’s divide each column by one hundred million but keep the original figures.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# We don&amp;#39;t divide anything in census because it just contains the original variables
census &amp;lt;- population$Census_ID 

# We don&amp;#39;t want to divide anything here because this column has data on years
year &amp;lt;- population$Collection_year 

# These are the actual data so that&amp;#39;s where we&amp;#39;ll reduce. 
tinytotal &amp;lt;- population$Total_Pop/100000000 
tinymale &amp;lt;- population$Male_Pop/100000000
tinyfemale &amp;lt;- population$Female_Pop/100000000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that these are proportionally smaller, let’s hope the visuals are more understandable&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Looks much better but let’s change the axis labels to be more descriptive.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-38-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That’s good but the size of the labels should be bigger.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-39-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well its bland so how about a little color?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People(in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;, 
     col=&amp;quot;#7bc043&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-40-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sure but those dots are difficult to see. Let’s make them different.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People(in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No bigger!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 1.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-42-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I said bigger dammit!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-43-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And without that annoying box&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 2,
     bty = &amp;quot;n&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-44-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Maybe a colorful title?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 2,
     bty = &amp;quot;n&amp;quot;,
     main = &amp;quot;United States Population Estimates (2010-2017)&amp;quot;, 
     cex.main = 1.5,
     col.main = &amp;quot;#0392cf&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-45-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And a line&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 2,
     bty = &amp;quot;n&amp;quot;,
     main = &amp;quot;United States Population Estimates (2010-2017)&amp;quot;, 
     cex.main = 1.5,
     col.main = &amp;quot;#0392cf&amp;quot;,
     type = &amp;quot;o&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-46-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No that’s too skinny!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(year, tinytotal, 
     xlab = &amp;quot;Years&amp;quot;, 
     ylab = &amp;quot;Number of People (in hundreds of millions)&amp;quot;, 
     cex.lab = 1.5, 
     col.lab=&amp;quot;#ee4035&amp;quot;,
     col=&amp;quot;#7bc043&amp;quot;, 
     pch = 19, 
     cex = 2,
     bty = &amp;quot;n&amp;quot;,
     main = &amp;quot;United States Population Estimates (2010-2017)&amp;quot;, 
     cex.main = 1.5,
     col.main = &amp;quot;#0392cf&amp;quot;,
     type = &amp;quot;o&amp;quot;,
     lwd = 3.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That’ll do for now but that is a ton of work and a lot of not so obvious commands to memorize. So what’s the big deal?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-bit-of-context&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;A Bit of Context&lt;/h1&gt;
&lt;p&gt;Well what you just went through is the &lt;em&gt;OG&lt;/em&gt; R which was released publicly in 1995. While nowadays it is commonly known as &lt;em&gt;Base R&lt;/em&gt;, a majority of its functionality, structure and syntax were derived from another piece of software called S-Plus which was a commercial product from 1988 primarily used only by statisticians. Regardless of the name, this would continue to be the case until the 2007 when &lt;a href=&#34;%22http://hadley.nz/%22&#34; target=&#34;_blank&#34;&gt;Hadley Wickham&lt;/a&gt; officially released an R add-on, or &lt;em&gt;package&lt;/em&gt; called &lt;code&gt;ggplot2&lt;/code&gt;. Little did anybody know that this would alter the future of data visualization. Starting next week, we’ll move on from Base R to &lt;code&gt;ggplot&lt;/code&gt; and its companion packages known as the &lt;code&gt;tidyverse&lt;/code&gt;. If you want to get a preview, click on the image below&lt;/p&gt;
&lt;center&gt;
&lt;div style=&#34;width:180px; height:180px&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/img/logos/tidyverse.png&#34; alt=&#34;Tidyverse Hex&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Now that’s not to say there isn’t value in knowing Base R. There are many commands that are quick and easy and don’t need add-ons. In fact, some of the syntax has survived the transition to the &lt;em&gt;tidy&lt;/em&gt; format we’ll get to next week so for now, back to Base R!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;basic-visualizations-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Basic Visualizations&lt;/h1&gt;
&lt;div id=&#34;histograms&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Histograms&lt;/h2&gt;
&lt;p&gt;For this part, we will use data on the number of users on facebook. Lets read the data into R like so&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;facebook &amp;lt;- read.csv(&amp;quot;ActiveFacebookUsers.csv&amp;quot;, 
                       header = TRUE, 
                       stringsAsFactors = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Take a look at the first six rows and get some information about the columns&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(facebook)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Quarter Number.of.users.in.millions
## 1  Q3 &amp;#39;08                         100
## 2  Q1 &amp;#39;09                         197
## 3  Q2 &amp;#39;09                         242
## 4  Q3 &amp;#39;09                         305
## 5  Q4 &amp;#39;09                         360
## 6  Q1 &amp;#39;10                         431&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(facebook) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    39 obs. of  2 variables:
##  $ Quarter                    : chr  &amp;quot;Q3 &amp;#39;08&amp;quot; &amp;quot;Q1 &amp;#39;09&amp;quot; &amp;quot;Q2 &amp;#39;09&amp;quot; &amp;quot;Q3 &amp;#39;09&amp;quot; ...
##  $ Number.of.users.in.millions: int  100 197 242 305 360 431 482 550 608 680 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Alternatively, you can use glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;facebook$Quarter&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Q3 &amp;#39;08&amp;quot; &amp;quot;Q1 &amp;#39;09&amp;quot; &amp;quot;Q2 &amp;#39;09&amp;quot; &amp;quot;Q3 &amp;#39;09&amp;quot; &amp;quot;Q4 &amp;#39;09&amp;quot; &amp;quot;Q1 &amp;#39;10&amp;quot; &amp;quot;Q2 &amp;#39;10&amp;quot; &amp;quot;Q3 &amp;#39;10&amp;quot;
##  [9] &amp;quot;Q4 &amp;#39;10&amp;quot; &amp;quot;Q1 &amp;#39;11&amp;quot; &amp;quot;Q2 &amp;#39;11&amp;quot; &amp;quot;Q3 &amp;#39;11&amp;quot; &amp;quot;Q4 &amp;#39;11&amp;quot; &amp;quot;Q1 &amp;#39;12&amp;quot; &amp;quot;Q2 &amp;#39;12&amp;quot; &amp;quot;Q3 &amp;#39;12&amp;quot;
## [17] &amp;quot;Q4 &amp;#39;12&amp;quot; &amp;quot;Q1 &amp;#39;13&amp;quot; &amp;quot;Q2 &amp;#39;13&amp;quot; &amp;quot;Q3 &amp;#39;13&amp;quot; &amp;quot;Q4 &amp;#39;13&amp;quot; &amp;quot;Q1 &amp;#39;14&amp;quot; &amp;quot;Q2 &amp;#39;14&amp;quot; &amp;quot;Q3 &amp;#39;14&amp;quot;
## [25] &amp;quot;Q4 &amp;#39;14&amp;quot; &amp;quot;Q1 &amp;#39;15&amp;quot; &amp;quot;Q2 &amp;#39;15&amp;quot; &amp;quot;Q3 &amp;#39;15&amp;quot; &amp;quot;Q4 &amp;#39;15&amp;quot; &amp;quot;Q1 &amp;#39;16&amp;quot; &amp;quot;Q2 &amp;#39;16&amp;quot; &amp;quot;Q3 &amp;#39;16&amp;quot;
## [33] &amp;quot;Q4 &amp;#39;16&amp;quot; &amp;quot;Q1 &amp;#39;17&amp;quot; &amp;quot;Q2 &amp;#39;17&amp;quot; &amp;quot;Q3 &amp;#39;17&amp;quot; &amp;quot;Q4 &amp;#39;17&amp;quot; &amp;quot;Q1 &amp;#39;18&amp;quot; &amp;quot;Q2 &amp;#39;18&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;facebook$Number.of.users.in.millions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  100  197  242  305  360  431  482  550  608  680  739  800  845  901  955
## [16] 1007 1056 1110 1155 1189 1228 1276 1317 1350 1393 1441 1490 1545 1591 1654
## [31] 1712 1788 1860 1936 2006 2072 2129 2196 2234&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s rename the columns&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;users &amp;lt;- facebook$Number.of.users.in.millions
quarter &amp;lt;- facebook$Quarter&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’re going to use the &lt;code&gt;hist()&lt;/code&gt; function to plot a basic histogram of the number of users and quarters&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(users) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-55-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Hey its a normal distribution!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can specify the number of cells for the histogram using the &lt;code&gt;breaks&lt;/code&gt; option&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(users,
     breaks = 40) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-56-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This essentially breaks up the default way that the histogram is constructed. You can also do it within the range of the data set. First to see the minimum and maximum, we use &lt;code&gt;min()&lt;/code&gt; and &lt;code&gt;max()&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;min(users) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 100&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;max(users) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2234&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So if I wanted to see how this histogram looks say broken into bars of 300, we can do&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(max(users) - min(users))/300&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7.113333&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or better yet if we round up, we’ll get the actual number of bars we need. To always round to the next integer, we can use the &lt;code&gt;ceiling()&lt;/code&gt; function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ceiling((max(users) - min(users))/300)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can count in 300s and get the output you want&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(users, 
     breaks = c(100,400,700,1000,1300,1600,1900,2100,2400))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-61-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;but that’s a lot of work and its a bit odd because our data aren’t greater than the the maximum. We can still get the eight bars we want of even width if we let R do it for us using the &lt;code&gt;seq&lt;/code&gt;, or sequence option with &lt;code&gt;length.out&lt;/code&gt;, or the number of desired bars&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(users, 
     breaks = seq(min(users), 
                  max(users),  
                  length.out=8))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-62-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s make it look decent&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(users, breaks = seq(min(users), 
                         max(users),   
                         length.out=8), 
     xlab = &amp;quot;Active Users (in millions)&amp;quot;, 
     main = &amp;quot;Facebook utility worldwide as of 2nd quarter 2018&amp;quot;,
     col = c(&amp;quot;#3b5998&amp;quot;,&amp;quot;#6d84b4&amp;quot;, &amp;quot;#afbdd4&amp;quot;, &amp;quot;#d8dfea&amp;quot;, &amp;quot;#ffffff&amp;quot;), 
     border = &amp;quot;#d8dfea&amp;quot;, 
     cex.lab = 1.1) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-63-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice that you can define colors in a vector and the plot will simply repeat that layout.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;line-graph&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Line Graph&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let’s look at another population, but this time we’ll use Twitter data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;twitter &amp;lt;- read.csv(&amp;quot;ActiveTwitterUsers.csv&amp;quot;, 
                       header = TRUE, 
                       stringsAsFactors = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(twitter)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Quarter Number.of.monthly.active.users.in.millions
## 1   20101                                         30
## 2   20102                                         40
## 3   20103                                         49
## 4   20104                                         54
## 5   20111                                         68
## 6   20112                                         85&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(twitter)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    37 obs. of  2 variables:
##  $ Quarter                                   : int  20101 20102 20103 20104 20111 20112 20113 20114 20121 20122 ...
##  $ Number.of.monthly.active.users.in.millions: num  30 40 49 54 68 85 101 117 138 151 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;twitter$Quarter&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 20101 20102 20103 20104 20111 20112 20113 20114 20121 20122 20123 20124
## [13] 20131 20132 20133 20134 20141 20142 20143 20144 20151 20152 20153 20154
## [25] 20161 20162 20163 20164 20171 20172 20173 20174 20181 20182 20183 20184
## [37] 20191&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;twitter$Number.of.monthly.active.users.in.millions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1]  30.0  40.0  49.0  54.0  68.0  85.0 101.0 117.0 138.0 151.0 167.0 185.0
## [13] 204.0 218.0 231.7 241.0 255.0 271.0 284.0 288.0 302.0 304.0 307.0 305.0
## [25] 310.0 313.0 317.0 318.0 327.0 326.0 330.0 330.0 336.0 335.0 326.0 321.0
## [37] 330.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s rename the columns&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tweeters &amp;lt;- twitter$Number.of.monthly.active.users.in.millions
season &amp;lt;- twitter$Quarter&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s first create a basic plot&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-71-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are several types of plot within the plot function which we can access by using the &lt;code&gt;type&lt;/code&gt; option&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;l&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-72-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now try options “o”, “p”, and “b” on your own. Check the solutions below to see if your plot rendered correctly&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
Solutions
&lt;/summary&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;o&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-73-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;p&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-74-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;b&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-75-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/details&gt;
&lt;p&gt;We can also change the line type using the &lt;code&gt;lty&lt;/code&gt; option&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters, 
     type = &amp;quot;l&amp;quot;, 
     lty = &amp;quot;dashed&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-76-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters, 
     type = &amp;quot;l&amp;quot;, 
     lty = &amp;quot;dotted&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-77-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well it looks like the solid line is likely the best so we’ll stick with it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;l&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-78-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Black and white plots can be great but that’s rarely true for data with ore information than two dimensions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;l&amp;quot;,
     col = &amp;quot;#5cb85c&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-79-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can also use a standard palette in R by using numbers&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     type = &amp;quot;l&amp;quot;,
     col = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-80-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That line is just too thin. We can make it thicker by using the &lt;code&gt;lwd&lt;/code&gt; option&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters,
     col = &amp;quot;#5cb85c&amp;quot;, 
     lwd = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-81-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, we can sort out the axes and plot titles&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(season, tweeters, 
     type = &amp;quot;l&amp;quot;, 
     col = &amp;quot;#5cb85c&amp;quot;, 
     lwd = 3,
     xlab = &amp;quot;Quarter&amp;quot;,
     ylab = &amp;quot;Tweeters (in millions)&amp;quot;,
     main = &amp;quot;Active Users on Twitter&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-82-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;I did promise regression didn’t I? OK well what if we wanted to know the answer to the question: &lt;em&gt;is the Twitter population increasing in size?&lt;/em&gt;
Well we can add a basic linear regression to the plot to estimate if that’s true. First let’s calculate the regression line…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fit1 &amp;lt;- lm (tweeters ~ season, 
            data = twitter) 

summary(fit1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = tweeters ~ season, data = twitter)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -72.465 -33.476  -3.424  32.275  54.490 
## 
## Coefficients:
##               Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) -7.218e+04  4.468e+03  -16.15   &amp;lt;2e-16 ***
## season       3.595e+00  2.218e-01   16.21   &amp;lt;2e-16 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 36 on 35 degrees of freedom
## Multiple R-squared:  0.8824, Adjusted R-squared:  0.879 
## F-statistic: 262.6 on 1 and 35 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(fit1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-83-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-83-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-83-3.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-83-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scatterplots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scatterplots&lt;/h2&gt;
&lt;p&gt;Let’s load a dataset of Flower characteristics in 3 species of Iris.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(iris)
head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is a lot of data here! Let’s explore using the &lt;code&gt;pairs()&lt;/code&gt; function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pairs(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-85-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This doesn’t tell us much about the species differences. We can tell R to plot using a different color for the three species of iris&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pairs(iris, 
      col = iris$Species)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-86-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sepal.Length and Petal.Length look interesting! Let’s start by looking at that&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-87-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;These points are difficult to see! Let’s pick some different ones using the &lt;code&gt;pch&lt;/code&gt; option&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species, 
     pch = 15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-88-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species, 
     pch = &amp;quot;A&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-89-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pch&lt;/code&gt; 21:25 also specify an edge color (col) and a background color (bg)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species, 
     pch = 21, 
     bg = &amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-90-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;OK settling on solid circles…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species, 
     pch = 16)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-91-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;…that need to be bigger&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(iris$Sepal.Length, 
     iris$Petal.Length, 
     col = iris$Species, 
     pch = 16,
     cex = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-92-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;boxplots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Boxplots&lt;/h2&gt;
&lt;p&gt;We’ll continue to use the Iris dataset for this section&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(iris)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets first examine the distribution of Sepal Length for each species&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(iris$Sepal.Length ~ iris$Species)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-94-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;f you wish to compare the medians of the boxplot, you can use the function “notch”. If the notches of two plots do not overlap, this is ‘strong evidence’ that the two medians differ.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(iris$Sepal.Length ~ iris$Species, 
        notch = T)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-95-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You may have noticed that the y-axis labels are always orientated to be perpendicular to the axis. We can rotate all axis labels using the &lt;code&gt;las&lt;/code&gt; option.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(iris$Sepal.Length ~ iris$Species, 
        notch = T,
        las = 1) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-96-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we can add in all the axis and plot labels…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(iris$Sepal.Length ~ iris$Species, 
        notch = T,
        las = 1,
        xlab = &amp;quot;Species&amp;quot;, 
        ylab = &amp;quot;Sepal Length&amp;quot;, 
        main = &amp;quot;Sepal Length by Species in Iris&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-97-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;…and change sizes&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(iris$Sepal.Length ~ iris$Species, 
        notch = T,
        las = 1,
        xlab = &amp;quot;Species&amp;quot;, 
        ylab = &amp;quot;Sepal Length&amp;quot;, 
        main = &amp;quot;Sepal Length by Species in Iris&amp;quot;,
        cex.lab = 1.5,
        cex.axis = 1.5,
        cex.main = 2) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-98-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;plot-options&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plot Options&lt;/h1&gt;
&lt;div id=&#34;rendering-more-than-one-plot-in-a-window&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Rendering more than one plot in a window&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# number of rows, number of columns
par(mfrow=c(1,2))

plot(
     # x variable, y variable
     iris$Sepal.Length, iris$Petal.Length, 
     
      # color by species
     col = iris$Species,     
     
     # plot title
     main = &amp;quot;Sepal vs Petal Length in Iris&amp;quot;
     )      

plot(
    # x variable, y variable
     iris$Sepal.Length, iris$Petal.Length, 
     
      # color by species
     col = iris$Species,     
     
     # plot title
     main = &amp;quot;Sepal vs Petal Length in Iris&amp;quot;
     )        &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-99-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Adding the following sets the plot window back to normal&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow=c(1,1))    

plot(
     # x variable, y variable
     iris$Sepal.Length, iris$Petal.Length, 
     
      # color by species
     col = iris$Species,     
     
     # plot title
     main = &amp;quot;Sepal vs Petal Length in Iris&amp;quot;
     )   &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/02-example_files/figure-html/unnamed-chunk-100-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;or you can just clear the plot history by running&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dev.off()       &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## null device 
##           1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Remember Algebra?&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Now with 22% more linear regression&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplotting</title>
      <link>https://edp693e.theoreticalphysed.com/example/03-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/example/03-example/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-prepped&#34;&gt;Getting Prepped&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-things-first-set-your-working-directory&#34;&gt;First Things First! Set your Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#download-the-script&#34;&gt;Download the script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#load-up-some-libraries&#34;&gt;Load Up Some Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#its-all-about-layers&#34;&gt;Its All About Layers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#example-diamonds&#34;&gt;Example: Diamonds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#another-example-bar-plots&#34;&gt;Another Example: Bar Plots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#yet-another-example-more-bar-plots&#34;&gt;Yet Another Example: More Bar Plots!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#comparisons-using-bar-charts&#34;&gt;Comparisons Using Bar Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#adding-values&#34;&gt;Adding Values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:   #003277;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}
&lt;/style&gt;
&lt;div id=&#34;getting-prepped&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Prepped&lt;/h1&gt;
&lt;div id=&#34;first-things-first-set-your-working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Things First! Set your Working Directory&lt;/h2&gt;
&lt;p&gt;Your &lt;em&gt;working directory&lt;/em&gt; is simply where your script will look for anything it needs like external data sets. There are a few ways to go about doing this which we will cover. However for now, just do the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up a new script by going to &lt;code&gt;File &amp;gt; New File &amp;gt; R Script&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save it in a preferably empty folder as whatever you want.&lt;/li&gt;
&lt;li&gt;Go to the menu bar and select &lt;code&gt;Session &amp;gt; Set Working Directory &amp;gt; To Source File Location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;download-the-script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download the script&lt;/h2&gt;
&lt;p&gt;Copying and pasting syntax from a browser can cause problems. To avoid this issue, please download a script with all of the needed code presented in this walkthrough.&lt;/p&gt;
&lt;a href=&#34;data:text/plain;base64,&#34; download=&#34;Week 3 Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;load-up-some-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Up Some Libraries&lt;/h2&gt;
&lt;p&gt;Please go ahead and download the libraries below you don’t have and load them up&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(cowplot)
library(RColorBrewer)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;its-all-about-layers&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Its All About Layers&lt;/h1&gt;
&lt;center&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/ggplothavelayers.png&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;ggplot runs on layers&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We’ll work on this throughout the term, but here is a basic picture of the framework&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/ggplot_layers.png&#34; title=&#34;fig:&#34; alt=&#34;layers of ggplot2&#34; /&gt;
&lt;/center&gt;
&lt;div id=&#34;example-diamonds&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example: Diamonds&lt;/h2&gt;
&lt;p&gt;We’ll use the &lt;em&gt;diamonds&lt;/em&gt; data set that’s included in &lt;code&gt;ggplot&lt;/code&gt;, in particular we’ll start with this plot with a bunch of foundational commands&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  layer(
    data = diamonds, 
    mapping = aes(x = carat, y = price),
    geom = &amp;quot;point&amp;quot;,  
    stat = &amp;quot;identity&amp;quot;, 
    position = &amp;quot;identity&amp;quot; ) +
  scale_y_continuous() +
  scale_x_continuous() +
  coord_cartesian()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;which can be condensed to&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds, 
  mapping = aes(x = carat, y = price)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can get &lt;em&gt;lazy&lt;/em&gt; about arguments, in that &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are always the first arguments to &lt;code&gt;aes&lt;/code&gt; so we often drop the argument names&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;another-example-bar-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Another Example: Bar Plots&lt;/h2&gt;
&lt;p&gt;First we’ll make up a totally fake data set. Please pay close attention to the structure and what everything means.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- structure(list(V1 = c(34.88372093, 
                              35.07751938, 
                              35.27131783, 
                              35.46511628, 
                              35.65891473, 
                              35.85271318), 
                       V2 = c(0.00029997, 
                              0.00019998, 
                              0.00029997, 
                              0.00029997, 
                              0.00069993, 
                              0.00069993)), 
                      .Names = c(&amp;quot;Perc&amp;quot;, &amp;quot;Prop&amp;quot;), 
                  row.names = c(NA, 6L), 
                  class = &amp;quot;data.frame&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and view it!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(data)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above says: I want a structure a list with two columns with variable Names V1 and V2 with the associated values in columns (given by c). Moreover, I want to name those columns &lt;strong&gt;Prop&lt;/strong&gt; and &lt;strong&gt;Perc&lt;/strong&gt;, with no row names (NA) and of length 6 (6 rows given by 6L). Finally, and possibly most importantly, it has to be a data frame!&lt;/p&gt;
&lt;p&gt;Now let’s look at a barplot of the data using&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Base R&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;barplot(data$Perc, 
        data$Perc, 
        xlab=&amp;quot;Percentage&amp;quot;, 
        ylab=&amp;quot;Proportion&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;ggplot&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data, aes(x=Perc, y=Prop)) + 
  geom_bar(stat=&amp;quot;identity&amp;quot;) + 
  labs(x=&amp;quot;Percentage&amp;quot;, y=&amp;quot;Proportion&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now let’s try colors by using the &lt;em&gt;Perc&lt;/em&gt; column&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data, aes(x=Perc, y=Prop, fill = Perc)) + 
  geom_bar(stat=&amp;quot;identity&amp;quot;) + 
  labs(x=&amp;quot;Percentage&amp;quot;, y=&amp;quot;Proportion&amp;quot;) +
  scale_color_brewer()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;yet-another-example-more-bar-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Yet Another Example: More Bar Plots!&lt;/h2&gt;
&lt;p&gt;Please download the libraries below you don’t have and load them up&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(xlsx)           # for reading in Excel data
library(magrittr)       # for easier syntax in one or two areas
library(gridExtra)      # old method for generating some comparison plots
library(patchwork)      # new method for generating some comparison plots
library(ggplot2)        # for generating the visualizations
library(viridis)        # because colors are fun!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’ll use the mtcars data set. It is a standard example set that comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we wanted to get the count of vehicles that have 4, 6 and 8 cylinders we can simply identify the &lt;em&gt;x&lt;/em&gt;-axis variable and apply &lt;code&gt;geom_bar()&lt;/code&gt;. This, by default will plot the count of 4, 6, and 8 cylinder vehicles in the data set. However, note that if the variable is numeric it may be interpreted as a continuous variable. This is the case in the first plot you will do below which is why the x-axis is continuous in nature. However, we can force the cylinder variable to a categorical (factor) variable by applying &lt;code&gt;x = factor(cyl)&lt;/code&gt; using the second plot you will do below which produces a discrete &lt;em&gt;x&lt;/em&gt;-axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# x-axis as continuous
p1 &amp;lt;- ggplot(mtcars, aes(x = cyl)) +
  geom_bar() +
  ggtitle(&amp;quot;Fig. A: x-axis as a continuous variable&amp;quot;)

# x-axis as discrete
p2 &amp;lt;- ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar() +
  ggtitle(&amp;quot;Fig B: x-axis as a discrete (factor) variable&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;We’ll see how to deal with the cut off text later&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We’ll display the results in two ways&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using the &lt;strong&gt;gridExtra&lt;/strong&gt; package&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;grid.arrange(p1, p2, ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Using the &lt;strong&gt;patchwork&lt;/strong&gt; package&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1 + p2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Although the default width of the bars is aesthetically pleasing, you do have the ability to adjust this attribute by setting the width in &lt;code&gt;geom_bar()&lt;/code&gt;. The default width is 0.9;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;smaller values (min width of 0) make the bars narrower and&lt;/li&gt;
&lt;li&gt;larger values (max width of 1) make the bars wider.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are some examples&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e1 &amp;lt;- ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(width = .5) +
  ggtitle(&amp;quot;bar width = 0.5&amp;quot;)

e2 &amp;lt;- ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(width = .75) +
  ggtitle(&amp;quot;bar width = 0.75&amp;quot;)

e3 &amp;lt;- ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(width = .9) +
  ggtitle(&amp;quot;bar width = 0.9&amp;quot;)

e4 &amp;lt;- ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(width = .99) +
  ggtitle(&amp;quot;bar width = 0.99&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e1 + e2 + e3 + e4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e1 + e2 + e3 + e4 + plot_layout(ncol = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;e1 + e2 + e3 + e4 + plot_layout(nrow = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Take a look at some more examples over at the &lt;strong&gt;patchwork&lt;/strong&gt; &lt;a href=&#34;#%20https://patchwork.data-imaginist.com/articles/guides/assembly.html&#34; target=&#34;_blank&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can also adjust the fill and outline colors of the bars along with the opacity by applying &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, and &lt;code&gt;alpha&lt;/code&gt; arguments respectively in the &lt;code&gt;geom_bar()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(x = factor(cyl))) +
  geom_bar(fill = &amp;quot;dodgerblue&amp;quot;, 
           color = &amp;quot;grey40&amp;quot;, 
           alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are also times when we want to plot many categories along the x-axis and the length of the names make it difficult to read. One approach to resolving this issue is to use &lt;code&gt;axis.text.x&lt;/code&gt; argument within the &lt;code&gt;theme()&lt;/code&gt; function to rotate the text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t1 &amp;lt;- ggplot(mtcars, aes(x = row.names(mtcars), y = mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  ggtitle(&amp;quot;Fig. A: Default x-axis&amp;quot;)

t1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t2 &amp;lt;- ggplot(mtcars, aes(x = row.names(mtcars), y = mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5)) +
  ggtitle(&amp;quot;Fig. B: Rotated x-axis&amp;quot;)

t2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-22-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t1 + t2 + plot_layout(ncol = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-22-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, you may hate to read rotated x-axis labels since it can be difficult. In cases like these rotated bar charts are far more appealing. We can rotate the axes by applying the &lt;code&gt;coord_flip()&lt;/code&gt; function, which flips the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates. To make this even easier to digest we can order the vehicles based on their &lt;em&gt;mpg&lt;/em&gt; values as illustrated in the second plot you’ll do below. To do this just reorder the &lt;em&gt;x&lt;/em&gt; variable by applying the &lt;code&gt;reorder()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;r1 &amp;lt;- ggplot(mtcars, aes(x = row.names(mtcars), mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  ggtitle(&amp;quot;Fig. A: Default rotated x-axis&amp;quot;)

# order bars
r2 &amp;lt;- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  ggtitle(&amp;quot;Fig. B: Rotated ordered x-axis&amp;quot;)

r1 + r2 + plot_layout(nrow = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;comparisons-using-bar-charts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comparisons Using Bar Charts&lt;/h2&gt;
&lt;p&gt;Sometimes we want to compare different groups across the categorical variables of interest. This is primarily done via color, side-by-side bars, or stacked bars. To add a color dimension we simply add a fill argument to our first line of code to tell R what variable we want to use to color our bars.&lt;/p&gt;
&lt;p&gt;In this example we compare mpg across all the vehicles but also color the vehicles based on number of cylinders. R will use default color codings but you can&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;set the colors manually using scale_fill_manual as in the second plot you’ll do. But you can also&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;scale_fill_brewer&lt;/code&gt; to color with preset color schemes (see more about ColorBrewer &lt;a href=&#34;http://colorbrewer2.org&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;) and&lt;/li&gt;
&lt;li&gt;many others! (if you type &lt;code&gt;scale_fill&lt;/code&gt; into your RStudio Help search field you will see all the possibilities)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s compare mpg across all cars and color based on cyl&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m1 &amp;lt;- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  theme_minimal() +
  ggtitle(&amp;quot;Fig. A: Default fill colors&amp;quot;)

m2 &amp;lt;- ggplot(mtcars, aes(x = reorder(row.names(mtcars), mpg), y = mpg, fill = factor(cyl))) +
  scale_fill_manual(values = c(&amp;quot;#e5f5e0&amp;quot;, &amp;quot;#a1d99b&amp;quot;, &amp;quot;#31a354&amp;quot;)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  theme_minimal() +
  ggtitle(&amp;quot;Fig. B: Manually set fill colors&amp;quot;)


m1 + m2 + plot_layout(ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can also use side-by-side bars to make comparisons. Say we want to compare the average mpg for cars across the different 4, 6, and 8 cylinder categories but also assess the impact that transmission (variable am where 0 = automatic, 1 = manual) has. we apply the fill argument to color bars based on transmission type then include the &lt;code&gt;position = &#34;dodge&#34;&lt;/code&gt; in the &lt;code&gt;geom_bar()&lt;/code&gt; function. This tells R to have two bars for each cylinder type, color fill each bar based on the type of transmission and then adjust (aka “dodge”) the position of the bars so that they are side-by-side.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t1 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  ggtitle(&amp;quot;Default color comparison&amp;quot;)

# more pleasing colors
t2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  scale_fill_brewer(palette = &amp;quot;Pastel1&amp;quot;) +
  ggtitle(&amp;quot;Adjusted color comparison&amp;quot;)

t1 + t2 + plot_layout(ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can adjust the dodge width by incorporating the &lt;code&gt;position = position_dodge(width = x)&lt;/code&gt; argument in the &lt;code&gt;geom_bar()&lt;/code&gt; function. By default, the width is 0.90 and a lower value will create overlap of your side-by-side bars and a larger value will create spacing between the bars.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;l1 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  ggtitle(&amp;quot;Default dodge positioning&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)

l2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = position_dodge(width = .5)) +
  ggtitle(&amp;quot;Overlap of side-by-side bars&amp;quot;) +
  theme(legend.position = &amp;quot;none&amp;quot;)

l3 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = position_dodge(width = 1)) +
  ggtitle(&amp;quot;Spacing between side-by-side bars&amp;quot;) +
  labs(fill = &amp;quot;AM&amp;quot;) +
  theme(legend.position = c(1,1), legend.justification = c(1,1),
        legend.background = element_blank())


l1 + l2 + l3 + plot_layout(ncol = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Stacked bars are the third common approach to compare groups with bar charts. By default, when you introduce a variable to color fill with in the first line, if you enter no other arguments ggplot will produce a stacked bar chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, the way ggplot color codes the bars is opposite to how the colors are displayed in the legend. We can resolve this two different ways; either reverse the legend with the arguments displayed in the guides() function in your first plotbelow. or specify the direction of the levels when transforming the transmission (am) variable into a factor as displayed in the first line of code in Fig B. Both will align the legend color coding layout to the color coding of the stacked bars but each option also helps determine which color is top versus on the bottom.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# reverse legend color coding layout
q1 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(fill = &amp;quot;am&amp;quot;) +
  ggtitle(&amp;quot;Fig A: Reverse legend&amp;quot;)

# or reverse stacking order by changing the factor levels
q2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  labs(fill = &amp;quot;am&amp;quot;) +
  ggtitle(&amp;quot;Fig B: Specify levels&amp;quot;)

q1 + q2 + plot_layout(ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As before we can change the color of our stacked bars by incorporating one of the many &lt;code&gt;scale_fill_xxxx&lt;/code&gt; arguments. Here I manually specify the colors to apply with &lt;code&gt;scale_fill_manual()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am, levels = c(1, 0)))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  scale_fill_manual(values = c(&amp;quot;#a1d99b&amp;quot;, &amp;quot;#31a354&amp;quot;)) +
  labs(fill = &amp;quot;AM&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-values&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Adding Values&lt;/h2&gt;
&lt;p&gt;Often, it is helpful to provide labels/markers on the bar charts to help the reader interpret the results correctly or just to make it easier to read the graphic. For instance, we can add the actual mpg value to the following vertical bar chart by incorporating the &lt;code&gt;geom_text()&lt;/code&gt; function and telling the function to label each bar with the mpg value. I can also tell ggplot to nudge the values left or right sit within or outside the bar and also color the text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1 &amp;lt;- ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  geom_text(aes(label = mpg), nudge_y = 2)

p2 &amp;lt;- ggplot(mtcars, aes(reorder(row.names(mtcars), mpg), mpg)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;) +
  coord_flip() +
  geom_text(aes(label = mpg), nudge_y = -2, color = &amp;quot;white&amp;quot;)

p1 + p2 + plot_layout(ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Labeling grouped bars is similar, however, we need to add a &lt;code&gt;position = position_dodge(0.9)&lt;/code&gt; argument to the &lt;code&gt;geom_text()&lt;/code&gt; function to tell ggplot to adjust the text location. By default, the values will be centered on the top of the bar but you can adjust the text to the top of the bar by including a &lt;code&gt;vjust = 0.5&lt;/code&gt; argument or adjust the text to within the bar with &lt;code&gt;vjust = 1.5&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9)) +
  ggtitle(&amp;quot;Fig A: Default text alignment&amp;quot;)

p2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
            vjust = 1.5, color = &amp;quot;white&amp;quot;) +
  ggtitle(&amp;quot;Fig B: Adjusted text alignment&amp;quot;)

p1 + p2 + plot_layout(ncol = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can change the colors palettes using hex (aka hexidecimal) colors! Take a look here for an &lt;a href=&#34;https://www.color-hex.com/&#34; target=&#34;_blank&#34;&gt;example&lt;/a&gt;. In this case, we’ll be using the &lt;a href=&#34;https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html&#34; target=&#34;_blank&#34;&gt;viridis color set&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p1 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9)) +
  ggtitle(&amp;quot;Fig A: Default text alignment&amp;quot;)

p2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;D&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
            vjust = 1.5, color = &amp;quot;white&amp;quot;) +
  ggtitle(&amp;quot;Fig B: Adjusted text alignment&amp;quot;)

p2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;*Uh oh! Did you see something that said &lt;code&gt;## Error: Discrete value supplied to continuous scale&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;The error says that we tried to add a continuous scale to discrete values! Well we could use this by either&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Getting rid of the factor&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = am)) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  scale_fill_viridis_c(option = &amp;quot;D&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
            vjust = 1.5, color = &amp;quot;white&amp;quot;) +
  ggtitle(&amp;quot;Fig B: Adjusted text alignment&amp;quot;)

p2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Changing the type of scaling&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p2 &amp;lt;- ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) +
  geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
  scale_fill_viridis_d(option = &amp;quot;D&amp;quot;) +
  geom_text(aes(label = round(mpg, 1)), position = position_dodge(0.9),
            vjust = 1.5, color = &amp;quot;white&amp;quot;) +
  ggtitle(&amp;quot;Fig B: Adjusted text alignment&amp;quot;)

p2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/03-example_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice that the plots are different! Your fill and color variables define how the plot will look!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Much like Adobe Photoshop for those of you who may be familiar with that software.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidy Themes</title>
      <link>https://edp693e.theoreticalphysed.com/example/04-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/example/04-example/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-prepped&#34;&gt;Getting Prepped&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-things-first-set-your-working-directory&#34;&gt;First Things First! Set your Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#download-the-script&#34;&gt;Download the script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#load-up-some-libraries&#34;&gt;Load Up Some Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#using-themes-in-ggwhatever&#34;&gt;Using Themes in ggwhatever&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cleaning-and-inspecting-data&#34;&gt;Cleaning and Inspecting Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#always-inspect-your-data&#34;&gt;Always Inspect your Data!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wrangling-data-by-reduction&#34;&gt;Wrangling Data by Reduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#manual-approach&#34;&gt;Manual Approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prepackaged-approach&#34;&gt;&lt;em&gt;Prepackaged&lt;/em&gt; Approach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-nearly-everyone-does-this-approach&#34;&gt;The Nearly Everyone Does This Approach&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:   #003277;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

* {
  box-sizing: border-box;
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  max-width: 700px;
  background: #efefef;
  box-shadow: 0 48px 80px -32px rgba(0,0,0,0.3);
}

.input {
  position: absolute;
  opacity: 0;
}

.label {
  width: 100%;
  padding: 20px 30px;
  background: #e5e5e5;
  cursor: pointer;
  font-weight: bold;
  font-size: 18px;
  color: #7f7f7f;
  transition: background 0.1s, color 0.1s;
}

.label:hover {
  background: #d8d8d8;
}

.label:active {
  background: #ccc;
}

.input:focus + .label {
  box-shadow: inset 0px 0px 0px 3px #2aa1c0;
  z-index: 1;
}

.input:checked + .label {
  background: #fff;
  color: #000;
}

@media (min-width: 600px) {
  .label {
    width: auto;
  }
}

.panel {
  display: none;
  padding: 20px 30px 30px;
  background: #fff;
}

@media (min-width: 600px) {
  .panel {
    order: 99;
  }
}

.input:checked + .label + .panel {
  display: block;
}
&lt;/style&gt;
&lt;div id=&#34;getting-prepped&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Prepped&lt;/h1&gt;
&lt;div id=&#34;first-things-first-set-your-working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Things First! Set your Working Directory&lt;/h2&gt;
&lt;p&gt;Your &lt;em&gt;working directory&lt;/em&gt; is simply where your script will look for anything it needs like external data sets. There are a few ways to go about doing this which we will cover. However for now, just do the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up a new script by going to &lt;code&gt;File &amp;gt; New File &amp;gt; R Script&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save it in a preferably empty folder as whatever you want.&lt;/li&gt;
&lt;li&gt;Go to the menu bar and select &lt;code&gt;Session &amp;gt; Set Working Directory &amp;gt; To Source File Location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;download-the-script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download the script&lt;/h2&gt;
&lt;p&gt;Copying and pasting syntax from a browser can cause problems. To avoid this issue, please download a script with all of the needed code presented in this walkthrough.&lt;/p&gt;
&lt;a href=&#34;data:text/plain;base64,&#34; download=&#34;Week 4 Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;load-up-some-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Up Some Libraries&lt;/h2&gt;
&lt;p&gt;Please go ahead and download the libraries below you don’t have and load them up&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(viridis)
library(RColorBrewer)
library(ggthemes)
library(ggtext)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;using-themes-in-ggwhatever&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Using Themes in ggwhatever&lt;/h1&gt;
&lt;p&gt;One of the nice aspects of &lt;code&gt;ggplot&lt;/code&gt; is in the fact that you can edit most of the aesthetics. While &lt;code&gt;aes()&lt;/code&gt; let’s you define where those aesthetics lie and the &lt;code&gt;scale&lt;/code&gt; family of commands allows for coloring and how the data is represented, how a plot is displayed is found by &lt;code&gt;theme&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can do this either manually or using a &lt;em&gt;prepackaged&lt;/em&gt; approach where theme options are already defined. In certain situations you can even use both.&lt;/p&gt;
&lt;div id=&#34;cleaning-and-inspecting-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cleaning and Inspecting Data&lt;/h2&gt;
&lt;p&gt;Let’s use a cleaned version of the income data set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;income_data &amp;lt;- read_csv(&amp;quot;income.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## ── Column specification ────────────────────────────────────────────────────────
## cols(
##   Location = col_character(),
##   Lower_2000 = col_double(),
##   Middle_2000 = col_double(),
##   Upper_2000 = col_double(),
##   Lower_2014 = col_double(),
##   Middle_2014 = col_double(),
##   Upper_2014 = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;always-inspect-your-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Always Inspect your Data!&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can inspect the column names using the &lt;code&gt;names()&lt;/code&gt; command&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(income_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Location&amp;quot;    &amp;quot;Lower_2000&amp;quot;  &amp;quot;Middle_2000&amp;quot; &amp;quot;Upper_2000&amp;quot;  &amp;quot;Lower_2014&amp;quot; 
## [6] &amp;quot;Middle_2014&amp;quot; &amp;quot;Upper_2014&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and what type they are using &lt;code&gt;str()&lt;/code&gt; or &lt;code&gt;glimpse()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(income_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 229
## Columns: 7
## $ Location    &amp;lt;chr&amp;gt; &amp;quot;Akron, OH&amp;quot;, &amp;quot;Albany-Schenectady-Troy, NY&amp;quot;, &amp;quot;Albuquerque,…
## $ Lower_2000  &amp;lt;dbl&amp;gt; 19.9, 22.1, 28.6, 23.0, 32.3, 22.0, 21.9, 33.0, 20.0, 29.…
## $ Middle_2000 &amp;lt;dbl&amp;gt; 59.8, 60.1, 55.4, 60.7, 54.7, 58.2, 51.2, 54.6, 56.0, 59.…
## $ Upper_2000  &amp;lt;dbl&amp;gt; 20.3, 17.8, 16.0, 16.2, 13.0, 19.8, 26.9, 12.4, 23.9, 11.…
## $ Lower_2014  &amp;lt;dbl&amp;gt; 24.5, 20.2, 33.0, 25.2, 27.4, 20.3, 25.6, 33.6, 27.0, 30.…
## $ Middle_2014 &amp;lt;dbl&amp;gt; 54.6, 55.1, 50.7, 55.7, 52.6, 55.5, 49.3, 50.5, 50.5, 52.…
## $ Upper_2014  &amp;lt;dbl&amp;gt; 20.9, 24.8, 16.3, 19.1, 20.0, 24.2, 25.1, 16.0, 22.6, 17.…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well 229 rows is a ton of data and a bar plot would look terrible!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(income_data, aes(x = Location, 
                        y = Lower_2000, 
                        fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       xlab(&amp;quot;City and State&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrangling-data-by-reduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Wrangling Data by Reduction&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For simplicity sakes, let’s try just looking at the top 10 &lt;em&gt;highest values&lt;/em&gt; in the &lt;strong&gt;Lower_2000&lt;/strong&gt; column using &lt;code&gt;slice_max()&lt;/code&gt;&lt;a href=&#34;#fn3&#34; class=&#34;footnote-ref&#34; id=&#34;fnref3&#34;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; command.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;not_top10_income_data &amp;lt;- income_data %&amp;gt;%
                         select(Location, Lower_2000) %&amp;gt;%
                         slice_max(Lower_2000, n = 10); not_top10_income_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##    Location                     Lower_2000
##    &amp;lt;chr&amp;gt;                             &amp;lt;dbl&amp;gt;
##  1 McAllen-Edinburg-Mission, TX       53.4
##  2 Laredo, TX                         50.9
##  3 Brownsville-Harlingen, TX          49.8
##  4 Las Cruces, NM                     45.2
##  5 El Centro, CA                      43.9
##  6 Visalia-Porterville, CA            42.9
##  7 El Paso, TX                        42.7
##  8 Madera, CA                         42.5
##  9 Merced, CA                         41.9
## 10 Yuma, AZ                           41.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now please note that this is &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; equivalent to another function we’ve gone over: &lt;code&gt;head()&lt;/code&gt; which would only return the top 10 &lt;em&gt;rows&lt;/em&gt;, &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; the top 10 &lt;em&gt;highest values&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top10_income_data &amp;lt;- income_data %&amp;gt;%
                     select(Location, Lower_2000) %&amp;gt;%
                     head(10); top10_income_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##    Location                          Lower_2000
##    &amp;lt;chr&amp;gt;                                  &amp;lt;dbl&amp;gt;
##  1 Akron, OH                               19.9
##  2 Albany-Schenectady-Troy, NY             22.1
##  3 Albuquerque, NM                         28.6
##  4 Allentown-Bethlehem-Easton, PA-NJ       23  
##  5 Amarillo, TX                            32.3
##  6 Anchorage, AK                           22  
##  7 Ann Arbor, MI                           21.9
##  8 Anniston-Oxford-Jacksonville, AL        33  
##  9 Atlanta-Sandy Springs-Roswell, GA       20  
## 10 Atlantic City-Hammonton, NJ             29.3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s plot the wrangled data set&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = Location, 
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That looks good but it could be better. Recall with a &lt;code&gt;scale&lt;/code&gt; command you can color the bars&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = Location, 
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       scale_fill_viridis_c() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well the colors are arguably better, though there are &lt;a href=&#34;https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html&#34;&gt;other palettes&lt;/a&gt; the &lt;code&gt;viridis&lt;/code&gt; package provides. We can also reorder the bars from greatest to least or vice versa using the &lt;code&gt;reorder()&lt;/code&gt; command&lt;a href=&#34;#fn4&#34; class=&#34;footnote-ref&#34; id=&#34;fnref4&#34;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-1&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-1&#34; class=&#34;label&#34;&gt;Bars from Greatest to Least&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       scale_fill_viridis_c() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-2&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-2&#34; class=&#34;label&#34;&gt;Bars from Least to Greatest&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       scale_fill_viridis_c() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;Well that’s great but with the grey background, overlapping text on the axis, etc., its certainly not really presentation worthy. Luckily we can use the &lt;code&gt;theme()&lt;/code&gt; option to edit it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;manual-approach&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Manual Approach&lt;/h2&gt;
&lt;p&gt;If you like controlling every little aspect of an experience, then you may be a &lt;em&gt;ggplot control freak&lt;/em&gt; and the manual approach is perfect!&lt;/p&gt;
&lt;p&gt;To get a feel for what options you have, try running the following&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;?theme&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Scroll down to &lt;strong&gt;Usage&lt;/strong&gt; to see the commands and &lt;strong&gt;Arguments&lt;/strong&gt; to see a description of each. If you don’t like the tiny Help window or find it convoluted, try giving the &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/theme.html&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;tidyverse&lt;/code&gt; Reference&lt;/a&gt; site a look. It has some additional examples as well, though they may or may not be helpful depending on your needs.&lt;/p&gt;
&lt;p&gt;In the following, we’ll use the descending data set and &lt;code&gt;themes()&lt;/code&gt; to fix it up a bit&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       scale_fill_viridis_c() +
       theme(axis.text.x = element_text(angle = 33,
                                        face = &amp;quot;bold&amp;quot;,
                                        vjust = 0.5),
             axis.title = element_text(size = 14,
                                       face = &amp;quot;bold&amp;quot;),
             legend.position = &amp;quot;right&amp;quot;,
             legend.direction = &amp;quot;vertical&amp;quot;,
             panel.grid.minor.x = element_blank(),
             panel.grid.minor.y = element_line(),
             panel.grid.major.x = element_blank(),
             panel.grid.major.y = element_line()) +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well that’s slightly better but its certainly flawed. For example, it is not immediately clear which values on the &lt;em&gt;x&lt;/em&gt;-axis goes where. We can do a lot more and we’ll get to it in a bit.&lt;/p&gt;
&lt;p&gt;If you would like to have more of a drag and drop experience while learning themes in &lt;code&gt;ggplot2&lt;/code&gt;, consider downloading and running the package &lt;a href=&#34;https://github.com/dreamRs/esquisse&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;esquisse&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prepackaged-approach&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;em&gt;Prepackaged&lt;/em&gt; Approach&lt;/h2&gt;
&lt;p&gt;If you fine with having someone else mostly control an experience allowing you to tinker here and there, then you may be a &lt;em&gt;ggplot doodler&lt;/em&gt; and the prepackaged approach is likely a great fit!&lt;/p&gt;
&lt;p&gt;It may be that you don’t like the default &lt;code&gt;ggplot&lt;/code&gt; output but would rather not go through the process of editing every little thing. In these cases you can use &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/ggtheme.html&#34; target=&#34;_blank&#34;&gt;predefined themes within &lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ggthemes&lt;/code&gt; package&lt;/a&gt;, though there are others. You can see how the the original &lt;code&gt;top10_income_data&lt;/code&gt; set looks with these themes.&lt;/p&gt;
&lt;div id=&#34;default-in-ggplot2&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Default in &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h4&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-3&#34; checked=&#34;checked&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-3&#34; class=&#34;label&#34;&gt; Grey Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_grey() + # or theme_gray()
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-4&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-4&#34; class=&#34;label&#34;&gt;Black and White Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_bw() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-5&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-5&#34; class=&#34;label&#34;&gt;Linedraw Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_linedraw() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-6&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-6&#34; class=&#34;label&#34;&gt;Light Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_light() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-7&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-7&#34; class=&#34;label&#34;&gt;Dark Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_dark() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-8&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-8&#34; class=&#34;label&#34;&gt;Minimal Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_minimal() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-9&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-9&#34; class=&#34;label&#34;&gt;Classic Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_classic() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-10&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-10&#34; class=&#34;label&#34;&gt;Void Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_void() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;div id=&#34;using-ggthemes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Using &lt;code&gt;ggthemes&lt;/code&gt;&lt;/h4&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-11&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-11&#34; class=&#34;label&#34;&gt;Few Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_few() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-12&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-12&#34; class=&#34;label&#34;&gt;Five Thirty Eight Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_fivethirtyeight() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-13&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-13&#34; class=&#34;label&#34;&gt;Google Docs Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_gdocs() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-14&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-14&#34; class=&#34;label&#34;&gt;Highcharts JS Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_hc() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-15&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-15&#34; class=&#34;label&#34;&gt;Inverse Grey Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_igray() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-16&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-16&#34; class=&#34;label&#34;&gt;Solarized Palette Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_solarized() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-17&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-17&#34; class=&#34;label&#34;&gt;Solid Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_solid() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-18&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-18&#34; class=&#34;label&#34;&gt;Stata Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_tufte() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;div class=&#34;tabs&#34;&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-19&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-19&#34; class=&#34;label&#34;&gt;Tufte Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_tufte() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-20&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-20&#34; class=&#34;label&#34;&gt;Wall Street Journal Theme&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_wsj() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;input name=&#34;tabs&#34; type=&#34;radio&#34; id=&#34;tab-21&#34; class=&#34;input&#34;/&gt;
&lt;label for=&#34;tab-21&#34; class=&#34;label&#34;&gt;Excel Theme&lt;a href=&#34;#fn5&#34; class=&#34;footnote-ref&#34; id=&#34;fnref5&#34;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/label&gt;
&lt;div class=&#34;panel&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(stat = &amp;quot;identity&amp;quot;) +
       theme_excel() +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-nearly-everyone-does-this-approach&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Nearly Everyone Does This Approach&lt;/h2&gt;
&lt;p&gt;If you are great with controlling when needed and allowing others to control an experience, then the traditional path of least resistance outlook on ggplot will do just fine!&lt;/p&gt;
&lt;p&gt;You can in many circumstances combine manual and &lt;em&gt;prepackaged&lt;/em&gt; themes together. The extent to which you can do this often varies by theme. In any case, let’s see the &lt;code&gt;fivethirtyeight&lt;/code&gt; theme with some manual edits.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(position = &amp;#39;dodge&amp;#39;,
                stat = &amp;quot;identity&amp;quot;) +
       scale_fill_viridis_c() +
       theme_fivethirtyeight() +
       theme(axis.text.x = element_text(angle = 45,
                                        vjust = 0.5),
             legend.position = &amp;quot;right&amp;quot;,
             legend.direction = &amp;quot;vertical&amp;quot;) +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;) +       
       guides(fill=guide_legend(title=&amp;quot;Income&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-36-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Or sometimes controlling the text itself is nice too but we’ll cover that soon. In the meantime, here’s a preview&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(top10_income_data, aes(x = reorder(Location, -Lower_2000),
                              y = Lower_2000, 
                              fill = Lower_2000)) +
       geom_bar(position = &amp;#39;dodge&amp;#39;,
                width = 0.9,
                stat = &amp;quot;identity&amp;quot;,
                color = &amp;quot;#FFFFFF&amp;quot;) +
       geom_richtext(aes(label = Location),
                     color = &amp;quot;#FFFFFF&amp;quot;,
                     position = position_dodge(width = 0.9), 
                     hjust = 0,
                     vjust = -0.1,
                     angle = 45,
                     fontface = &amp;quot;bold&amp;quot;,
                     show.legend = FALSE) +
       scale_fill_gradient(low = &amp;quot;#52bf90&amp;quot;,
                           high = &amp;quot;#317256&amp;quot;) +
       theme_minimal() +
       theme(axis.text.x = element_blank(),
             axis.title = element_text(size = 14,
                                       face = &amp;quot;bold&amp;quot;),
             legend.position = &amp;quot;right&amp;quot;,
             legend.direction = &amp;quot;vertical&amp;quot;,
             panel.grid.minor.x = element_blank(),
             panel.grid.minor.y = element_line(),
             panel.grid.major.x = element_blank(),
             panel.grid.major.y = element_line()) +
       xlab(&amp;quot;Top 10 Cities and States&amp;quot;) +
       ylab(&amp;quot;Average Income in 2000 Lower Class&amp;quot;) +       
       guides(fill = guide_legend(title = &amp;quot;Income&amp;quot;,
                                  reverse = TRUE)) + 
       expand_limits(x=c(0,14), 
                     y=c(0, 60))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/04-example_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;This includes opening up the data set and viewing a corresponding codebook if available.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;While you’ve likely heard it before many many many times, it is generally unethical, not to mention statistically destructive to throw out any data without using proper methodology and reasoning&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn3&#34;&gt;&lt;p&gt;or you can use &lt;code&gt;slice_min()&lt;/code&gt; for the &lt;em&gt;lowest values&lt;/em&gt;&lt;a href=&#34;#fnref3&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn4&#34;&gt;&lt;p&gt;We can actually do this in many ways. This particular method is called the &lt;code&gt;data.table&lt;/code&gt; approach.&lt;a href=&#34;#fnref4&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn5&#34;&gt;&lt;p&gt;For some reason&lt;a href=&#34;#fnref5&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Making Copies</title>
      <link>https://edp693e.theoreticalphysed.com/example/05-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/example/05-example/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-prepped&#34;&gt;Getting Prepped&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-things-first-set-your-working-directory&#34;&gt;First Things First! Set your Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#download-the-script&#34;&gt;Download the script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#load-up-some-libraries&#34;&gt;Load Up Some Libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part-1-more-ggplotting&#34;&gt;Part 1: More ggplotting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#finding-variables&#34;&gt;Finding variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#getting-counts&#34;&gt;Getting counts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-using-r-to-test-hypotheses&#34;&gt;Example: Using R to Test Hypotheses&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hypothesis&#34;&gt;Hypothesis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploring-the-data&#34;&gt;Exploring the Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part-2-aesthetics&#34;&gt;Part 2: Aesthetics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:   #003277;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

* {
  box-sizing: border-box;
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  max-width: 700px;
  background: #efefef;
  box-shadow: 0 48px 80px -32px rgba(0,0,0,0.3);
}

.input {
  position: absolute;
  opacity: 0;
}

.label {
  width: 100%;
  padding: 20px 30px;
  background: #e5e5e5;
  cursor: pointer;
  font-weight: bold;
  font-size: 18px;
  color: #7f7f7f;
  transition: background 0.1s, color 0.1s;
}

.label:hover {
  background: #d8d8d8;
}

.label:active {
  background: #ccc;
}

.input:focus + .label {
  box-shadow: inset 0px 0px 0px 3px #2aa1c0;
  z-index: 1;
}

.input:checked + .label {
  background: #fff;
  color: #000;
}

@media (min-width: 600px) {
  .label {
    width: auto;
  }
}

.panel {
  display: none;
  padding: 20px 30px 30px;
  background: #fff;
}

@media (min-width: 600px) {
  .panel {
    order: 99;
  }
}

.input:checked + .label + .panel {
  display: block;
}
&lt;/style&gt;
&lt;div id=&#34;getting-prepped&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Prepped&lt;/h1&gt;
&lt;div id=&#34;first-things-first-set-your-working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Things First! Set your Working Directory&lt;/h2&gt;
&lt;p&gt;Your &lt;em&gt;working directory&lt;/em&gt; is simply where your script will look for anything it needs like external data sets. There are a few ways to go about doing this which we will cover. However for now, just do the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up a new script by going to &lt;code&gt;File &amp;gt; New File &amp;gt; R Script&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save it in a preferably empty folder as whatever you want.&lt;/li&gt;
&lt;li&gt;Go to the menu bar and select &lt;code&gt;Session &amp;gt; Set Working Directory &amp;gt; To Source File Location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;download-the-script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download the script&lt;/h2&gt;
&lt;p&gt;Copying and pasting syntax from a browser can cause problems. To avoid this issue, please download a script with all of the needed code presented in this walkthrough.&lt;/p&gt;
&lt;a href=&#34;data:text/plain;base64,&#34; download=&#34;Week 4 Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;load-up-some-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Up Some Libraries&lt;/h2&gt;
&lt;p&gt;Please go ahead and download the libraries below you don’t have and load them up&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;part-1-more-ggplotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Part 1: More ggplotting&lt;/h1&gt;
&lt;p&gt;Scenario: Do cars with big engines use more fuel than cars with small engines?&lt;/p&gt;
&lt;p&gt;OK so you probably know the answer but let’s make the justification as precise as possible.&lt;/p&gt;
&lt;p&gt;Let’s use the &lt;code&gt;mpg&lt;/code&gt; data frame found in &lt;code&gt;ggplot2&lt;/code&gt;.
The data frame contains observations collected by the US Environment Protection Agency on 38 car models. To see all of the unique values, we can run&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(mpg$manufacturer)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;audi&amp;quot;       &amp;quot;chevrolet&amp;quot;  &amp;quot;dodge&amp;quot;      &amp;quot;ford&amp;quot;       &amp;quot;honda&amp;quot;     
##  [6] &amp;quot;hyundai&amp;quot;    &amp;quot;jeep&amp;quot;       &amp;quot;land rover&amp;quot; &amp;quot;lincoln&amp;quot;    &amp;quot;mercury&amp;quot;   
## [11] &amp;quot;nissan&amp;quot;     &amp;quot;pontiac&amp;quot;    &amp;quot;subaru&amp;quot;     &amp;quot;toyota&amp;quot;     &amp;quot;volkswagen&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which is equivalent to the following as a &lt;code&gt;tibble&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg %&amp;gt;%
  select(manufacturer) %&amp;gt;%
  distinct()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 15 x 1
##    manufacturer
##    &amp;lt;chr&amp;gt;       
##  1 audi        
##  2 chevrolet   
##  3 dodge       
##  4 ford        
##  5 honda       
##  6 hyundai     
##  7 jeep        
##  8 land rover  
##  9 lincoln     
## 10 mercury     
## 11 nissan      
## 12 pontiac     
## 13 subaru      
## 14 toyota      
## 15 volkswagen&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;finding-variables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finding variables&lt;/h2&gt;
&lt;p&gt;We can use &lt;code&gt;glimpse&lt;/code&gt; to see more about each variable&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 234
## Columns: 11
## $ manufacturer &amp;lt;chr&amp;gt; &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, …
## $ model        &amp;lt;chr&amp;gt; &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4 quattro&amp;quot;, …
## $ displ        &amp;lt;dbl&amp;gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0, 2…
## $ year         &amp;lt;int&amp;gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, 20…
## $ cyl          &amp;lt;int&amp;gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, 8,…
## $ trans        &amp;lt;chr&amp;gt; &amp;quot;auto(l5)&amp;quot;, &amp;quot;manual(m5)&amp;quot;, &amp;quot;manual(m6)&amp;quot;, &amp;quot;auto(av)&amp;quot;, &amp;quot;aut…
## $ drv          &amp;lt;chr&amp;gt; &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;…
## $ cty          &amp;lt;int&amp;gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, …
## $ hwy          &amp;lt;int&amp;gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25, …
## $ fl           &amp;lt;chr&amp;gt; &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;…
## $ class        &amp;lt;chr&amp;gt; &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-counts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting counts&lt;/h2&gt;
&lt;p&gt;We can use a quick(ish) plot of the manufacturers and how many of each is represented in the data set&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = manufacturer, fill = manufacturer)) +
  geom_bar() +
  geom_text(stat = &amp;#39;count&amp;#39;, 
             aes(label = after_stat(count)), 
             vjust = -0.5) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, 
                                   vjust = 1.3,
                                   hjust = 1)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/05-example_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;but sometimes its just easier to use &lt;code&gt;dplyr&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg %&amp;gt;%
  select(manufacturer) %&amp;gt;%
  group_by(manufacturer) %&amp;gt;%
  tally() %&amp;gt;%
  ungroup()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 15 x 2
##    manufacturer     n
##  * &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
##  1 audi            18
##  2 chevrolet       19
##  3 dodge           37
##  4 ford            25
##  5 honda            9
##  6 hyundai         14
##  7 jeep             8
##  8 land rover       4
##  9 lincoln          3
## 10 mercury          4
## 11 nissan          13
## 12 pontiac          5
## 13 subaru          14
## 14 toyota          34
## 15 volkswagen      27&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which is basically saying&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Get the `mpg` tibble %&amp;gt;%
  Only show me the column `manufacturer` %&amp;gt;%
   Perform any wrangling by car manufacturer %&amp;gt;%
   Count by car manufacturer %&amp;gt;%
   Dont do any more wrangling by car manufacturer&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last step is somewhat important. R remembers certain things and grouping is one of them so its a good idea to &lt;code&gt;ungroup()&lt;/code&gt; columns unless you know that is needed.&lt;/p&gt;
&lt;p&gt;So what would happen if we didn’t group? Well let’s see&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg %&amp;gt;%
  select(manufacturer) %&amp;gt;%
  tally() &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 1
##       n
##   &amp;lt;int&amp;gt;
## 1   234&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It just gave us a full count of all cars. So grouping is a lifesaver if you want to perform any operations by the values in a column.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-using-r-to-test-hypotheses&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example: Using R to Test Hypotheses&lt;/h2&gt;
&lt;p&gt;Notice from the output&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;manufacturer&amp;quot; &amp;quot;model&amp;quot;        &amp;quot;displ&amp;quot;        &amp;quot;year&amp;quot;         &amp;quot;cyl&amp;quot;         
##  [6] &amp;quot;trans&amp;quot;        &amp;quot;drv&amp;quot;          &amp;quot;cty&amp;quot;          &amp;quot;hwy&amp;quot;          &amp;quot;fl&amp;quot;          
## [11] &amp;quot;class&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;that&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;displ&lt;/code&gt;: a car’s engine size in liters.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hwy&lt;/code&gt;: a car’s fuel efficiency on the highway, in miles per gallon (mpg).&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;hypothesis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Hypothesis&lt;/h3&gt;
&lt;p&gt;In all cases, a car with a low fuel efficiency consumes more fuel than a car with a high fuel efficiency when they travel the same distance.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exploring-the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Exploring the Data&lt;/h3&gt;
&lt;p&gt;Let’s take the variables &lt;code&gt;displ&lt;/code&gt; and &lt;code&gt;hwy&lt;/code&gt; and try to use them in plots&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) + 
  geom_point(aes(x = displ, y = hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/05-example_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So what happened here? Well we simply put &lt;code&gt;displ&lt;/code&gt; on the &lt;em&gt;x&lt;/em&gt;-axis and hwy on the &lt;em&gt;y&lt;/em&gt;-axis to compare them using points. The plot shows a negative relationship between engine size (displ) and fuel efficiency (hwy). In other words, cars with big engines use more fuel. Does this confirm or refute the hypothesis about fuel efficiency and engine size?&lt;/p&gt;
&lt;div id=&#34;part-1-questions-for-you-to-turn-in&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Part 1 Questions for You to Turn In&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Run &lt;code&gt;ggplot(data = mpg)&lt;/code&gt;. What do you see and why is it that way?&lt;/li&gt;
&lt;li&gt;How many rows are in mpg? How many columns?&lt;/li&gt;
&lt;li&gt;What does the drv variable describe?&lt;/li&gt;
&lt;li&gt;Make a scatterplot of &lt;code&gt;hwy&lt;/code&gt; vs &lt;code&gt;cyl.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;What happens if you make a scatterplot of &lt;code&gt;class&lt;/code&gt; vs &lt;code&gt;drv&lt;/code&gt;? Is the plot useful? Why or why not?&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;part-2-aesthetics&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Part 2: Aesthetics&lt;/h1&gt;
&lt;p&gt;Aesthetics are more than just coloring a plot, you can define directions, shapes, sizes, types, and provide a useful way to bring in a third variable into a static two dimensional image.&lt;/p&gt;
&lt;p&gt;So how is this done? Well in a nutshell you can add a third variable to a two dimensional scatterplot by mapping it to an aesthetic. Recall that an &lt;strong&gt;aesthetic&lt;/strong&gt; is a &lt;em&gt;visual property of the objects in your plot&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can convey information about your data by mapping the aesthetics in your plot to the variables in your dataset. For example, you can map the colors of your points to the class variable to reveal the class of each car.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = class)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/05-example_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;
&lt;em&gt;or if you like British English, &lt;code&gt;colour&lt;/code&gt; can be used interchangeably&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As a reminder, to map an aesthetic to a variable, associate the name of the aesthetic to the name of the variable inside &lt;code&gt;aes()&lt;/code&gt;. &lt;code&gt;ggplot2&lt;/code&gt; will automatically assign a unique level of the aesthetic - here a unique color - to each unique value of the variable, a process known as scaling.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggplot2&lt;/code&gt; will also add a legend that explains which levels correspond to which values but you can turn that off as well.&lt;/p&gt;
&lt;p&gt;With that said, we mapped class to the color aesthetic, and though pretty&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; that may not be the best method since the graphic is a bit hard to decipher immediately. Instead, we could have mapped class to the size aesthetic in the same way.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, size = class)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Using size for a discrete variable is not advised.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/example/05-example_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Take some time to change the values in the &lt;code&gt;ggplot&lt;/code&gt; to see how it changes.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;I think&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
