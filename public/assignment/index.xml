<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About the Assignments | Data Visualization</title>
    <link>https://edp693e.theoreticalphysed.com/assignment/</link>
      <atom:link href="https://edp693e.theoreticalphysed.com/assignment/index.xml" rel="self" type="application/rss+xml" />
    <description>About the Assignments</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <image>
      <url>https://edp693e.theoreticalphysed.com/img/course_info.png</url>
      <title>About the Assignments</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/</link>
    </image>
    
    <item>
      <title>Friends Don&#39;t Let Friends Use Pie Charts</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/01-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/assignment/01-assignment/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-timers-note&#34;&gt;First Timers Note&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#class-slack-account-access&#34;&gt;Class Slack Account Access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#find-a-bad-graphic&#34;&gt;Find a bad graphic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;first-timers-note&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Timers Note&lt;/h2&gt;
&lt;p&gt;You’ll see class related tasks posted here on a weekly basis.&lt;/p&gt;
&lt;div id=&#34;class-slack-account-access&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Class Slack Account Access&lt;/h3&gt;
&lt;p&gt;Most important task of the week - well to me at least - is to&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go to the course &lt;a href=&#34;http://2021edp693e.slack.com&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt; account&lt;/li&gt;
&lt;li&gt;Register if you already do not have an account. Note that you do not have to use your WVU account, but its not a bad idea.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;find-a-bad-graphic&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Find a bad graphic&lt;/h3&gt;
&lt;p&gt;Find a bad plot in the media or online.&lt;br /&gt;
Submit via eCampus a &lt;code&gt;.pdf&lt;/code&gt; or &lt;code&gt;.docx&lt;/code&gt; (Word) document that includes:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;A cover page with your name and a title in the upper left hand corner.&lt;/li&gt;
&lt;li&gt;A copy of your plot.&lt;/li&gt;
&lt;li&gt;Information on the source (a citation or webpage address).&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Short succinct answers to the following questions:
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Is it bad because it is misleading, or because it is unclear or both?&lt;/li&gt;
&lt;li&gt;How would you improve it?&lt;/li&gt;
&lt;li&gt;What rules (from Wainer’s paper) does it follow and which principles (Chapter 2 in Tufte) does it violate?&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please post a copy of your entire task to the Slack channel &lt;a href=&#34;http://2021edp693e.slack.com/archives/C01K23SKK1D&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;#week1-class-task&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Base R is a Thing</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/02-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/assignment/02-assignment/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#create-plots-in-base-r&#34;&gt;Create Plots in Base R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #733367;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}
&lt;/style&gt;
&lt;div id=&#34;create-plots-in-base-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create Plots in Base R&lt;/h3&gt;
&lt;p&gt;Use the file &lt;code&gt;AlcoholConsumption.csv&lt;/code&gt; to create three plots such that two are misleading or misrepresent the data while the other is indicative of what the data truly is. You are asked to stick to Base R even if you have working knowledge of &lt;code&gt;tidyverse&lt;/code&gt; commands, though this is not a requirement. Please submit this as a single R script replacing only the areas that ask you to do so.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Replace this with your name 

# Misleading/misrepresented 1 ----
## Put your entire code for the plot under this line ----

# ~ Replace this with a basic explanation of why it is misleading and/or misrepresented ----

# --

# Misleading/misrepresented 2 ----
## ## Put your entire code for the plot under this line ----

# ~ A basic explanation of why it is misleading and/or misrepresented ----

# --

# True version ----
## ## Put your entire code for the plot under this line ----

# ~ A basic explanation of why it is misleading and/or misrepresented ----&lt;/code&gt;&lt;/pre&gt;
&lt;a href=&#34;data:text/plain;base64,IyBSZXBsYWNlIHRoaXMgd2l0aCB5b3VyIG5hbWUgCgojIE1pc2xlYWRpbmcvbWlzcmVwcmVzZW50ZWQgMSAtLS0tCiMjIFB1dCB5b3VyIGVudGlyZSBjb2RlIGZvciB0aGUgcGxvdCB1bmRlciB0aGlzIGxpbmUgLS0tLQoKIyB+IFJlcGxhY2UgdGhpcyB3aXRoIGEgYmFzaWMgZXhwbGFuYXRpb24gb2Ygd2h5IGl0IGlzIG1pc2xlYWRpbmcgYW5kL29yIG1pc3JlcHJlc2VudGVkIC0tLS0KCiMgLS0KCiMgTWlzbGVhZGluZy9taXNyZXByZXNlbnRlZCAyIC0tLS0KIyMgIyMgUHV0IHlvdXIgZW50aXJlIGNvZGUgZm9yIHRoZSBwbG90IHVuZGVyIHRoaXMgbGluZSAtLS0tCgojIH4gQSBiYXNpYyBleHBsYW5hdGlvbiBvZiB3aHkgaXQgaXMgbWlzbGVhZGluZyBhbmQvb3IgbWlzcmVwcmVzZW50ZWQgLS0tLQoKCiMgLS0KCiMgVHJ1ZSB2ZXJzaW9uIC0tLS0KIyMgIyMgUHV0IHlvdXIgZW50aXJlIGNvZGUgZm9yIHRoZSBwbG90IHVuZGVyIHRoaXMgbGluZSAtLS0tCgojIH4gQSBiYXNpYyBleHBsYW5hdGlvbiBvZiB3aHkgaXQgaXMgbWlzbGVhZGluZyBhbmQvb3IgbWlzcmVwcmVzZW50ZWQgLS0tLQoKCgo=&#34; download=&#34;Week 2 Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;a href=&#34;data:text/csv;base64,77u/UmVnaW9uLENvdW50cnksQ29uc3VtcHRpb24gaW4gYmlsbGlvbiBsaXRlcnMNCkFzaWEsQ2hpbmEsNTQuMjkNCk5vcnRoIEFtZXJpY2EsVW5pdGVkIFN0YXRlcywzMC41DQpTb3V0aCBBbWVyaWNhLEJyYXppbCwxNC4wNA0KRXVyb3BlLEdlcm1hbnksMTEuNTYNCkV1cmFzaWEsUnVzc2lhLDkuNQ0KQXNpYSxKYXBhbiw4Ljg5DQpDZW50cmFsIEFtZXJpY2EsTWV4aWNvLDguNjENCkV1cm9wZSxVbml0ZWQgS2luZ2RvbSw3LjQ3DQpBc2lhLEluZGlhLDYuMzENCkV1cm9wZSxTcGFpbiw1LjE0&#34; download=&#34;AlcoholConsumption.csv&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Data&lt;/button&gt;
&lt;/a&gt;
&lt;p&gt;&lt;br&gt;
Notice that there are four dashes (&lt;code&gt;----&lt;/code&gt;) after the text in every &lt;code&gt;#&lt;/code&gt; except on the line where you should place your name. This provides a nested outline of your script that is easier to follow, especially if they get long.&lt;/p&gt;
&lt;p&gt;There are a few ways to get to your outline. As you transition from a dependence on your mouse/trackpad to the &lt;em&gt;old school&lt;/em&gt; keyboard, having a working knowledge of shortcuts creates a less disruptive experience than say having to grab that mouse/trackpad everytime you want to do something other than typing. To access the outline of your sections and subsections within an R script, hold down the keys &lt;kbd&gt;control&lt;/kbd&gt; &lt;kbd&gt;shift&lt;/kbd&gt; &lt;kbd&gt;o&lt;/kbd&gt;&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn more about nesting, take a look at this post titled &lt;a href=&#34;%22https://blog.rstudio.com/2020/12/02/rstudio-v1-4-preview-little-things/%22&#34; target=&#34;_blank&#34;&gt;The Little Things&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please submit your script to &lt;a href=&#34;https://ecampus.wvu.edu/&#34; target=&#34;_blank&#34;&gt;eCampus&lt;/a&gt; under &lt;strong&gt;Week 2 Out of Class Task&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;The letter &lt;em&gt;o&lt;/em&gt; not zero.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplotting</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/03-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/assignment/03-assignment/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#create-plots-in-ggplot&#34;&gt;Create Plots in ggplot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #733367;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}
&lt;/style&gt;
&lt;div id=&#34;create-plots-in-ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create Plots in ggplot&lt;/h3&gt;
&lt;p&gt;Use the file &lt;code&gt;Middle-Class-US-Metro-Areas-5-12-16-Supplementary-Tables.xslx&lt;/code&gt; from &lt;a href=&#34;https://www.pewsocialtrends.org/2016/05/11/americas-shrinking-middle-class-a-close-look-at-changes-within-metropolitan-areas/&#34; target=&#34;_blank&#34;&gt;Pew Research on America’s shrinking middle class&lt;/a&gt; to create at least 5 comparisons based on at the data set.&lt;/p&gt;
&lt;p&gt;Please post a single script to &lt;a href=&#34;https://2021edp693e.slack.com/archives/C01MB8CN6D9&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;##wk3-shrinking-middle-class&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: You will have to clean up the data but do not have to do it in R.&lt;/em&gt;&lt;/p&gt;
&lt;a href=&#34;data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,&#34; download=&#34;Middle-Class-US-Metro-Areas-5-12-16-Supplementary-Tables.xlsx&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Data&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Making Copies</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/05-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/assignment/05-assignment/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what-to-do-replicate-using-ggplot&#34;&gt;What to Do: Replicate Using &lt;code&gt;ggplot&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#visualization-choices&#34;&gt;Visualization Choices&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#choice-1-government-data&#34;&gt;Choice 1: Government Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#choice-2-surface-temperatures&#34;&gt;Choice 2: Surface Temperatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#choice-3-average-temperatures&#34;&gt;Choice 3: Average Temperatures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#choice-4-baseball&#34;&gt;Choice 4: Baseball&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-do-it&#34;&gt;How to Do It:&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#more-about-rmarkdown&#34;&gt;More about Rmarkdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #733367;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}
&lt;/style&gt;
&lt;div id=&#34;what-to-do-replicate-using-ggplot&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What to Do: Replicate Using &lt;code&gt;ggplot&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;In this task, you are asked to do three things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pick &lt;strong&gt;one&lt;/strong&gt; of the Plots given in the tabs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Replicate a &lt;strong&gt;static version&lt;/strong&gt; of it using &lt;code&gt;ggplot2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Produce &lt;strong&gt;one alternative visualization&lt;/strong&gt; using the same dataset in &lt;code&gt;ggplot2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;visualization-choices&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualization Choices&lt;/h2&gt;
&lt;div id=&#34;choice-1-government-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Choice 1: Government Data&lt;/h3&gt;
&lt;p&gt;This graphic was published in the &lt;a href=&#34;https://archive.nytimes.com/screenshots/www.nytimes.com/interactive/2012/11/23/us/state-government-control-since-1938.jpg&#34; target=&#34;_blank&#34;&gt;New York Times&lt;/a&gt; back in 2012. You are tasked to replicate and construct an alternative for it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/05-assignment_files/Choice1.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Download the &lt;a href=&#34;https://edp693e.theoreticalphysed.com/visuals/Choice1.png&#34;&gt;visual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download the data set &lt;a href=&#34;https://edp693e.theoreticalphysed.com/data/divided.csv&#34;&gt;&lt;code&gt;divided.csv&lt;/code&gt;&lt;/a&gt; to construct this visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;choice-2-surface-temperatures&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Choice 2: Surface Temperatures&lt;/h3&gt;
&lt;p&gt;You are looking at the surface temperature Dec 2001 on a very coarse 24 by 24 grid covering Central America. You are tasked to replicate and construct an alternative for it (Hint: use &lt;code&gt;geom_tile()&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/05-assignment_files/Choice2.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://edp693e.theoreticalphysed.com/visuals/Choice2.png&#34; width=&#34;70%&#34;&gt;Download the visual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get the data, run the following in your script and Rmarkdown document:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;nasaweather&amp;quot;)

library(nasaweather)

jan2001 &amp;lt;- subset(atmos, year == 2000 &amp;amp; month == 1)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;choice-3-average-temperatures&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Choice 3: Average Temperatures&lt;/h3&gt;
&lt;p&gt;This data set for the following plot includes the average mean, minimum, and maximum daily temperature in Corvallis, Oregon based on a ten year span. You are tasked to replicate and construct an alternative for it: (Hint: use &lt;code&gt;geom_pointrange()&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/05-assignment_files/Choice3.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Download the &lt;a href=&#34;https://edp693e.theoreticalphysed.com/visuals/Choice3.png&#34;&gt;visual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download the data set &lt;a href=&#34;https://edp693e.theoreticalphysed.com/data/corv.csv&#34;&gt;&lt;code&gt;corv.csv&lt;/code&gt;&lt;/a&gt; to construct this visualization.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;choice-4-baseball&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Choice 4: Baseball&lt;/h3&gt;
&lt;p&gt;This graphic was published in the &lt;a href=&#34;https://archive.nytimes.com/www.nytimes.com/interactive/2013/03/29/sports/baseball/Strikeouts-Are-Still-Soaring.html?ref=baseball&#34; target=&#34;_blank&#34;&gt;New York Times&lt;/a&gt; back in 2013. You are tasked to replicate and construct an alternative for it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/05-assignment_files/Choice4.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://edp693e.theoreticalphysed.com/visuals/Choice4.png&#34;&gt;Download the visual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get the data, run the following in your script and Rmarkdown document:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(Lahman)
library(Lahman)  
library(dplyr)

# Pipes everwhere!
so_by_team &amp;lt;- select(Teams, yearID, name, G, SO) %&amp;gt;%
               mutate(strikeouts_per_game = SO/G) 

avg_so_by_year  &amp;lt;- so_by_team %&amp;gt;% 
                    group_by(yearID) %&amp;gt;%
                    summarise(avg_so = mean(strikeouts_per_game))

# you can either use both so_by_team &amp;amp; avg_so_by_year,
# or use only so_by_team and look at ?stat_summary&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-do-it&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How to Do It:&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Open the &lt;code&gt;Relications_Practice_Script.R&lt;/code&gt; blank R script or simple create one as you normally would. Then get to replicating one of the visualizations given above using the corresponding data set.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After you are happy with your plots, double click and open the file &lt;code&gt;Replications.rmd&lt;/code&gt;. It should load up into RStudio.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Follow the directions and copy the appropriate parts over. Make sure to compile the document!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Submit the PDF output of the Rmarkdown to &lt;a href=&#34;https://2021edp693e.slack.com/archives/C01NJ8H33V3&#34; target=&#34;_blank&#34;&gt;#wk-5-replications&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can download all of the scripts to fetch data, &lt;code&gt;Relications_Practice_Script.R&lt;/code&gt; and &lt;code&gt;Replications.rmd&lt;/code&gt; by clicking below&lt;/p&gt;
&lt;a href=&#34;data:application/zip;base64,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&#34; download=&#34;Week 5 Task Files.zip&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the files&lt;/button&gt;
&lt;/a&gt;
&lt;div id=&#34;more-about-rmarkdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More about Rmarkdown&lt;/h2&gt;
&lt;p&gt;Its not a bad idea to see what you can do with an Rmarkdown document. For example, you can actually output a file in nearly any format (e.g. Pages, PDF, HTML, Word, etc.) In fact this course website is written on an Rmarkdown platform called &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34;&gt;Blogdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some resources that may be helpful at the current time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ourcodingclub.github.io/tutorials/rmarkdown/&#34; target=&#34;_blank&#34;&gt;Getting Started with Rmarkdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf&#34; target=&#34;_blank&#34;&gt;R Markdown Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rostrum.blog/2018/09/24/knitting-club/&#34; target=&#34;_blank&#34;&gt;R Markdown for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://edp693e.theoreticalphysed.com/resource/rmarkdown/&#34; target=&#34;_blank&#34;&gt;Using R Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>I&#39;m the Map</title>
      <link>https://edp693e.theoreticalphysed.com/assignment/06-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://edp693e.theoreticalphysed.com/assignment/06-assignment/</guid>
      <description>
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/font-awesome/js/script.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://edp693e.theoreticalphysed.com/rmarkdown-libs/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-prepped&#34;&gt;Getting Prepped&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#first-things-first-set-your-working-directory&#34;&gt;First Things First! Set your Working Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#download-the-script&#34;&gt;Download the script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#read-the-submission-directions&#34;&gt;Read the Submission Directions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#load-up-some-libraries&#34;&gt;Load Up Some Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#save-and-declare-your-census-api&#34;&gt;Save and declare your Census API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part-i-the-map&#34;&gt;PART I: The Map&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#country-level-data&#34;&gt;Country Level Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#state-level-data&#34;&gt;State Level Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#county-level-data&#34;&gt;County Level Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part-ii-the-us-census&#34;&gt;PART II: The US Census&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gathering-and-making-important-decisions&#34;&gt;Gathering and Making Important Decisions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scraping-the-web-using-r&#34;&gt;Scraping the Web using R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#getting-the-data-you-want&#34;&gt;Getting the Data You Want&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part-iii-plotting&#34;&gt;PART III: Plotting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-tract-data&#34;&gt;Example: Tract Data&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-census-tract-level-data&#34;&gt;Getting Census Tract Level Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#single-map&#34;&gt;Single Map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#faceting-map&#34;&gt;Faceting Map&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;style&gt;
.hvr-sweep-to-left {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
}

.hvr-sweep-to-left:before {
  content: &#34;&#34;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:   #003277;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 100% 50%;
  transform-origin: 100% 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}

.hvr-sweep-to-left:hover, .hvr-sweep-to-left:focus, .hvr-sweep-to-left:active {
  color: white;
}

.hvr-sweep-to-left:hover:before, .hvr-sweep-to-left:focus:before, .hvr-sweep-to-left:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

* {
  box-sizing: border-box;
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  max-width: 700px;
  background: #efefef;
  box-shadow: 0 48px 80px -32px rgba(0,0,0,0.3);
}

.input {
  position: absolute;
  opacity: 0;
}

.label {
  width: 100%;
  padding: 20px 30px;
  background: #e5e5e5;
  cursor: pointer;
  font-weight: bold;
  font-size: 18px;
  color: #7f7f7f;
  transition: background 0.1s, color 0.1s;
}

.label:hover {
  background: #d8d8d8;
}

.label:active {
  background: #ccc;
}

.input:focus + .label {
  box-shadow: inset 0px 0px 0px 3px #2aa1c0;
  z-index: 1;
}

.input:checked + .label {
  background: #fff;
  color: #000;
}

@media (min-width: 600px) {
  .label {
    width: auto;
  }
}

.panel {
  display: none;
  padding: 20px 30px 30px;
  background: #fff;
}

@media (min-width: 600px) {
  .panel {
    order: 99;
  }
}

.input:checked + .label + .panel {
  display: block;
}
&lt;/style&gt;
&lt;div id=&#34;getting-prepped&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Prepped&lt;/h1&gt;
&lt;div id=&#34;first-things-first-set-your-working-directory&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;First Things First! Set your Working Directory&lt;/h2&gt;
&lt;p&gt;Your &lt;em&gt;working directory&lt;/em&gt; is simply where your script will look for anything it needs like external data sets. There are a few ways to go about doing this which we will cover. However for now, just do the following:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up a new script by going to &lt;code&gt;File &amp;gt; New File &amp;gt; R Script&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Save it in a preferably empty folder as whatever you want.&lt;/li&gt;
&lt;li&gt;Go to the menu bar and select &lt;code&gt;Session &amp;gt; Set Working Directory &amp;gt; To Source File Location&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;download-the-script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Download the script&lt;/h2&gt;
&lt;p&gt;Copying and pasting syntax from a browser can cause problems. To avoid this issue, please download a script with all of the needed code presented in this walkthrough.&lt;/p&gt;
&lt;a href=&#34;data:text/plain;base64,&#34; download=&#34;Week 6 Assignment Script Outline.R&#34;&gt;
&lt;button class=&#34;btn btn-default hvr-sweep-to-left&#34;&gt;&lt;i class=&#34;fa fa-save&#34;&gt;&lt;/i&gt; Download the Script&lt;/button&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;div id=&#34;read-the-submission-directions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Read the Submission Directions&lt;/h2&gt;
&lt;p&gt;Please submit a PDF out using an Rmarkdown file of five different maps using the Census data at the tract, county, state, &lt;a href=&#34;https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf&#34; target=&#34;_blank&#34;&gt;region&lt;/a&gt;, and national levels to &lt;a href=&#34;https://2021edp693e.slack.com/archives/C01PB0Z18FP&#34; target=&#34;_blank&#34;&gt;Slack&lt;/a&gt; for the out of class task.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;load-up-some-libraries&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Up Some Libraries&lt;/h2&gt;
&lt;p&gt;Please go ahead and download the libraries below you don’t have and load them up&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggmap)
library(maps)
library(mapdata)
library(rgdal) 
library(tidyverse)
library(tools)
library(viridis)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are a lot of mapping and support packages in R so we should first take a look at the ones being used here&lt;/p&gt;
&lt;center&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Library
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Description
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Repository
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Example
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;ggmap&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Gives the ability to visualize spatial data
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/dkahle/ggmap&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.nceas.ucsb.edu/sites/default/files/2020-04/ggmapCheatsheet.pdf&#34; target=&#34;_blank&#34;&gt;Cheatsheet&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;code&gt;maps&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; vertical-align: middle !important;&#34;&gt;
Computes the areas of regions in a projected map
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;a href=&#34;https://github.com/adeckmyn/maps&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;a href=&#34;https://eriqande.github.io/rep-res-web/lectures/making-maps-with-R.html&#34; target=&#34;_blank&#34;&gt;Walkthrough&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;mapdata&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Provides both larger and higher-resolution databases
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/cran/mapdata&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.r-graph-gallery.com/278-the-maps-library.html&#34; target=&#34;_blank&#34;&gt;Walkthrough&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;rgdal&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Bindings for the &lt;a href=&#34;https://www.gdal.org/&#34; target=&#34;_blank&#34;&gt;Geospatial Data Abstraction Library&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/OSGeo/gdal&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.r-graph-gallery.com/168-load-a-shape-file-into-r.html&#34; target=&#34;_blank&#34;&gt;Walkthrough&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;tidyverse&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Nope
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/tidyverse/tidyverse&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;Homepage&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;tools&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Used to manipulating R packages and their documentation
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.rdocumentation.org/packages/tools/versions/3.6.2&#34; target=&#34;_blank&#34;&gt;None&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540&#34; target=&#34;_blank&#34;&gt;StackOverflow&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;viridis&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Viridis color and fill palette
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/sjmgarnier/viridis&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html&#34; target=&#34;_blank&#34;&gt;Vignette&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;div id=&#34;save-and-declare-your-census-api&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Save and declare your Census API&lt;/h2&gt;
&lt;p&gt;There are a few things you need to do when grabbing Census data.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;You must have a key from &lt;a href=&#34;https://api.census.gov/data/key_signup.html&#34; target=&#34;_blank&#34;&gt;https://api.census.gov/data/key_signup.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Load up (or install and then load up) the library &lt;code&gt;censusapi&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(censusapi)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;censusapi&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:methods&amp;#39;:
## 
##     getFunction&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Add key to the .Renviron (the place in the &lt;code&gt;censusapi&lt;/code&gt; where your unique identifier, or key, is stored)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Sys.setenv(CENSUS_KEY=&amp;quot;YOUR API KEY HERE&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Reload the .Renviron&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;readRenviron(&amp;quot;~/.Renviron&amp;quot;) # You may get a warning...ignore it&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Check to see that your key stored within R&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Sys.getenv(&amp;quot;CENSUS_KEY&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;## [1] &#34;YOUR UNIQUE IDENTIFIER HERE&#34;&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;part-i-the-map&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PART I: The Map&lt;/h2&gt;
&lt;div id=&#34;country-level-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Country Level Data&lt;/h3&gt;
&lt;p&gt;Load some United States demographic data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usa &amp;lt;- map_data(&amp;quot;usa&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before you look at it by running &lt;code&gt;usa&lt;/code&gt;, Census data sets are typically huge for obvious reasons. Let’s see how big the file actually is.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(usa)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 7243    6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With 43,458 entries, that’s pretty big! Maybe we shouldn’t load it up (even in &lt;code&gt;View()&lt;/code&gt; it takes awhile). Let’s instead just see the first and last six rows to get an idea of what it looks like to get an idea.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(usa) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        long      lat group order region subregion
## 1 -101.4078 29.74224     1     1   main      &amp;lt;NA&amp;gt;
## 2 -101.3906 29.74224     1     2   main      &amp;lt;NA&amp;gt;
## 3 -101.3620 29.65056     1     3   main      &amp;lt;NA&amp;gt;
## 4 -101.3505 29.63911     1     4   main      &amp;lt;NA&amp;gt;
## 5 -101.3219 29.63338     1     5   main      &amp;lt;NA&amp;gt;
## 6 -101.3047 29.64484     1     6   main      &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(usa) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           long      lat group order         region subregion
## 7247 -122.6187 48.37482    10  7247 whidbey island      &amp;lt;NA&amp;gt;
## 7248 -122.6359 48.35764    10  7248 whidbey island      &amp;lt;NA&amp;gt;
## 7249 -122.6703 48.31180    10  7249 whidbey island      &amp;lt;NA&amp;gt;
## 7250 -122.7218 48.23732    10  7250 whidbey island      &amp;lt;NA&amp;gt;
## 7251 -122.7104 48.21440    10  7251 whidbey island      &amp;lt;NA&amp;gt;
## 7252 -122.6703 48.17429    10  7252 whidbey island      &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have columns that can be used! The most obvious choice for map data is using the coordinates for longitude and latitude. So let’s plot using the longitudinal (&lt;code&gt;long&lt;/code&gt;) and latitudinal (&lt;code&gt;lat&lt;/code&gt;) columns.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = usa, 
               aes(x=long, y = lat, group = group))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well that looks terrible. So what’s happening here? In a nutshell, it’s plotting exactly how you would see the US if you flattened (aka projected) the coordinates from a sphere to a flat surface. Most maps account for this using a correction via an aspect ratio. In R, we use a command called &lt;code&gt;coord_fixed&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = usa, 
               aes(x=long, y = lat, group = group)) + 
  coord_fixed(1.3) # 1.3 is a decent standard estimate&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There we go. That looks better but of course its just a grey silhouette. Let’s first try adding some base color.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = usa, aes(x=long, y = lat, group = group), color = &amp;quot;#1b85b8&amp;quot;, 
               fill = &amp;quot;#559e83&amp;quot;) + 
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Its looking better but something is missing. Hmmm….Oh!…Its the “S” part of “USA” - To get that, we need to look at state level data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;state-level-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;State Level Data&lt;/h3&gt;
&lt;p&gt;We have two choices: we can either bring in a particular state or bring them all in and then filter later. Unless you specifically know which state you want, its a good rule of thumb to bring in all state level data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;state &amp;lt;- map_data(&amp;quot;state&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a side note, if you know which state you want to look at, then just do the following. I’ll use California as an example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;California &amp;lt;- map_data(&amp;quot;state&amp;quot;, region = &amp;quot;CA&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A good thing to note is that &lt;code&gt;region =&lt;/code&gt; is a bit misleading. At first you may think that it is a state’s abbreviation but it is not. In fact, you can’t even use abbreviations in that field. For example, if we use the abbreviation for Kansas, you’ll get nonsense&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Kansas &amp;lt;- map_data(&amp;quot;state&amp;quot;, region = &amp;quot;KS&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in map.poly(database, regions, exact, xlim, ylim, boundary, interior, : no recognized region names&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Yes the output is going off the page and no I can’t do anything about it)&lt;br /&gt;
&lt;br&gt;
The command &lt;code&gt;region =&lt;/code&gt; is actually a filter so you need to put as much information as you can to ensure that you only get the state you want. For example, let’s see what happens when I do the following&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Michigan &amp;lt;- map_data(&amp;quot;state&amp;quot;, region = &amp;quot;MI&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well MI is certainly the standard abbreviation for Michigan but again, that is not what the command is doing. Other states have those letters:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(Michigan$region)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;michigan&amp;quot;    &amp;quot;minnesota&amp;quot;   &amp;quot;mississippi&amp;quot; &amp;quot;missouri&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is not what we wanted so please make sure you use the region filter correctly. In a worst case scenario or if you don’t mind the extra effort, just type in the name of the state.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Michigan &amp;lt;- map_data(&amp;quot;state&amp;quot;, 
                     region = &amp;quot;Michigan&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unique(Michigan$region)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;michigan&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s much better! OK back to mapping. I’m actually going to stick with Michigan. Notice here that I am using the entire state data set and filtering Michigan out with the command &lt;code&gt;subset&lt;/code&gt; and the &lt;code&gt;==&lt;/code&gt; (double equals sign).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi &amp;lt;- subset(state, 
             region==&amp;quot;michigan&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For a basic plot, we do the following:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = mi, 
                        aes(x=long, y = lat, group = group)) + 
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;47%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Michigan’s shape is pretty unique and that sure looks like it but the plot is pretty bland. Let’s give it some color and a legend.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = mi, aes(x=long, y = lat, group = group, fill=region)) +
  scale_fill_manual(values=c(&amp;quot;#6A0032&amp;quot;)) +
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Not bad but we can get even more granular. Let’s look at county level data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;county-level-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;County Level Data&lt;/h3&gt;
&lt;p&gt;Much like before, we’re going to pull in all of the county level data,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;county &amp;lt;- map_data(&amp;quot;county&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then we’ll filter it for Michigan,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_count &amp;lt;- subset(county, region==&amp;quot;michigan&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and finally we’ll plot it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = mi_count, aes(x=long, y = lat, group = group, fill=subregion), 
               color = &amp;quot;#FFFFFF&amp;quot;) +
  scale_fill_viridis(discrete = TRUE, 
                     alpha=0.7, 
                     option=&amp;quot;inferno&amp;quot;) +
  theme_bw() +
  theme(plot.title = element_text(size = 26, color =&amp;quot;#105456&amp;quot;,  vjust = -1),
        legend.position =&amp;quot;bottom&amp;quot;,
        legend.direction = &amp;#39;vertical&amp;#39;,
        legend.text = element_text(size=15, color = &amp;quot;#59595B&amp;quot;),
        legend.title = element_blank(),
        legend.title.align = 0.5,
        legend.spacing.x = unit(0.5, &amp;quot;cm&amp;quot;), 
        legend.spacing.y = unit(0.5, &amp;quot;cm&amp;quot;),
        legend.background = element_rect(linetype = 0, size = 0.5, colour = 1),
        panel.background = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank()) +
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Your output may look a little different depending on your system settings.&lt;/em&gt;&lt;br /&gt;
&lt;br&gt;
That legend is taking up way too much space AND we don’t need the counties color coded by their names. Let’s get rid of it with &lt;code&gt;guide = FALSE&lt;/code&gt; within &lt;code&gt;scale_fill_viridis&lt;/code&gt; to get rid of that particular one or to turn all &lt;code&gt;fill&lt;/code&gt; legends off, you can use &lt;code&gt;guides(fill=FALSE)&lt;/code&gt; which is switch off in the plot above. In the example below, let’s try the one with &lt;code&gt;guide = FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = mi_count, aes(x=long, y = lat, group = group, fill=subregion), 
               color = &amp;quot;#FFFFFF&amp;quot;) +
  scale_fill_viridis(discrete = TRUE, 
                     alpha=0.7, 
                     option=&amp;quot;inferno&amp;quot;, 
                     guide = FALSE) + #HERE IT IS
  theme_bw() +
  theme(plot.title = element_text(size = 26, color =&amp;quot;#105456&amp;quot;,  vjust = -1),
        legend.position =&amp;quot;bottom&amp;quot;,
        legend.direction = &amp;#39;vertical&amp;#39;,
        legend.text = element_text(size=15, color = &amp;quot;#59595B&amp;quot;),
        legend.title = element_blank(),
        legend.title.align = 0.5,
        legend.spacing.x = unit(0.5, &amp;quot;cm&amp;quot;), 
        legend.spacing.y = unit(0.5, &amp;quot;cm&amp;quot;),
        legend.background = element_rect(linetype = 0, size = 0.5, colour = 1),
        panel.background = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank()) +
# guides(color=FALSE) +
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well now we definitely have county level data for Michigan.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please take a bit to review and play around with every layer. Many of the typical things you would want to change or amend about a plot are included.&lt;/strong&gt;&lt;br /&gt;
&lt;br&gt;
OK now we should probably do something with this map. Let get some Census data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;part-ii-the-us-census&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PART II: The US Census&lt;/h2&gt;
&lt;div id=&#34;gathering-and-making-important-decisions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Gathering and Making Important Decisions&lt;/h3&gt;
&lt;p&gt;Choose an endpoint &lt;em&gt;aka a set of data&lt;/em&gt; that you want.&lt;/p&gt;
&lt;p&gt;At this point it is completely understandable if you are wondering what an API is. Without getting overtly technical, an API is the acronym for &lt;strong&gt;Application Programming Interface&lt;/strong&gt;. This is essentially a text based software that allows two applications to talk to each other. Why text based? Well its really the only aspect that all computers share. In fact, each time you use an app like YouTube, send a text message, or check the weather on your phone, etc. from any device worldwide, you’re using an API. As an example, take a look at the Twitter API &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/search/api-reference.html&#34; target=&#34;_blank&#34;&gt;https://developer.twitter.com/en/docs/tweets/search/api-reference.html&lt;/a&gt; that we’ll be using later in the term to perform some network data visualizations.&lt;br /&gt;
&lt;br&gt;
Now when looking at our endpoint, what should we choose? As of 2018, there are over 200 Census API endpoints are available, including the Decennial Census, American Community Survey, Poverty Statistics, and Population Estimates. You can find a list here: &lt;a href=&#34;https://api.census.gov/data.html&#34; target=&#34;_blank&#34;&gt;https://api.census.gov/data.html&lt;/a&gt;. Please look them over!&lt;br /&gt;
&lt;br&gt;
The &lt;code&gt;censusapi&lt;/code&gt; package is designed to let you get data from all of those APIs using the same main function &lt;code&gt;getCensus&lt;/code&gt; and the same syntax for each data set. In this example case, let’s look at the 2017 Density Estimates (variables can be found here: &lt;a href=&#34;https://api.census.gov/data/2017/pep/population/variables.html&#34; target=&#34;_blank&#34;&gt;https://api.census.gov/data/2017/pep/population/variables.html&lt;/a&gt;) for all states within the US. Alternatively you can get that information directly through the API we have been using:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;apis &amp;lt;- listCensusApis()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(apis)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now certain repositories require certain basic variables to be run (for example if years are a factor). To get an idea, the 2017 American Community Survey which is used to update some data within the primary Census.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Here are the available variables&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;acs2017_vars &amp;lt;- listCensusMetadata(name = &amp;quot;2017/pep/population/&amp;quot;, 
                                 type = &amp;quot;variables&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(acs2017_vars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      name                          label                concept predicateType
## 1    MDIV     Metropolitan Division code Selectable Geographies           int
## 2  COUSUB Minor Civil Division FIPS code              Estimates           int
## 3  SUMLEV                  Summary Level              Estimates          &amp;lt;NA&amp;gt;
## 4   STATE                State FIPS code              Estimates          &amp;lt;NA&amp;gt;
## 5 GEONAME                Geographic Name              Estimates          &amp;lt;NA&amp;gt;
## 6   DATE_                           Date              Estimates           int
##   group limit          required
## 1   N/A     0              &amp;lt;NA&amp;gt;
## 2   N/A     0              &amp;lt;NA&amp;gt;
## 3   N/A     0              &amp;lt;NA&amp;gt;
## 4   N/A     0              &amp;lt;NA&amp;gt;
## 5   N/A     0              &amp;lt;NA&amp;gt;
## 6   N/A     0 default displayed&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Here are the available geographies&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;acs2017_geos &amp;lt;- listCensusMetadata(name = &amp;quot;2017/pep/population/&amp;quot;, 
                                   type = &amp;quot;geography&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(acs2017_geos)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to see which variables are required for mapping, then there is a problem and that is actually due to bad luck as a result of timing. The Census is going through a new update with a new API format that was supposed to go live two weeks ago. It has, however, been pushed back to October 31. Until then, you will have to utilize the website. However if you are adamant about using R for the whole process as I typically am, then you can get table, aka tabular data from any website. If this interests you, please seethe section below. Otherwise move on to the next section.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scraping-the-web-using-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Scraping the Web using R&lt;/h3&gt;
&lt;p&gt;In order to grab data off of the web, you will need to several things. At first it may seem arduous but having lengthy tables as data within R can be very beneficial, especially when filtering or if you just don’t want to manually load or type in entries. Included are steps to get the data you need in a usable form within R.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Download and run the &lt;code&gt;rvest&lt;/code&gt; package (though there are others like a package called &lt;code&gt;XML&lt;/code&gt; that may be useful in other circumstances)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: xml2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;rvest&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:purrr&amp;#39;:
## 
##     pluck&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:readr&amp;#39;:
## 
##     guess_encoding&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Define the website you want to pull the data from&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;webpage &amp;lt;- read_html(&amp;quot;https://api.census.gov/data/2017/pep/population/variables.html&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Tell &lt;code&gt;rvest&lt;/code&gt; that you want the tables using the command &lt;code&gt;html_nodes&lt;/code&gt;. This does a lot of things but in a nutshell, it recognizes if a page is a webpage by scanning the HTML code and then finds what you need. In our case, we’re asking it to recognize the Census webpage from above and to identify the HTML codes where the term &lt;code&gt;table&lt;/code&gt; exists.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbls &amp;lt;- html_nodes(webpage, &amp;quot;table&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;See information regarding all of the tables&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbls # or if there are multiple tables, consider using head(tbls)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## {xml_nodeset (1)}
## [1] &amp;lt;table&amp;gt;\n&amp;lt;caption&amp;gt;Census Data API: Variables in /data/2017/pep/population ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By the output, we only have one table which is indicated by &lt;code&gt;[1]&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now do some piping via &lt;code&gt;dplyr&lt;/code&gt; to get a list of everything within that table&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbls_ls &amp;lt;- webpage %&amp;gt;%
        html_nodes(&amp;quot;table&amp;quot;) %&amp;gt;% # Creates a multidimensional list (i.e. a list 
                                # with layers and depth akin to folders within 
                                # folders within folders, ect.)
        .[1] %&amp;gt;% # We only have table so we put.[1] here. If we had multiple 
                 # tables and we wanted say the first three, we could have 
                 # used .[1:3]
        html_table(fill = TRUE) # Convert the data to a table format and populate 
                                # the entries&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;See the result&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(tbls_ls)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that its a list and can go pretty deep down the rabbit hole depending on how many tables you are looking at. In this case, we have one so ts pretty simple.&lt;/p&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now narrow down the results. Say you only wanted the ones that were required. You can figure that out by filtering for the term &lt;code&gt;default displayed&lt;/code&gt; under the column &lt;strong&gt;Required&lt;/strong&gt;. To do this, we first run the following which splits up all of the tables and then attaches them together by corresponding entries.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbls_ls &amp;lt;- do.call(rbind.data.frame, tbls_ls) # Concatenates a list of data frames 
                                              # into a single data frame&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;(Optional) Take a look to see that it looks like an actual table&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;View(tbls_ls)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;9&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now we get rid of the rows that that don’t have &lt;code&gt;default displayed&lt;/code&gt; under &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filtered_tbls_ls &amp;lt;- tbls_ls[tbls_ls$Required == &amp;quot;default displayed&amp;quot;, ] 
                                                              # Filter out the rows that
                                                              # don&amp;#39;t have `default 
                                                              # displayed` under the 
                                                              # column **Required**&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;10&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Just show the names of the required variables&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filtered_tbls_ls$Name # Just shows the Names of the required variables&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;DATE_&amp;quot;    &amp;quot;UNIVERSE&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So here we see that the variables DATE and UNIVERSE are required.&lt;/p&gt;
&lt;p&gt;Alternatively and if you understand the above, you can simply use the following in one fell swoop using &lt;code&gt;dplyr&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)

read_html(&amp;quot;https://api.census.gov/data/2017/pep/population/variables.html&amp;quot;) %&amp;gt;%
html_nodes(&amp;quot;table&amp;quot;)  %&amp;gt;% # Creates a multidimensional list (i.e. a list with layers 
                         # and depth akin to folders within folders within folders, 
                         # ect.)
  .[1] %&amp;gt;% # We only have table so we put.[1] here. If we had multiple tables and 
           # we wanted say the first three, we could have used .[1:3]
  html_table(fill = TRUE) %&amp;gt;% # Convert the data to a table format and populate the 
                              # entries
  bind_rows() %&amp;gt;% # Concatenates a list of data frames into a single data frame
  filter(Required == &amp;quot;default displayed&amp;quot;) %&amp;gt;% # Filter out the rows that don&amp;#39;t have
                                              # `default displayed` under the column 
                                              # **Required**
  select(Name) # Just shows the Names of the required variables&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...9&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       Name
## 1    DATE_
## 2 UNIVERSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Life is much easier with pipes! Note that this and the other method should work with many of the Census web tables but may not for all, especially for older tables that may have not been updated and do not have the column &lt;strong&gt;Required&lt;/strong&gt;. Part of understanding what is going on in each line affords you the ability to change commands and variables as necessary.&lt;br /&gt;
&lt;br&gt;
OK now back to the mapping!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-the-data-you-want&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting the Data You Want&lt;/h2&gt;
&lt;p&gt;Backtracking on the two methods presented above, if we wanted to figure out which variables are available in general, we could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go back to step 9 and run&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbls_ls$Name&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;23 variables&amp;quot; &amp;quot;CBSA&amp;quot;         &amp;quot;CONCIT&amp;quot;       &amp;quot;COUNTY&amp;quot;       &amp;quot;COUSUB&amp;quot;      
##  [6] &amp;quot;CSA&amp;quot;          &amp;quot;DATE_&amp;quot;        &amp;quot;DATE_DESC&amp;quot;    &amp;quot;DENSITY&amp;quot;      &amp;quot;DIVISION&amp;quot;    
## [11] &amp;quot;for&amp;quot;          &amp;quot;FUNCSTAT&amp;quot;     &amp;quot;GEONAME&amp;quot;      &amp;quot;in&amp;quot;           &amp;quot;LASTUPDATE&amp;quot;  
## [16] &amp;quot;MDIV&amp;quot;         &amp;quot;NATION&amp;quot;       &amp;quot;PLACE&amp;quot;        &amp;quot;POP&amp;quot;          &amp;quot;PRIMGEOFLAG&amp;quot; 
## [21] &amp;quot;REGION&amp;quot;       &amp;quot;STATE&amp;quot;        &amp;quot;SUMLEV&amp;quot;       &amp;quot;UNIVERSE&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rerun parts of the piping system&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;read_html(&amp;quot;https://api.census.gov/data/2017/pep/population/variables.html&amp;quot;) %&amp;gt;%
  html_nodes(&amp;quot;table&amp;quot;)  %&amp;gt;% # This is a multidimensional list (i.e. a list with layers)
  .[1] %&amp;gt;% 
  html_table(fill = TRUE) %&amp;gt;%
  bind_rows() %&amp;gt;% 
  select(Name)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## New names:
## * NA -&amp;gt; ...9&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Name
## 1  23 variables
## 2          CBSA
## 3        CONCIT
## 4        COUNTY
## 5        COUSUB
## 6           CSA
## 7         DATE_
## 8     DATE_DESC
## 9       DENSITY
## 10     DIVISION
## 11          for
## 12     FUNCSTAT
## 13      GEONAME
## 14           in
## 15   LASTUPDATE
## 16         MDIV
## 17       NATION
## 18        PLACE
## 19          POP
## 20  PRIMGEOFLAG
## 21       REGION
## 22        STATE
## 23       SUMLEV
## 24     UNIVERSE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternative if you are pretty sure that a variable is already in a Census table and want verification, you cab check for it. For example, let’s see if the variable DENSITY exists in the 2017 Density Estimates (I bet it does since the word Density is right in the title) for the state of Michigan.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;getCensus(name = &amp;quot;2017/pep/population&amp;quot;,
          vars = c(&amp;quot;DENSITY&amp;quot;), 
          region = &amp;quot;state:26&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   state DENSITY
## 1    26 176.139&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yup its available but right now you may be wondering how I got that number 26. Well the Census assigns a number (called a &lt;strong&gt;FIPS state code&lt;/strong&gt;) to every territory the US controls. You can find grouped listings here &lt;a href=&#34;https://www.census.gov/geo/reference/ansi_statetables.html&#34; target=&#34;_blank&#34;&gt;https://www.census.gov/geo/reference/ansi_statetables.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well let’s get county and state level data and run it!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Tigers &amp;lt;- getCensus(name = &amp;quot;2017/pep/population&amp;quot;,
                         vars = c(&amp;quot;GEONAME&amp;quot;, &amp;quot;COUNTY&amp;quot;, &amp;quot;DENSITY&amp;quot;), 
                         region = &amp;quot;county:*&amp;quot;,
                         regionin = &amp;quot;state:26&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now take a peek at the first 15 entries in the Michigan list.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers, n=15L)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    state county                     GEONAME COUNTY     DENSITY
## 1     26    073   Isabella County, Michigan    073  124.088901
## 2     26    075    Jackson County, Michigan    075  226.080702
## 3     26    077  Kalamazoo County, Michigan    077  467.780995
## 4     26    079   Kalkaska County, Michigan    079   31.504614
## 5     26    081       Kent County, Michigan    081  765.161412
## 6     26    083   Keweenaw County, Michigan    083    3.897341
## 7     26    085       Lake County, Michigan    085   21.165346
## 8     26    087     Lapeer County, Michigan    087  136.875440
## 9     26    089   Leelanau County, Michigan    089   62.378722
## 10    26    091    Lenawee County, Michigan    091  131.575529
## 11    26    093 Livingston County, Michigan    093  335.585145
## 12    26    095       Luce County, Michigan    095    7.071703
## 13    26    097   Mackinac County, Michigan    097   10.482856
## 14    26    099     Macomb County, Michigan    099 1818.397780
## 15    26    101   Manistee County, Michigan    101   45.041218&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that we can get rid of the columns &lt;code&gt;state&lt;/code&gt;, &lt;code&gt;county&lt;/code&gt;, and &lt;code&gt;COUNTY&lt;/code&gt; since we only need the columns &lt;code&gt;GEOMNAME&lt;/code&gt; and &lt;code&gt;DENSITY&lt;/code&gt;. We can do this by running the following&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;drops &amp;lt;- c(&amp;quot;state&amp;quot;, &amp;quot;county&amp;quot;, &amp;quot;COUNTY&amp;quot;) # Assigns column names to be dropped
Tigers &amp;lt;- Tigers[ , !(names(Tigers) %in% drops)] # Drops those columns &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is actually one of the few times that Base R is easier to use than a tidy approach. Anyway now let’s take a look at the Census data set now.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                      GEONAME    DENSITY
## 1  Isabella County, Michigan 124.088901
## 2   Jackson County, Michigan 226.080702
## 3 Kalamazoo County, Michigan 467.780995
## 4  Kalkaska County, Michigan  31.504614
## 5      Kent County, Michigan 765.161412
## 6  Keweenaw County, Michigan   3.897341&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Recall that our map data looks like this&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat group order   region subregion
## 38512 -83.88675 44.85686  1198 38512 michigan    alcona
## 38513 -83.36536 44.86832  1198 38513 michigan    alcona
## 38514 -83.33098 44.83968  1198 38514 michigan    alcona
## 38515 -83.30806 44.80530  1198 38515 michigan    alcona
## 38516 -83.30233 44.77665  1198 38516 michigan    alcona
## 38517 -83.28515 44.72509  1198 38517 michigan    alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have to merge both of these sets so that the Census data and map data line up. We have a bit of work to do but its all about identifying what we need. Now I should note that the process below is just one way to get there. Steps are provided for convenience, but again they are contingent on your own table.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The column &lt;code&gt;GEONAME&lt;/code&gt; is a concatenation of county and state level data. Let’s split them up using the &lt;code&gt;,&lt;/code&gt; (comma) as the delimiter…&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Tigers &amp;lt;- Tigers %&amp;gt;% 
  separate(GEONAME, into = paste0(&amp;#39;thing&amp;#39;, 1:2), sep = &amp;#39;[,]&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and then take a look at the results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             thing1    thing2    DENSITY
## 1  Isabella County  Michigan 124.088901
## 2   Jackson County  Michigan 226.080702
## 3 Kalamazoo County  Michigan 467.780995
## 4  Kalkaska County  Michigan  31.504614
## 5      Kent County  Michigan 765.161412
## 6  Keweenaw County  Michigan   3.897341&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Notice that the columns have been split and renamed &lt;code&gt;thing1&lt;/code&gt; and &lt;code&gt;thing2&lt;/code&gt;. But we want the column names to be representative of what they are. So we can rename them in order of appearance from left to right&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Tigers &amp;lt;- setNames(Tigers, c(&amp;quot;County&amp;quot;,&amp;quot;State&amp;quot;,&amp;quot;Density&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and then take a look at the results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             County     State    Density
## 1  Isabella County  Michigan 124.088901
## 2   Jackson County  Michigan 226.080702
## 3 Kalamazoo County  Michigan 467.780995
## 4  Kalkaska County  Michigan  31.504614
## 5      Kent County  Michigan 765.161412
## 6  Keweenaw County  Michigan   3.897341&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Now notice that the term &lt;strong&gt;County&lt;/strong&gt; appears perpetually with the &lt;strong&gt;County&lt;/strong&gt; columns and does not appear in the &lt;code&gt;mi_count&lt;/code&gt; set. So we have a choice in that we can either leave it be here and add the term County to &lt;code&gt;mi_count&lt;/code&gt; or drop the term from this set. I like to have less clutter so choosing the latter makes sense. However, you could just as well do the other and the intended outcome that columns look the same would work all the same.&lt;br /&gt;
&lt;br&gt;
Now there are many ways to attack this. Similar to the process above, you could just split the column again based on the space and then delete one of the resulting columns with the term &lt;strong&gt;County&lt;/strong&gt; in it. However, since you have already been exposed to the &lt;code&gt;stringr&lt;/code&gt; package, let’s use that.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Tigers$County &amp;lt;- str_replace_all(Tigers$County, &amp;quot; County&amp;quot;, &amp;quot;&amp;quot;) 
# Find the term County in the County column and replace it nothing (given by &amp;quot;&amp;quot;). Notice 
# that there is a space between the first quote and the term County to account for the 
# space between the two words.&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Finally we certainly know that we’re in Michigan so let’s get rid of that column&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dropFromCensus &amp;lt;- c(&amp;quot;State&amp;quot;)
Tigers &amp;lt;- Tigers[ , !(names(Tigers) %in% dropFromCensus)] # Drops those columns&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;OK we are done with the Census data for now. Moving on the map data, lets compare both again&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      County    Density
## 1  Isabella 124.088901
## 2   Jackson 226.080702
## 3 Kalamazoo 467.780995
## 4  Kalkaska  31.504614
## 5      Kent 765.161412
## 6  Keweenaw   3.897341&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat group order   region subregion
## 38512 -83.88675 44.85686  1198 38512 michigan    alcona
## 38513 -83.36536 44.86832  1198 38513 michigan    alcona
## 38514 -83.33098 44.83968  1198 38514 michigan    alcona
## 38515 -83.30806 44.80530  1198 38515 michigan    alcona
## 38516 -83.30233 44.77665  1198 38516 michigan    alcona
## 38517 -83.28515 44.72509  1198 38517 michigan    alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First thing here and because of personal preference, I want to get rid of the clutter. In this case, that means dropping columns we do not need. In this case, these are &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, and &lt;code&gt;region&lt;/code&gt;. Now the code down here is a bit tricky if you are not used to it. In the first line, we are just defining a column vector with column names so there’s nothing new here. The second line needs a bit more explanation because there is a lot going on. Foremost, the rows and columns for all data frames can be called using [row,column]. For example, I can tell R that I want to do something to the rows in &lt;code&gt;mi_count&lt;/code&gt; by stating &lt;code&gt;mi_count[some operation here , ]&lt;/code&gt;. Alternatively, I can also tell R that I want to do something to the columns in &lt;code&gt;mi_count&lt;/code&gt; by stating &lt;code&gt;mi_count[ , some operation here ]&lt;/code&gt; which is exactly what was done. I realize that may be confusing so think about it and ask questions. Now for the operation itself, we read those in parts:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;names(mi_count)&lt;/code&gt; tells R the to look at the names of the columns in &lt;code&gt;mi_count&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;names(mi_count) %in% dropFromMapData&lt;/code&gt; tells R to take the names of the columns in &lt;code&gt;mi_count&lt;/code&gt; and look for them in the vector &lt;code&gt;dropFromMapData&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;!(names(mi_count) %in% dropFromMapData)&lt;/code&gt; tells R to take those names from &lt;code&gt;dropFromMapData&lt;/code&gt; that are also in &lt;code&gt;mi_count&lt;/code&gt; and to not use them (aka to drop them).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dropFromMapData &amp;lt;- c(&amp;quot;group&amp;quot;, &amp;quot;order&amp;quot;, &amp;quot;region&amp;quot;)
mi_count &amp;lt;- mi_count[ , !(names(mi_count) %in% dropFromMapData)] # Drops those columns
head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat subregion
## 38512 -83.88675 44.85686    alcona
## 38513 -83.36536 44.86832    alcona
## 38514 -83.33098 44.83968    alcona
## 38515 -83.30806 44.80530    alcona
## 38516 -83.30233 44.77665    alcona
## 38517 -83.28515 44.72509    alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at the code as whole is often overwhelming. Remember you are learning a new language so first view its most basic parts and then build up.&lt;/p&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Then rename the column we’re going to merge one which in this case means renaming &lt;code&gt;subregion&lt;/code&gt; to &lt;code&gt;County&lt;/code&gt; while maintaining the others as is.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_count &amp;lt;- setNames(mi_count, c(&amp;quot;long&amp;quot;,&amp;quot;lat&amp;quot;,&amp;quot;County&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and take a look.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat County
## 38512 -83.88675 44.85686 alcona
## 38513 -83.36536 44.86832 alcona
## 38514 -83.33098 44.83968 alcona
## 38515 -83.30806 44.80530 alcona
## 38516 -83.30233 44.77665 alcona
## 38517 -83.28515 44.72509 alcona&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;And finally, let’s capitalize the column &lt;code&gt;county&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_count$County &amp;lt;- str_to_title(mi_count$County)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and take a look.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat County
## 38512 -83.88675 44.85686 Alcona
## 38513 -83.36536 44.86832 Alcona
## 38514 -83.33098 44.83968 Alcona
## 38515 -83.30806 44.80530 Alcona
## 38516 -83.30233 44.77665 Alcona
## 38517 -83.28515 44.72509 Alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In fact, let’s look it both to make sure they’re structurally similar&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(Tigers)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      County    Density
## 1  Isabella 124.088901
## 2   Jackson 226.080702
## 3 Kalamazoo 467.780995
## 4  Kalkaska  31.504614
## 5      Kent 765.161412
## 6  Keweenaw   3.897341&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat County
## 38512 -83.88675 44.85686 Alcona
## 38513 -83.36536 44.86832 Alcona
## 38514 -83.33098 44.83968 Alcona
## 38515 -83.30806 44.80530 Alcona
## 38516 -83.30233 44.77665 Alcona
## 38517 -83.28515 44.72509 Alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes! Now you might be thinking that &lt;code&gt;mi_count&lt;/code&gt; is full of repeated county names. Well that’s good because (1) its the file that will inform ggplot of county borders and (2) we simply need the terms and column titles to look the same; they can differ in length (aka number of rows or how many times any entry repeats).&lt;br /&gt;
&lt;br&gt;
We’re going to use joins which is basically a fancy way of using logic derived from a computer language called SQL. Take a look at the data-wrangling-cheatsheet PDF file or go to &lt;a href=&#34;http://stat545.com/bit001_dplyr-cheatsheet.html&#34;&gt;http://stat545.com/bit001_dplyr-cheatsheet.html&lt;/a&gt; to see detailed examples.&lt;br /&gt;
&lt;br&gt;
In each situation, you have to think about the end product and the data set that will get you there. Foremost, we want a county map of Michigan with Census density data. Which one is more important? Well logic would dictate that I can’t really draw density data without a map, or in research (and Algebraic) terms, density data is &lt;em&gt;dependent&lt;/em&gt; on the map. So with that idea, we need the map data (from &lt;code&gt;mi_count&lt;/code&gt;) as our primary source to merge on. The command &lt;code&gt;left_join&lt;/code&gt; will work here as long as &lt;code&gt;mi_count&lt;/code&gt; is literally to the left of the other data set: &lt;code&gt;Tigers&lt;/code&gt;. Below you can see this and also that we’re merging, or joining on the common column &lt;code&gt;County&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_thing &amp;lt;- left_join(mi_count, Tigers, by = c(&amp;quot;County&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…and take a look.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mi_count)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            long      lat County
## 38512 -83.88675 44.85686 Alcona
## 38513 -83.36536 44.86832 Alcona
## 38514 -83.33098 44.83968 Alcona
## 38515 -83.30806 44.80530 Alcona
## 38516 -83.30233 44.77665 Alcona
## 38517 -83.28515 44.72509 Alcona&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nice! it worked! Now let’s try to plot it.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;part-iii-plotting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;PART III: Plotting&lt;/h2&gt;
&lt;p&gt;Well let’s give it a go!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = total_thing, aes(x=long, y = lat, fill=Density, group=County), 
               color = &amp;quot;#f8f8fa&amp;quot;, size = 0.25, show.legend = T) +
  scale_color_viridis(alpha=1, option=&amp;quot;viridis&amp;quot;) + # color tells R to look for discrete data to color
  theme_bw() +
  theme(plot.title = element_text(size = 26,color =&amp;quot;#105456&amp;quot;,  vjust = -1),
        legend.position =&amp;quot;right&amp;quot;,
        legend.direction = &amp;#39;vertical&amp;#39;,
        legend.key = element_rect(size = 5, color = NA),
        legend.key.size = unit(1.5, &amp;#39;lines&amp;#39;),
        legend.text = element_text(size=15, color = &amp;quot;#59595B&amp;quot;),
        legend.title = element_blank(),
        legend.title.align = 0.5,
        legend.spacing.x = unit(0.5, &amp;quot;cm&amp;quot;), 
        legend.spacing.y = unit(0.5, &amp;quot;cm&amp;quot;),
        legend.background = element_rect(linetype = 0, size = 0.5, colour = 1),
        panel.background = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank()) +
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-74-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly there’s a problem here. It looks like R is plotting the densities individually which means its treating the data as discrete. We don’t want this! Population data or any derivation thereof are typically given in ranges due to the massive variability in measures. This type of data is called continuous. So in this case, we need to change the form of the current data set from discrete to continuous. To do that, we must convert them to characters and then to generic numbers. While this sounds silly, R is not capable of this conversion directly (or it is possible that I am not aware of how to do it directly and would absolutely love to be proven wrong!)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_thing$Density &amp;lt;- as.numeric(as.character(total_thing$Density))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK so let’s try again:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() + 
  geom_polygon(data = total_thing, aes(x=long, y = lat, fill=Density, group=County), 
               color = &amp;quot;#f8f8fa&amp;quot;, size = 0.25, show.legend = T) +
  scale_fill_viridis(alpha=1, option=&amp;quot;viridis&amp;quot;) + # fill tells R to look for continuous data to color
  theme_bw() +
  theme(plot.title = element_text(size = 26,color =&amp;quot;#105456&amp;quot;,  vjust = -1),
        legend.position =&amp;quot;right&amp;quot;,
        legend.direction = &amp;#39;vertical&amp;#39;,
        legend.key = element_rect(size = 5, color = NA),
        legend.key.size = unit(1.5, &amp;#39;lines&amp;#39;),
        legend.text = element_text(size=15, color = &amp;quot;#59595B&amp;quot;),
        legend.title = element_blank(),
        legend.title.align = 0.5,
        legend.spacing.x = unit(0.5, &amp;quot;cm&amp;quot;), 
        legend.spacing.y = unit(0.5, &amp;quot;cm&amp;quot;),
        legend.background = element_rect(linetype = 0, size = 0.5, colour = 1),
        panel.background = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.border = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank()) +
  coord_fixed(1.3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-76-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And we’ve got it! Was that a pain? Certainly! But you also have a powerful tool to grab a lot of demographic data and the knowledge to play and tweak aspects to fit other needs. In fact, some repositories only have their data within an API. If you are interested in pulling data from other government sites via APIs or otherwise, take a look at a running list here:
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://catalog.data.gov/dataset&#34; target=&#34;_blank&#34;&gt;https://catalog.data.gov/dataset&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-tract-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example: Tract Data&lt;/h2&gt;
&lt;p&gt;For this example, you’ll need the following packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidycensus)
library(tidyverse)
library(tools) 
library(sf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linking to GEOS 3.8.1, GDAL 3.1.4, PROJ 6.3.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# For ore information on sf: https://r-spatial.github.io/sf/articles/sf1.html
library(DT) 
library(ggthemes)
library(wesanderson)
options(tigris_use_cache = TRUE) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like before, let’s take a look at the packages so you get an idea what each does&lt;/p&gt;
&lt;center&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Library
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Description
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Repository
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Example
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;tidycensus&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Another census package. You can actually use any of the others but this is included to give you variety
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/walkerke/tidycensus&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://walker-data.com/tidycensus/articles/basic-usage.html&#34; target=&#34;_blank&#34;&gt;Vignette&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;code&gt;tidyverse&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; vertical-align: middle !important;&#34;&gt;
Nope
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;a href=&#34;https://github.com/tidyverse/tidyverse&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; vertical-align: middle !important;&#34;&gt;
&lt;a href=&#34;https://www.tidyverse.org/&#34; target=&#34;_blank&#34;&gt;Homepage&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;tools&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Used to manipulating R packages and their documentation
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://www.rdocumentation.org/packages/tools/versions/3.6.2&#34; target=&#34;_blank&#34;&gt;None&lt;a href=&#34;#fn2&#34; class=&#34;footnote-ref&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540&#34; target=&#34;_blank&#34;&gt;StackOverflow&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;sf&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Package that houses spatial geometries and provides a relatively easy way to convert data frames to map objects
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/r-spatial/sf&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://r-spatial.github.io/sf/articles/sf1.html&#34; target=&#34;_blank&#34;&gt;Vignette&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;DT&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Nice package to see data frames in a more interactive display
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/rstudio/DT&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://rstudio.github.io/DT/&#34; target=&#34;_blank&#34;&gt;Vignette&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;ggthemes&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Additional ggplot themes you can use
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/jrnold/ggthemes&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://mran.microsoft.com/snapshot/2017-02-04/web/packages/ggthemes/vignettes/ggthemes.html&#34; target=&#34;_blank&#34;&gt;Walkthrough&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;width: 10em; &#34;&gt;
&lt;code&gt;wesanderson&lt;/code&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;width: 30em; &#34;&gt;
Palette based on Wes Anderson movies
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://github.com/karthik/wesanderson&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:center;width: 10em; &#34;&gt;
&lt;a href=&#34;https://apreshill.github.io/data-vis-labs-2018/03-colors.html#95_built-in_discrete_palettes&#34; target=&#34;_blank&#34;&gt;Walkthrough&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/center&gt;
&lt;div id=&#34;getting-census-tract-level-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Getting Census Tract Level Data&lt;/h3&gt;
&lt;p&gt;Its not so obvious to get tract data sets. While there are multiple approaches, the easiest is to just ask for it. Here we’ll use the median household income from the 2015-2019 ACS in Monongalia County, WV.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mon &amp;lt;- get_acs(state = &amp;quot;WV&amp;quot;, 
               county = &amp;quot;Monongalia&amp;quot;, 
               geography = &amp;quot;tract&amp;quot;, 
               variables = &amp;quot;B19013_001&amp;quot;, 
               geometry = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the &lt;code&gt;datatable()&lt;/code&gt; command from the &lt;code&gt;DT&lt;/code&gt; package to see an better view of the output. Yours will look similar to what is shown below but with more functionality.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datatable(mon)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
GEOID
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
NAME
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
estimate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
moe
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
geometry
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010101
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16184
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12299
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.95389 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061012000
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 120, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
75667
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18721
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.97551 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010102
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.02, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13352
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9778
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.96402 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061011300
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 113, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58900
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6618
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-80.17178 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061011900
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 119, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
88967
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18567
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-80.08072 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010901
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 109.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
B19013_001
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43986
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7240
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.96288 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now we can create a custom continuous color palette. In this case we’ll use the &lt;a href=&#34;https://github.com/karthik/wesanderson&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;wesanderson&lt;/code&gt;&lt;/a&gt; palette but please feel free to use your own.&lt;/p&gt;
&lt;p&gt;Here is the discrete scale with five colors…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wes_palette(&amp;quot;Rushmore1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-83-1.png&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;…that has been converted to a continuous scale with 105,474 colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pal &amp;lt;- wes_palette(&amp;quot;Rushmore1&amp;quot;, 
                   max(mon$estimate), 
                   type = &amp;quot;continuous&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;single-map&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Single Map&lt;/h3&gt;
&lt;p&gt;We can plot the median household income using&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mon %&amp;gt;%
  ggplot(aes(fill = estimate)) + 
  geom_sf(color = NA) + 
  scale_fill_gradientn(colors = pal) +
  theme_map() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-85-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;faceting-map&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Faceting Map&lt;/h3&gt;
&lt;p&gt;We can also break down a map using &lt;code&gt;facet_wrap()&lt;/code&gt;. For example, let’s pull data for race, in particular for White, Black, Asian and Hispanic Populations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;racevars &amp;lt;- c(White = &amp;quot;P005003&amp;quot;, 
              Black = &amp;quot;P005004&amp;quot;, 
              Asian = &amp;quot;P005006&amp;quot;, 
              Hispanic = &amp;quot;P004003&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mon_race &amp;lt;- get_decennial(geography = &amp;quot;tract&amp;quot;,
                          variables = racevars,
                          state = &amp;quot;WV&amp;quot;, 
                          county = &amp;quot;Monongalia County&amp;quot;, 
                          geometry = TRUE,
                          summary_var = &amp;quot;P001001&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again we can use the &lt;code&gt;datatable()&lt;/code&gt; command from the &lt;code&gt;DT&lt;/code&gt; package to see an interactive view of the output&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;datatable(mon_race)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
GEOID
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
NAME
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
value
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
summary_value
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
geometry
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010101
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
White
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1257
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1424
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.94987 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010101
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Black
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
38
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1424
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.94987 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010101
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Asian
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
45
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1424
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.94987 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010101
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 101.01, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Hispanic
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
66
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1424
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.94987 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010202
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 102.02, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
White
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3424
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3823
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.95593 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
54061010202
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Census Tract 102.02, Monongalia County, West Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Black
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
143
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3823
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MULTIPOLYGON (((-79.95593 3…
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mon_race %&amp;gt;%
  mutate(pct = 100 * (value / summary_value)) %&amp;gt;%
  ggplot(aes(fill = pct)) +
  facet_wrap(~variable) +
  geom_sf(color = NA) + 
  scale_fill_gradientn(colors = pal) +
  theme_map() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-90-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well we know that West Virginia is primarily White resulting in a skewed distribution. To see how the other populations look proportionally by facet rather than overall, we can use a transformation in our scaling. In particular using a logarithmic transformation via &lt;code&gt;trans=&#34;log10&#34;&lt;/code&gt; when within a &lt;code&gt;scale_&lt;/code&gt; is sufficient. Remember that maps are generally considered to be approximations of the actual data, rather than an exact representation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mon_race %&amp;gt;%
  mutate(pct = 100 * (value / summary_value)) %&amp;gt;%
  ggplot(aes(fill = pct)) +
  facet_wrap(~variable) +
  geom_sf(color = NA) + 
  scale_fill_gradientn(colors = pal,
                       trans=&amp;quot;log10&amp;quot;) +
  theme_map() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://edp693e.theoreticalphysed.com/assignment/06-assignment_files/figure-html/unnamed-chunk-91-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Documentation provided&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Documentation provided&lt;a href=&#34;#fnref2&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
