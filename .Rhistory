)
assign(paste0("authorBundleRecolor_",times[i]), authorBundleRecolor)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
.style("stroke",edge.color);
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b")
.style("stroke",edge.color);
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
levels(authorclr)
V(authorBundle)$color
authorBundle
nodeclr <- as.factor(V(authorBundle)$name)
ntimes <- length(levels(nodeclr))
levels(nodeclr) <- rep(c("#01978b"),
ntimes)
nodeclr <- as.factor(V(authorBundle)$name)
ntimes <- length(levels(nodeclr))
levels(nodeclr) <- rep(c("#01978b"),
ntimes)
V(authorBundle)$color <- as.character(nodeclr)
labelclr <- as.factor(V(authorBundle)$name)
mtimes <- length(levels(labelclr))
levels(labelclr) <- rep(c("#627984"),
mtimes)
V(authorBundle)$label.color <- as.character(labelclr)
authorBundleRe <- edgebundle(authorBundle,
tension = 0.7,
cutoff = 0,
padding = 220,
width = 1000,
fontsize = 10,
nodesize = c(3, 3),
directed = FALSE)
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
V(authorBundle)$label.color
# For loop for Timeframes ----
times <- authorList %>%
select(Timeframe) %>%
distinct() %>%
pull(-1)
Annual <- tibble()
for(i in 1:length(times)) {
partition <- authorList %>%
filter(Timeframe == times[i])
authorEdgeList <- partition %>%
group_by(Title) %>%
filter(n()>=2) %>%
do(data.frame(t(combn(.$Author, 2)),
stringsAsFactors=FALSE)) %>%
distinct() %>%
filter(X1 != X2) %>%
ungroup() %>%
select(from = X1, to = X2, Article = Title) %>%
arrange(from) %>%
drop_na(Article) %>%
mutate(from = factor(from, unique(from))) %>%
mutate(from = as.character(from)) %>%
rename(id = Article) %>%
mutate(across(where(is.character), str_squish)) %>%
mutate(key = from)
sourceArticle <- authorEdgeList %>%
select(Author = from, id)
destinationArticle <- authorEdgeList %>%
select(Author = to, id)
nodes <- rbind(sourceArticle, destinationArticle) %>%
select(Author) %>%
distinct()
authorBundle <- graph_from_data_frame(authorEdgeList,
directed = FALSE,
vertices = nodes)
nodeclr <- as.factor(V(authorBundle)$name)
ntimes <- length(levels(nodeclr))
levels(nodeclr) <- rep(c("#01978b"),
ntimes)
V(authorBundle)$color <- as.character(nodeclr)
authorBundleRe <- edgebundle(authorBundle,
tension = 0.7,
cutoff = 0,
padding = 220,
width = 1000,
fontsize = 10,
nodesize = c(3, 3),
directed = FALSE)
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
assign(paste0("authorBundleRecolor_",times[i]), authorBundleRecolor)
saveEdgebundle(authorBundleRecolor,
paste0("authorBundle_",times[i],".html"),
selfcontained = TRUE)
}
authorBundleRecolor
Annual <- tibble()
for(i in 1:length(times)) {
partition <- authorList %>%
filter(Timeframe == times[i])
authorEdgeList <- partition %>%
group_by(Title) %>%
filter(n()>=2) %>%
do(data.frame(t(combn(.$Author, 2)),
stringsAsFactors=FALSE)) %>%
distinct() %>%
filter(X1 != X2) %>%
ungroup() %>%
select(from = X1, to = X2, Article = Title) %>%
arrange(from) %>%
drop_na(Article) %>%
mutate(from = factor(from, unique(from))) %>%
mutate(from = as.character(from)) %>%
rename(id = Article) %>%
mutate(across(where(is.character), str_squish)) %>%
mutate(key = from)
sourceArticle <- authorEdgeList %>%
select(Author = from, id)
destinationArticle <- authorEdgeList %>%
select(Author = to, id)
nodes <- rbind(sourceArticle, destinationArticle) %>%
select(Author) %>%
distinct()
authorBundle <- graph_from_data_frame(authorEdgeList,
directed = FALSE,
vertices = nodes)
nodeclr <- as.factor(V(authorBundle)$name)
ntimes <- length(levels(nodeclr))
levels(nodeclr) <- rep(c("#627984"),
ntimes)
V(authorBundle)$color <- as.character(nodeclr)
authorBundleRe <- edgebundle(authorBundle,
tension = 0.7,
cutoff = 0,
padding = 220,
width = 1000,
fontsize = 10,
nodesize = c(3, 3),
directed = FALSE)
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
assign(paste0("authorBundleRecolor_",times[i]), authorBundleRecolor)
saveEdgebundle(authorBundleRecolor,
paste0("authorBundle_",times[i],".html"),
selfcontained = TRUE)
}
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
nodes.style("stroke","#01978b");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
nodes.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b")
nodes.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".node-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".node-"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".node")
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".node"+d.key)
.style("stroke","#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.selectAll(".node"+d.key)
.style("#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.select(".node")
.style("#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
authorBundleRecolor <-
htmlwidgets::onRender(
authorBundleRe,
'
function(el,x){
// select all the links:
var links = d3.select(el).selectAll(".link");
// select all the nodes:
var nodes = d3.select(el).selectAll(".node");
// set up an event listener on the nodes:
nodes.on("mouseover", function(d) {
// color matching links:
d3.selectAll(".source-"+d.key)
.style("stroke","#01978b")
d3.selectAll(".target-"+d.key)
.style("stroke","#01978b");
d3.select("node")
.style("#01978b");
})
nodes.on("mouseout", function() {
links.style("stroke","#a7ddf4");
})
}
'
)
authorBundleRecolor
View(`authorBundleRecolor_Year 6 Q2`)
View(`authorBundleRecolor_Year 6 Q4`)
View(`authorBundleRecolor_Year 6 Q4`)
