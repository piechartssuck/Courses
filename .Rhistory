mutate(type = "Awards or Honors") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = `Awards or Honors`) %>%
unite(`Awards or Honors`,
starts_with("Awards"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# National Societies or Organizations ----
natsocOrg <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q9_")) %>%
gather(key, value = "Memberships in National Societies or Organizations", -pid, -name, -quarter, -year) %>%
na.omit() %>%
select(-key) %>%
distinct() %>%
mutate(type = "Memberships in National Societies or Organizations") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = `Memberships in National Societies or Organizations`) %>%
unite(`Memberships in National Societies or Organizations`,
starts_with("Memberships"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Professional Development ----
pd <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q10")) %>%
gather(key, value = "Professional Development Opportunities", -pid, -name, -quarter, -year) %>%
na.omit() %>%
select(-key) %>%
distinct() %>%
replacements() %>%
mutate(pid = as.numeric(pid)) %>%
mutate(quarter = as.numeric(quarter)) %>%
mutate(type = "Professional Development Opportunities") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = `Professional Development Opportunities`) %>%
unite(`Professional Development Opportunities`,
starts_with("Professional"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Resident Fellows ----
fellowRes <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q11")) %>%
gather(key, value = "Resident Fellows", -pid, -name, -quarter, -year) %>%
na.omit() %>%
select(-key) %>%
mutate(`Resident Fellows` = str_to_title(`Resident Fellows`)) %>%
distinct() %>%
replacements() %>%
mutate(pid = as.numeric(pid)) %>%
mutate(quarter = as.numeric(quarter)) %>%
mutate(type = "Resident Fellows") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = `Resident Fellows`) %>%
unite(`Resident Fellows`,
starts_with("Resident"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Manuscripts ----
# ~ Stack title, journal, first author and DOI information ----
pubListPre <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q83")) %>%
gather(key = item, value = value, -c(pid, name, quarter, year)) %>%
na.omit() %>%
mutate(value = str_remove_all(value, c("https://doi.org/"))) %>%
mutate(value = str_remove_all(value, c("doi/"))) %>%
mutate(value = str_remove_all(value, c(";. doi:"))) %>%
mutate(value = str_remove_all(value, c("doi:"))) %>%
mutate(value = str_remove_all(value, c("\\.$"))) %>%
mutate(value = str_remove_all(value, c("\\.^"))) %>%
mutate(value = na_if(value, "not assigned")) %>%
mutate(value = str_trim(value)) %>%
mutate(value = str_squish(value)) %>%
pivot_wider(id_cols = c(pid, name,quarter, year),
names_from = item,
values_from = value) %>%
unnest(cols = c(Q83_1_1, Q83_1_4, Q83_1_5, Q83_1_6, Q83_2_1, Q83_2_4, Q83_2_5,
Q83_2_6, Q83_3_1, Q83_3_4, Q83_3_5, Q83_3_6))
# ~ Manuscript tibble to get titles for search----
pubListPrep <- pubListPre %>%
gather(key, value, -c(pid, name, quarter, year)) %>%
arrange(pid, name, quarter, year) %>%
#       group_by(pid, name, quarter, year) %>%
mutate(key = substr(key, 7,7)) %>%
mutate(type = case_when(
key == "1" ~ "Title",
key == "4" ~ "Journal",
key == "5" ~ "First",
key == "6" ~ "DOI"
)) %>%
drop_na(value) %>%
select(-key) %>%
pivot_wider(names_from = type,
values_from = value) %>%
unnest(cols = c(Title, Journal, First, DOI)) %>%
filter_at(vars(Title,Journal,First,DOI),
any_vars(!is.na(.))) %>%
mutate(Title = str_replace_all(Title, ". Coexistence", "Coexistence")) %>%
mutate(Title = str_to_title(Title)) %>%
mutate(tag = "[TI]") %>% #https://www.nlm.nih.gov/bsd/mms/medlineelements.html
unite("Title", Title, tag, sep = "", remove = TRUE) %>%
distinct()
# ~ Pull vector ----
title_list <- pubListPrep %>%
select(Title) %>%
distinct() %>%
mutate(tag = "[ALL]") %>% #https://www.nlm.nih.gov/bsd/mms/medlineelements.html
unite("Title", Title, tag, sep = "", remove = TRUE) %>%
pull()
# ~ Grab pmid inforation ----
pmids_from_titles <- tibble(pubListPrep$pid, lapply(pubListPrep$Title, function(z) tryCatch(entrez_search(z, db="pubmed"),
error = function(e) e))) %>%
rename(pid = c(1),
pmid = c(2))  %>%
filter(!map_lgl(pmid, is.null)) %>%
unnest(cols = c(pmid)) %>%
mutate(pmid = as.character(pmid)) %>%
filter(!str_detect(pmid, "pointer")) %>%
filter(!str_detect(pmid, "list"))  %>%
filter(!str_detect(pmid, "All Fields")) %>%
filter(!str_detect(pmid, "TI")) %>%
filter(str_detect(pmid, "^3"))
# ~ Search NCBI to get DOIs from pmids ----
dois_from_pmids <- tibble(pmids_from_titles$pid, lapply(pmids_from_titles$pmid, function(z) tryCatch(id_converter(z),
error = function(e) e))) %>%
rename(pid = c(1),
doi = c(2))  %>%
filter(!map_lgl(doi, is.null)) %>%
unnest(cols = c(doi)) %>%
rbind() %>%
filter(str_detect(doi, "doi")) %>%
separate(doi, c("pmcid", "pmid", "DOI", "other"), sep=",") %>%
select(pid, DOI) %>%
mutate(DOI = str_extract_all(DOI, '(?<=").*?(?=")')) %>%
mutate(DOI = as.character(DOI))
# ~ Fill in pmids that are missing ----
most_dois <- pubListPrep %>%
left_join(dois_from_pmids) %>%
distinct()
# ~ Pull publication information in APA formatting ----
httr::set_config(httr::config(http_version = 0))
apa_from_doi <- tibble(pubListPrep$pid,
lapply(most_dois$DOI, function(z) tryCatch(cr_cn(z, format = "text", style = "apa"),
error = function(e) e))) %>%
rename(pid = c(1),
apa = c(2)) %>%
filter(!apa == "NULL") %>%
unnest(apa)
# ~ Wrangle publist ----
pubList <- most_dois %>%
left_join(apa_from_doi) %>%
rowwise() %>%
mutate(Title = str_remove_all(Title, "\\[TI\\]")) %>%
mutate(Title = str_to_sentence(Title)) %>%
rowwise() %>%
mutate(isMatch = grepl(DOI, apa, ignore.case = TRUE)) %>%
filter(isMatch == "TRUE" | is.na(isMatch)) %>%
select(-isMatch) %>%
mutate(apa = coalesce(apa, Title)) %>%
select(pid, name, quarter, year, apa) %>%
drop_na(apa) %>%
distinct() %>%
mutate(type = "Publication") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = apa) %>%
unite(Publications,
starts_with("Publication"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Presentations ----
# ~ Stack title, conference, location, date, authors information ----
presList <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q86")) %>%
gather(key, value, -pid, -name, -quarter, -year) %>%
mutate(key = substr(key, 7,7)) %>%
mutate(type = case_when(
key == "1" ~ "Title",
key == "2" ~ "Conference",
key == "3" ~ "Location",
key == "4" ~ "Date",
key == "5" ~ "Authors"
)) %>%
mutate(value = str_remove_all(value, c("\\.$"))) %>%
mutate(value = str_remove_all(value, c("\\.^"))) %>%
mutate(value = str_trim(value)) %>%
mutate(value = str_squish(value)) %>%
drop_na(value) %>%
select(-key) %>%
pivot_wider(names_from = type,
values_from = value) %>%
unnest(cols = c(Title, Conference, Location, Date, Authors)) %>%
filter_at(vars(Title, Conference, Location, Date, Authors),
any_vars(!is.na(.))) %>%
unite("pres",
c(Title,Conference,Location,Date,Authors),
sep = ", ",
remove = TRUE,
na.rm = TRUE) %>%
distinct() %>%
mutate(type = "Presentation") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = pres) %>%
unite(Presentations,
starts_with("Presentation"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Presentations ----
# ~ Stack title, conference, location, date, authors information ----
presList <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q86")) %>%
gather(key, value, -pid, -name, -quarter, -year) %>%
mutate(key = substr(key, 7,7)) %>%
mutate(type = case_when(
key == "1" ~ "Title",
key == "2" ~ "Conference",
key == "3" ~ "Location",
key == "4" ~ "Date",
key == "5" ~ "Authors"
)) %>%
mutate(value = str_remove_all(value, c("\\.$"))) %>%
mutate(value = str_remove_all(value, c("\\.^"))) %>%
mutate(value = str_trim(value)) %>%
mutate(value = str_squish(value)) %>%
drop_na(value) %>%
select(-key) %>%
pivot_wider(names_from = type,
values_from = value) %>%
unnest(cols = c(Title, Conference, Location, Date, Authors)) %>%
filter_at(vars(Title, Conference, Location, Date, Authors),
any_vars(!is.na(.))) %>%
unite("pres",
c(Title,Conference,Location,Date,Authors),
sep = ", ",
remove = TRUE,
na.rm = TRUE) %>%
distinct() %>%
mutate(type = "Presentation") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = pres) %>%
unite(Presentations,
starts_with("Presentation"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Funded Awards ----
awards <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q89_")) %>%
names() %>%
substr(1,5) %>%
unique() %>%
lapply(function(x){unite(wrangled, !!x, grep(x, names(wrangled),
value = TRUE),
sep = ", ",
remove = TRUE,
na.rm = TRUE) %>%
select_(x)}) %>%
bind_cols() %>%
rename(quarter = quart) %>%
mutate_all(na_if,"") %>%
gather(key, value = awards, -pid, -name, -quarter, -year) %>%
na.omit() %>%
select(-key) %>%
mutate(awards = str_to_title(awards)) %>%
filter(!str_detect(awards, "Error")) %>%
distinct() %>%
replacements() %>%
mutate(pid = as.numeric(pid)) %>%
mutate(quarter = as.numeric(quarter)) %>%
mutate(type = "Funded Awards") %>%
group_by(pid, quarter, year) %>%
pivot_wider(names_from = type, # change back to types if uniting columns
values_from = awards) %>%
unite(`Funded Awards`,
starts_with("Funded"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Funding ----
funding <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q92_")) %>%
names() %>%
substr(1,5) %>%
unique() %>%
lapply(function(x){unite(wrangled, !!x, grep(x, names(wrangled),
value = TRUE),
sep = ", ",
remove = TRUE,
na.rm = TRUE) %>%
select_(x)}) %>%
bind_cols() %>%
rename(quarter = quart) %>%
mutate_all(na_if,"") %>%
gather(key, value = funding, -pid, -name, -quarter,-year) %>%
na.omit() %>%
select(-key) %>%
mutate(funding = str_to_title(funding)) %>%
filter(!str_detect(funding, "Error")) %>%
distinct() %>%
replacements() %>%
mutate(pid = as.numeric(pid)) %>%
mutate(quarter = as.numeric(quarter)) %>%
mutate(type = "External Funding") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = funding) %>%
unite(`External Funding`,
starts_with("External"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
# Service ----
service <- wrangled %>%
select(pid,
name,
quarter,
year,
starts_with("Q95_")) %>%
names() %>%
substr(1,5) %>%
unique() %>%
lapply(function(x){unite(wrangled, !!x, grep(x, names(wrangled),
value = TRUE),
sep = ", ",
remove = TRUE,
na.rm = TRUE) %>%
select_(x)}) %>%
bind_cols() %>%
rename(quarter = quart) %>%
mutate_all(na_if,"") %>%
gather(key, value = service, -pid, -name, -quarter, -year) %>%
na.omit() %>%
select(-key) %>%
mutate(service = str_to_title(service)) %>%
filter(!str_detect(service, "Error")) %>%
distinct() %>%
replacements() %>%
mutate(pid = as.numeric(pid)) %>%
mutate(quarter = as.numeric(quarter)) %>%
mutate(type = "Services Rendered") %>%
group_by(pid, quarter, year) %>%
mutate(num = 1:n()) %>%
unite("types", c(type, num), sep = " ") %>%
pivot_wider(names_from = types,
values_from = service) %>%
unite(`Services Rendered`,
starts_with("Services"),
remove = TRUE,
na.rm = TRUE,
sep = "<br/><br/>") %>%
distinct()
## END SETS ----
# Joins ----
s1 <- base %>%
left_join(nameOrcid) %>%
left_join(roles) %>%
mutate(`Enrolled in a CTS Academic Program` = case_when(!is.na(`Enrolled in a CTS Academic Program`) ~ "Enrolled",
TRUE ~ as.character("Not Enrolled"))) %>%
mutate(`PI on Pilot Grant` = case_when(!is.na(`PI on Pilot Grant`) ~ "PI",
TRUE ~ as.character("Not a PI"))) %>%
mutate(`Received Start-Up Funds or Protected Time as Part of Recruitment Package` = case_when(!is.na(`Received Start-Up Funds or Protected Time as Part of Recruitment Package`) ~ "Awarded",
TRUE ~ as.character("Not Awarded"))) %>%
mutate(`Research Scholar` = case_when(!is.na(`Research Scholar`) ~ "Research Scholar",
TRUE ~ as.character("Not a Research Scholar"))) %>%
left_join(pd) %>%
left_join(fellowRes) %>%
left_join(programs) %>%
mutate(`CTS Certificate Program` = case_when(!is.na(`CTS Certificate Program`) ~ "Enrolled",
TRUE ~ as.character("Not Enrolled"))) %>%
mutate(`CTS Master of Science Program` = case_when(!is.na(`CTS Master of Science Program`) ~ "Enrolled",
TRUE ~ as.character("Not Enrolled"))) %>%
mutate(`CTS PhD Program` = case_when(!is.na(`CTS PhD Program`) ~ "Enrolled",
TRUE ~ as.character("Not Enrolled"))) %>%
left_join(awardHonor) %>%
left_join(natsocOrg) %>%
left_join(pubList) %>%
left_join(presList) %>%
left_join(awards) %>%
left_join(funding) %>%
left_join(service)%>%
distinct() %>%
filter_all(any_vars(!is.na(.))) %>%
drop_na(name) %>%
distinct() %>%
rename_all(tools::toTitleCase) %>%
rename(`ORCID iD` = Orcid) %>%
arrange(Quarter) %>%
relocate(Quarter, .after = Year) %>%
mutate(Quarter = case_when(
Quarter == 1 ~ "First",
Quarter == 2 ~ "Second",
Quarter == 3 ~ "Third",
Quarter == 4 ~ "Fourth"
)
) %>%
distinct() %>%
replacements() %>%
mutate(Pid = as.numeric(Pid)) %>%
left_join(raw, by = c("Pid" = "pid",
"Name" = "name",
"Quarter"= "quarter",
"Year"= "year"))
s2 <- s1 %>%
select(where(~!all(is.na(.x))))
View(s2)
s2
# Gather all label attributes ----
labelAttr <- function(dta) {
labels <- sapply(dta, function(x) attr(x, "label"))
tibble(item = names(labels),
question = labels)
}
# Gather all label attributes ----
labelAttr <- function(dta) {
labels <- sapply(dta, function(x) attr(x, "label"))
tibble(item = names(labels),
question = labels)
}
s2 <- s1 %>%
select(where(~!all(is.na(.x)))) %>%
labelAttr()
install.packages(c("ggthemes", "shinyWidgets", "stars", "tmap", "tmaptools"))
install.packages("brio")
install.packages("brio")
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark.rstheme", apply=TRUE, force=TRUE)
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark%20(Static).rstheme", apply=TRUE, force=TRUE)
install.packages("rstudioapi")
install.packages("rstudioapi")
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark.rstheme", apply=TRUE, force=TRUE)
rstudioapi::addTheme("https://raw.githubusercontent.com/patrickshox/Mojave-Dark-RStudio-Theme/master/Mojave%20Dark%20(Static).rstheme", apply=TRUE, force=TRUE)
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes(include_base16 = TRUE)
rstudioapi::applyTheme("One Dark {rsthemes}")
rstudioapi::applyTheme("Horizon Dark {rsthemes}")
install.packages("ragg")
oceanic_theme <- "https://raw.githubusercontent.com/gadenbuie/oceanic-eighties/master/oceanic-eighties.rstheme"
rstudioapi::addTheme(oceanic_theme, apply = TRUE)
ceanic_theme <- fs::path_temp("Oceanic-Eighties", ext = "rstheme")
download.file("https://git.io/rstudio-theme-oceanic-eighties", oceanic_theme)
rstudioapi::addTheme(oceanic_theme, apply = TRUE)
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693e")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
