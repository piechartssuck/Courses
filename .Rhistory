dtm <- cast_dtm(corpus, category, word, tf_idf)
tsneThing <- Rtsne(as.matrix(dtm), perplexity = 1)
tsneThing$Y <- data.frame(cbind(rownames(dtm), tsneThing$Y),
stringsAsFactors = F)
colnames(tsneThing$Y) <- c("PMID", paste("tsneComp", 1:(ncol(tsneThing$Y) -
1), sep = ""))
tsneThing$Y[, 2:ncol(tsneThing$Y)] <- sapply(tsneThing$Y[, 2:ncol(tsneThing$Y)],
as.numeric) %>% unname()
return(tsneThing)
}
tsneThing <- thingTSNE(tidy_df)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
tsneThing
# Create a Document-Term Matrix ----
dtm_test <- cast_dtm(corpus, category, word, tf_idf)
tsneThing
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
dim_reduction
inner_join(tidy_df,tsneObj$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
tsneThing$Y
tsneThing
thingTSNE <- function (tidyThing_df = NULL, ...)
{
dtm <- cast_dtm(corpus, category, word, tf_idf)
tsneThing <- Rtsne(as.matrix(dtm), perplexity = 1)
tsneThing$Y <- data.frame(cbind(rownames(dtm), tsneThing$Y),
stringsAsFactors = F)
colnames(tsneThing$Y) <- c("category", paste("tsneComp", 1:(ncol(tsneThing$Y) -
1), sep = ""))
tsneThing$Y[, 2:ncol(tsneThing$Y)] <- sapply(tsneThing$Y[, 2:ncol(tsneThing$Y)],
as.numeric) %>% unname()
return(tsneThing)
}
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get stop words ----
stop_words <- tidytext::stop_words
# Filter data set ----
sure <- read_csv("sure_ds.csv") %>%
select(starts_with("Week") | starts_with("Most"))
# Partition columns ----
sure_long <- sure %>%
gather(key = category, value = response)
tidy_df <- tidyThing(corpus = sure_long)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
# plot the t-SNE results
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_bw()
# plot the t-SNE results
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_min()
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_minimal()
# plot the t-SNE results
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_minimal()
#run HDBSCAN and select the optimal cluster parameters automatically
optClusters <- optimalParam(tsne_coords)
optClusters
optimalParam
#run HDBSCAN and select the optimal cluster parameters automatically
optClusters <- optimalParam(tsne_coords)
library(adjutant)
library(tidyverse)
library(tidytext)
library(textstem)
library(SnowballC)
library(Rtsne)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get stop words ----
stop_words <- tidytext::stop_words
# Filter data set ----
sure <- read_csv("sure_ds.csv") %>%
select(starts_with("Week") | starts_with("Most"))
# Partition columns ----
sure_long <- sure %>%
gather(key = category, value = response)
tidy_df <- tidyThing(corpus = sure_long)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
sure
ure %>%
gather(key = category, value = response)
# Get stop words ----
stop_words <- tidytext::stop_words
# Filter data set ----
sure <- read_csv("sure_ds.csv") %>%
select(starts_with("Week") | starts_with("Most"))
# Partition columns ----
sure_long <- sure %>%
gather(key = category, value = response)
sure_long
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response)
biweekly
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
tibble()
biweekly
tidy_df <- tidyThing(corpus = sure_long)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
# plot the t-SNE results
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_minimal()
tsne_coords
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
tibble()
tidy_df <- tidyThing(corpus = sure_long)
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
select(-category) %>%
rowid_to_column()
tidy_df <- tidyThing(corpus = sure_long)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
# plot the t-SNE results
ggplot(tsne_coords, aes(x= tsneComp1, y=tsneComp2)) +
geom_point(alpha=0.2) +
theme_minimal()
biweekly
tidy_df <- tidyThing(corpus = sure_long)
tidy_df
tidy_df <- tidyThing(corpus = biweekly)
tidy_df
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
tidy_df
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
select(-category) %>%
rowid_to_column()
biweekly
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
select(-category) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
biweekly
tidy_df <- tidyThing(corpus = biweekly)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble()%>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
tsne_coords
dim_reduction
inner_join(tidy_df, tsneThing$Y, by="category")
tidy_df
tsneThing$Y
tsneThing
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
tidy_df
tsneThing  %>%
tibble()
tsneThing  %>%
tibble() %>%
unnest(cols = c(.))
tsneThing
corpus
View(corpus)
tidyThing <- function (corpus = NULL, stopTerms = NULL)
{
if (requireNamespace("tidytext", quietly = TRUE)) {
stop_words <- tidytext::stop_words
}
customStopTerms <- data.frame(word = c("we", "mg", "http", "com"))
surveyWords <- c("we", "http", "com")
if (!is.null(stopTerms)) {
customStopTerms = data.frame(word = c(stopTerms, surveyWords))
}
else {
customStopTerms <- data.frame(word = surveyWords)
}
tidyThing_df <- corpus %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
return(tidyThing_df)
}
thingTSNE <- function (tidyThing_df = NULL, ...)
{
dtm <- cast_dtm(corpus, category, word, tf_idf)
tsneThing <- Rtsne(as.matrix(dtm), perplexity = 1)
tsneThing$Y <- data.frame(cbind(rownames(dtm), tsneThing$Y),
stringsAsFactors = F)
colnames(tsneThing$Y) <- c("category", paste("tsneComp", 1:(ncol(tsneThing$Y) -
1), sep = ""))
tsneThing$Y[, 2:ncol(tsneThing$Y)] <- sapply(tsneThing$Y[, 2:ncol(tsneThing$Y)],
as.numeric) %>% unname()
return(tsneThing)
}
library(adjutant)
library(tidyverse)
library(tidytext)
library(textstem)
library(SnowballC)
library(Rtsne)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get stop words ----
stop_words <- tidytext::stop_words
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = category, value = response) %>%
select(-category) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
biweekly
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = timepoint, value = response) %>%
select(-category) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = timepoint, value = response) %>%
select(-timepoint) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
tidy_df <- tidyThing(corpus = biweekly)
tidy_df
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
# Reduce dimensions  ----
dim_reduction <- tsneThing  %>%
tibble() %>%
unnest(cols = c(.))
# Add t-SNE coordinates to df object ----
tsne_coords <- inner_join(tidy_df, tsneThing$Y, by="category") %>%
distinct(category, .keep_all = TRUE)
tsne_coords
tsneThing  %>%
tibble() %>%
unnest(cols = c(.))
tidy_df
tsneThing  %>%
tibble()
tsneThing  %>%
tibble() %>%
unnest(cols = c(.))
tibble(tsneThing)  %>%
unnest(cols = c(.))
tsneThing
tsneThing  %>%
as_tibble()
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = timepoint, value = response) %>%
select(-timepoint) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
tidy_df <- tidyThing(corpus = biweekly)
tidy_df
tidy_df <- tidyThing(corpus = biweekly)
biweekly
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
tsneThing
corpus %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
corpus
rm(corpus)
corpus
library(adjutant)
library(tidyverse)
library(tidytext)
library(textstem)
library(SnowballC)
library(Rtsne)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Get stop words ----
stop_words <- tidytext::stop_words
# Filter data set ----
biweekly <- read_csv("biweekly.csv") %>%
select(starts_with("Week") | starts_with("Most")) %>%
gather(key = timepoint, value = response) %>%
select(-timepoint) %>%
rowid_to_column() %>%
mutate(rowid = as.character(rowid))
tidy_df <- tidyThing(corpus = biweekly)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
tidyThing <- function (corpus = NULL, stopTerms = NULL)
{
if (requireNamespace("tidytext", quietly = TRUE)) {
stop_words <- tidytext::stop_words
}
customStopTerms <- data.frame(word = c("we", "mg", "http", "com"))
surveyWords <- c("we", "http", "com")
if (!is.null(stopTerms)) {
customStopTerms = data.frame(word = c(stopTerms, surveyWords))
}
else {
customStopTerms <- data.frame(word = surveyWords)
}
tidyThing_df <- corpus %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
return(tidyThing_df)
}
thingTSNE <- function (tidyThing_df = NULL, ...)
{
dtm <- cast_dtm(corpus, category, word, tf_idf)
tsneThing <- Rtsne(as.matrix(dtm), perplexity = 1)
tsneThing$Y <- data.frame(cbind(rownames(dtm), tsneThing$Y),
stringsAsFactors = F)
colnames(tsneThing$Y) <- c("category", paste("tsneComp", 1:(ncol(tsneThing$Y) -
1), sep = ""))
tsneThing$Y[, 2:ncol(tsneThing$Y)] <- sapply(tsneThing$Y[, 2:ncol(tsneThing$Y)],
as.numeric) %>% unname()
return(tsneThing)
}
biweekly
tidyThing(corpus = biweekly)
tidy_df <- tidyThing(corpus = biweekly)
tsneThing <- thingTSNE(tidy_df, check_duplicates=FALSE)
corpus
tidy_df
tidy_df <- tidyThing(corpus = biweekly)
tidy_df
cast_dtm(corpus, category, word, tf_idf)
tidyThing_df
corpus %>%
rename(category = c(1))
biweekly %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms)
biweekly %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
tidyThing <- function (corpus = NULL, stopTerms = NULL)
{
if (requireNamespace("tidytext", quietly = TRUE)) {
stop_words <- tidytext::stop_words
}
customStopTerms <- data.frame(word = c("we", "mg", "http", "com"))
surveyWords <- c("we", "http", "com")
if (!is.null(stopTerms)) {
customStopTerms = data.frame(word = c(stopTerms, surveyWords))
}
else {
customStopTerms <- data.frame(word = surveyWords)
}
tidyThing_df <- corpus %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
return(tidyThing_df)
}
thingTSNE <- function (tidyThing_df = NULL, ...)
{
dtm <- cast_dtm(corpus, category, word, tf_idf)
tsneThing <- Rtsne(as.matrix(dtm), perplexity = 1)
tsneThing$Y <- data.frame(cbind(rownames(dtm), tsneThing$Y),
stringsAsFactors = F)
colnames(tsneThing$Y) <- c("category", paste("tsneComp", 1:(ncol(tsneThing$Y) -
1), sep = ""))
tsneThing$Y[, 2:ncol(tsneThing$Y)] <- sapply(tsneThing$Y[, 2:ncol(tsneThing$Y)],
as.numeric) %>% unname()
return(tsneThing)
}
tidy_df
tidyThing <- function (corpus = NULL, stopTerms = NULL)
{
if (requireNamespace("tidytext", quietly = TRUE)) {
stop_words <- tidytext::stop_words
}
customStopTerms <- data.frame(word = c("we", "mg", "http", "com"))
surveyWords <- c("we", "http", "com")
if (!is.null(stopTerms)) {
customStopTerms = data.frame(word = c(stopTerms, surveyWords))
}
else {
customStopTerms <- data.frame(word = surveyWords)
}
tidyThing_df <- corpus %>%
rename(category = c(1)) %>%
rename(text = c(2)) %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
anti_join(customStopTerms) %>%
filter(str_length(word) > 2) %>%
filter(!str_detect(word, "\\d")) %>%
mutate(wordStemmed = wordStem(word)) %>%
select(category, word, wordStemmed) %>%
dplyr::count(category, wordStemmed, sort = TRUE) %>%
ungroup() %>%
bind_tf_idf(wordStemmed, category, n)
return(tidyThing_df)
}
tidyThing_df
corpus %>%
rename(category = c(1))
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp611")
blogdown::build_site()
blogdown::serve_site()
