select(-starts_with("At this time")|contains(indicators_ps)) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup() %>%
gather(key = Item,
value = Agreement,
-c(Respondent, "Recipient Email")) %>%
mutate(Agreement = str_replace_all(Agreement,
"Neither Agree not Disagree",
"Neither Agree nor Disagree")) %>%
mutate(Measure = case_when(
Agreement == "Strongly Agree" ~ 4,
Agreement == "Agree" ~ 3,
Agreement == "Neither Agree nor Disagree" ~ 2,
Agreement == "Disagree" ~ 1,
Agreement == "Strongly Disagree" ~ 0
)) %>%
filter(str_detect(Agreement, 'agree')) %>%
separate(Item, c('Item', 'Timepoint'), sep="_") %>%
mutate(Timepoint = case_when(
Timepoint == "1" ~ "t1",
Timepoint == "2" ~ "t2"
)
) %>%
separate(Item, c('QID', 'Item'), sep="  ") %>%
arrange(Respondent) %>%
group_by(Respondent, Item) %>%
mutate(Group_ID = cur_group_id()) %>%
ungroup() %>%
select(Group_ID, Timepoint, Measure) %>%
rowid_to_column(var = "row_number") %>%
pivot_wider(id_cols = Group_ID,
names_from = Timepoint,
values_from = Measure) %>%
arrange(Group_ID)
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup() %>%
gather(key = Item,
value = Agreement,
-c(Respondent, "Recipient Email")) %>%
mutate(Agreement = str_replace_all(Agreement,
"Neither Agree not Disagree",
"Neither Agree nor Disagree")) %>%
mutate(Measure = case_when(
Agreement == "Strongly Agree" ~ 4,
Agreement == "Agree" ~ 3,
Agreement == "Neither Agree nor Disagree" ~ 2,
Agreement == "Disagree" ~ 1,
Agreement == "Strongly Disagree" ~ 0
))
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)) %>%
%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps))
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|"Recipient Email")
psych_safety <-  elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|"Recipient Email") %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup() %>%
gather(key = Item,
value = Agreement,
-c(Respondent, "Recipient Email")) %>%
mutate(Agreement = str_replace_all(Agreement,
"Neither Agree not Disagree",
"Neither Agree nor Disagree")) %>%
mutate(Measure = case_when(
Agreement == "Strongly Agree" ~ 4,
Agreement == "Agree" ~ 3,
Agreement == "Neither Agree nor Disagree" ~ 2,
Agreement == "Disagree" ~ 1,
Agreement == "Strongly Disagree" ~ 0
)) %>%
filter(str_detect(Agreement, 'agree')) %>%
separate(Item, c('Item', 'Timepoint'), sep="_") %>%
mutate(Timepoint = case_when(
Timepoint == "1" ~ "t1",
Timepoint == "2" ~ "t2"
)
) %>%
separate(Item, c('QID', 'Item'), sep="  ") %>%
arrange(Respondent) %>%
group_by(Respondent, Item) %>%
mutate(Group_ID = cur_group_id()) %>%
ungroup() %>%
select(Group_ID, Timepoint, Measure) %>%
rowid_to_column(var = "row_number") %>%
pivot_wider(id_cols = Group_ID,
names_from = Timepoint,
values_from = Measure) %>%
arrange(Group_ID)
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|"Recipient Email") %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup()
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|"Recipient Email") %>%
%>%
group_by("Recipient Email")
psych_safety <-  elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup() %>%
gather(key = Item,
value = Agreement,
-c(Respondent, "Recipient Email")) %>%
mutate(Agreement = str_replace_all(Agreement,
"Neither Agree not Disagree",
"Neither Agree nor Disagree")) %>%
mutate(Measure = case_when(
Agreement == "Strongly Agree" ~ 4,
Agreement == "Agree" ~ 3,
Agreement == "Neither Agree nor Disagree" ~ 2,
Agreement == "Disagree" ~ 1,
Agreement == "Strongly Disagree" ~ 0
)) %>%
filter(str_detect(Agreement, 'agree')) %>%
separate(Item, c('Item', 'Timepoint'), sep="_") %>%
mutate(Timepoint = case_when(
Timepoint == "1" ~ "t1",
Timepoint == "2" ~ "t2"
)
) %>%
separate(Item, c('QID', 'Item'), sep="  ") %>%
arrange(Respondent) %>%
group_by(Respondent, Item) %>%
mutate(Group_ID = cur_group_id()) %>%
ungroup() %>%
select(Group_ID, Timepoint, Measure) %>%
rowid_to_column(var = "row_number") %>%
pivot_wider(id_cols = Group_ID,
names_from = Timepoint,
values_from = Measure) %>%
arrange(Group_ID)
psych_safety <-  elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email"))
psych_safety <-  elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
ttest_wrangle <- elam_long_inner %>%
select(-starts_with("At this time")) %>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent") %>%
ungroup() %>%
gather(key = Item,
value = Agreement,
-c(Respondent, "Recipient Email")) %>%
mutate(Agreement = str_replace_all(Agreement,
"Neither Agree not Disagree",
"Neither Agree nor Disagree")) %>%
mutate(Measure = case_when(
Agreement == "Strongly Agree" ~ 4,
Agreement == "Agree" ~ 3,
Agreement == "Neither Agree nor Disagree" ~ 2,
Agreement == "Disagree" ~ 1,
Agreement == "Strongly Disagree" ~ 0
)) %>%
filter(str_detect(Agreement, 'agree')) %>%
separate(Item, c('Item', 'Timepoint'), sep="_") %>%
mutate(Timepoint = case_when(
Timepoint == "1" ~ "t1",
Timepoint == "2" ~ "t2"
)
) %>%
separate(Item, c('QID', 'Item'), sep="  ") %>%
arrange(Respondent) %>%
group_by(Respondent, Item) %>%
mutate(Group_ID = cur_group_id()) %>%
ungroup() %>%
select(Group_ID, Timepoint, Measure) %>%
rowid_to_column(var = "row_number") %>%
pivot_wider(id_cols = Group_ID,
names_from = Timepoint,
values_from = Measure) %>%
arrange(Group_ID)
elam_long_inner %>%
select(-starts_with("At this time"))
elam_long_inner %>%
select(-starts_with("At this time")) %>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email"))
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by(`Recipient Email`)
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
elam_long_inner
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email") %>%
rowid_to_column(var = "Respondent")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
as_tibble%>%
group_by("Recipient Email")
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email"))
psych_safety <-  elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email"))
str(psych_safety)
glimpse(elam_long_inner)
names(psych_safety)
elam_long_inner %>%
select(-starts_with("At this time")|contains(indicators_ps)|contains("Recipient Email")) %>%
%>%
group_by("Recipient Email")
rowid_to_column(var = "Respondent")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
devtools::install_github("haozhu233/kableExtra")
blogdown::build_site()
install.packages(c("backports", "colourpicker", "tmap"))
blogdown::build_site()
blogdown::serve_site()
library(kableExtra)
blogdown::serve_site()
blogdown::build_site()
remove.packages("kableExtra")
devtools::install_github("haozhu233/kableExtra")
blogdown::build_site()
install_version("kableExtra", version = "1.1.0", repos = "http://cran.us.r-project.org")
devtools::install_version("kableExtra", version = "1.1.0", repos = "http://cran.us.r-project.org")
detach("package:kableExtra", unload = TRUE)
remove.packages("kableExtra")
devtools::install_version("kableExtra", version = "1.1.0", repos = "http://cran.us.r-project.org")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp611")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp613")
# Graphic for the bottom of the main page
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Remove objects ----
rm(list = ls())
# Libraries
library(tidyverse)
library(RColorBrewer)
library(ggpomological)
library(ggridges)
library(hexSticker)
library(wesanderson)
library(showtext)
font_add("Kit&Caboodle Regular", "KitAndCaboodle.otf")
showtext_auto()
# library
library(ggplot2)
library(dplyr)
# Create data (this takes more sense with a numerical X axis)
x <- seq(0, 2*pi,
length.out=50)
data <- data.frame(
x=x,
y=sin(x) +
rnorm(500,
sd=0.2)
)
# Add a column with your condition for the color
data <- data %>%
mutate(mycolor = ifelse(y > 0,
"type1",
"type2"))
# plot
sin_w <- ggplot(data, aes(x=x,
y=y)) +
geom_segment(aes(x=x,
xend=x,
y=0,
yend=y,
color=y),
size=0.1,
alpha=0.9,
show.legend = FALSE) +
scale_color_gradient(low = "#ff5b77",
high = "#5bc0de") +
theme_void()
sin_w
sticker(sin_w,
package="",
p_size=9.5,
s_x=1.0,
s_y=1.0,
s_width=1.5,
s_height=1.5,
h_fill="#292A30",
h_color="#293840",
p_family = "Kit&Caboodle Regular",
filename="icon.png")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Remove objects ----
rm(list = ls())
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(RColorBrewer)
library(hexSticker)
library(showtext)
font_add("Jost* Light", "Jost-300-Light.otf")
font_add("Jost* Medium", "Jost-500-Medium.otf")
font_add("Jost* Semi", "Jost-600-Semi.otf")
font_add("Jost* Semi Italic", "Jost-600-SemiItalic.otf")
font_add("Jost* Bold", "Jost-700-Bold.otf")
font_add("Jost* Heavy", "Jost-800-Heavy.otf")
font_add("Jost* Black", "Jost-900-Black.otf")
font_add("No Tears", "No Tears.ttf")
font_add("No Tears Bold", "No Tears Bold.ttf")
showtext_auto()
# create a data frame giving the hierarchical structure of your individuals
set.seed(1234)
d1 <- data.frame(from="origin", to=paste("group", seq(1,10), sep=""))
d2 <- data.frame(from=rep(d1$to, each=10), to=paste("subgroup", seq(1,100), sep="_"))
hierarchy <- rbind(d1, d2)
# create a dataframe with connection between leaves (individuals)
all_leaves <- paste("subgroup", seq(1,100), sep="_")
connect <- rbind(
data.frame( from=sample(all_leaves, 100, replace=T) , to=sample(all_leaves, 100, replace=T)),
data.frame( from=sample(head(all_leaves), 30, replace=T) , to=sample( tail(all_leaves), 30, replace=T)),
data.frame( from=sample(all_leaves[25:30], 30, replace=T) , to=sample( all_leaves[55:60], 30, replace=T)),
data.frame( from=sample(all_leaves[75:80], 30, replace=T) , to=sample( all_leaves[55:60], 30, replace=T)) )
connect$value <- runif(nrow(connect))
# create a vertices data.frame. One line per object of our hierarchy
vertices  <-  data.frame(
name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) ,
value = runif(111)
)
# Let's add a column with the group of each name. It will be useful later to color points
vertices$group  <-  hierarchy$from[ match( vertices$name, hierarchy$to ) ]
# Create a graph object
mygraph <- graph_from_data_frame( hierarchy, vertices=vertices )
# The connection object must refer to the ids of the leaves:
from  <-  match( connect$from, vertices$name)
to  <-  match( connect$to, vertices$name)
# Basic usual argument
circos <- ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from,
to = to,
tension=0.3),
width=0.15,
alpha=0.25,
aes(color=..index..)) +
scale_edge_color_viridis(option = "D",
direction = -1) +
#  scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none") +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05, colour=group, size=value, alpha=0.2)) +
scale_colour_viridis_d(option = "D",
direction = 1) +
scale_size_continuous( range = c(0.1,0.5) )
circos
sticker(circos,
package="",
p_size=7,
s_x=1.0,
s_y=1.0,
s_width=1.6,
s_height=1.6,
h_fill="#292A30",
h_color="#293840",
p_family = "No Tears Bold",
filename="icon.png")
circos
# Graphic for the bottom of the main page
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Remove objects ----
rm(list = ls())
# Libraries
library(ggraph)
library(igraph)
library(tidyverse)
library(RColorBrewer)
library(hexSticker)
library(showtext)
font_add("Jost* Light", "Jost-300-Light.otf")
font_add("Jost* Medium", "Jost-500-Medium.otf")
font_add("Jost* Semi", "Jost-600-Semi.otf")
font_add("Jost* Semi Italic", "Jost-600-SemiItalic.otf")
font_add("Jost* Bold", "Jost-700-Bold.otf")
font_add("Jost* Heavy", "Jost-800-Heavy.otf")
font_add("Jost* Black", "Jost-900-Black.otf")
font_add("No Tears", "No Tears.ttf")
font_add("No Tears Bold", "No Tears Bold.ttf")
showtext_auto()
# create a data frame giving the hierarchical structure of your individuals
set.seed(1234)
d1 <- data.frame(from="origin", to=paste("group", seq(1,10), sep=""))
d2 <- data.frame(from=rep(d1$to, each=10), to=paste("subgroup", seq(1,100), sep="_"))
hierarchy <- rbind(d1, d2)
# create a dataframe with connection between leaves (individuals)
all_leaves <- paste("subgroup", seq(1,100), sep="_")
connect <- rbind(
data.frame( from=sample(all_leaves, 100, replace=T) , to=sample(all_leaves, 100, replace=T)),
data.frame( from=sample(head(all_leaves), 30, replace=T) , to=sample( tail(all_leaves), 30, replace=T)),
data.frame( from=sample(all_leaves[25:30], 30, replace=T) , to=sample( all_leaves[55:60], 30, replace=T)),
data.frame( from=sample(all_leaves[75:80], 30, replace=T) , to=sample( all_leaves[55:60], 30, replace=T)) )
connect$value <- runif(nrow(connect))
# create a vertices data.frame. One line per object of our hierarchy
vertices  <-  data.frame(
name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) ,
value = runif(111)
)
# Let's add a column with the group of each name. It will be useful later to color points
vertices$group  <-  hierarchy$from[ match( vertices$name, hierarchy$to ) ]
# Create a graph object
mygraph <- graph_from_data_frame( hierarchy, vertices=vertices )
# The connection object must refer to the ids of the leaves:
from  <-  match( connect$from, vertices$name)
to  <-  match( connect$to, vertices$name)
# Basic usual argument
circos <- ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from,
to = to,
tension=0.3),
width=0.15,
alpha=0.25,
aes(color=..index..)) +
scale_edge_color_viridis(option = "D",
direction = -1) +
#  scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none") +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05, colour=group, size=value, alpha=0.2)) +
scale_colour_viridis_d(option = "D",
direction = 1) +
scale_size_continuous( range = c(0.1,0.5) )
circos
sticker(circos,
package="",
p_size=7,
s_x=1.0,
s_y=1.0,
s_width=1.6,
s_height=1.6,
h_fill="#292A30",
h_color="#293840",
p_family = "No Tears Bold",
filename="icon.png")
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp611")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
