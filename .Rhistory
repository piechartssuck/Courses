caption = "Source: 2018 American Community Survey: 5-Year Estimates") +
guides(fill = guide_legend(title.position = "top",
label.position = "bottom",
label.hjust = 0.5)) +
coord_map("albers",
lat0 = 39,
lat1 = 45)
estimate_map
# Save it as a pdf on standard A4 paper widthwise
ggsave("poverty_estimates.pdf",
estimate_map,
width = 297,
height = 210,
units = "mm")
# Plot it!
estimate_map <-
ggplot() +
geom_polygon(data = map_data, aes(x = long,
y = lat,
fill = poverty_percentage,
group = group),
color = "#f8f8fa",
size = 0.20,
show.legend = TRUE) +
geom_polygon(data=subset(map_data("state")),
aes(x=long,
y=lat,
group=group),
size = 0.5,
color="white",
fill = NA) +
scale_fill_gradient(name="Estimates",
low = "#fa9fb5",
high = "#7a0177",
breaks = c(0, 25, 50, 75, 100),
limits = c(0,100),
na.value = "#c9d3d9",
labels = c(str_wrap("0.00% - 24.99%", 10),
str_wrap("25.00 - 49.99%", 10),
str_wrap("50.00% - 74.99%", 10),
str_wrap("75.00% - 99.99%", 10),
"100%"),
guide = "legend") +
theme(plot.title = element_text(size = 24,
color ="#4682b4",
vjust = -1,
hjust = 0.5),
plot.caption = element_text(size = 10,
color ="#4682b4",
face = "italic",
margin = margin(t = 1,
unit = "cm")),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key = element_rect(size = 5,
color = NA),
legend.key.width = unit(2,
"cm"),
legend.text = element_text(size = 12,
color = "#4682b4"),
legend.title.align = 0.5,
legend.title = element_text(size = 15,
color = "#4682b4"),
legend.background = element_rect(linetype = 0,
size = 0.5,
color = 1),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(title = str_to_title(str_wrap("2014-2018 estimate of families with female householder, no husband present with related children of the householder under 18 years", 50)),
caption = "Source: 2018 American Community Survey: 5-Year Estimates") +
guides(fill = guide_legend(title.position = "top",
label.position = "bottom",
label.hjust = 0.5)) +
coord_map("albers",
lat0 = 39,
lat1 = 45)
estimate_map
# Save it as a pdf on standard A4 paper widthwise
ggsave("poverty_estimates.pdf",
estimate_map,
width = 297,
height = 210,
units = "mm")
# Plot it!
estimate_map <-
ggplot() +
geom_polygon(data = map_data, aes(x = long,
y = lat,
fill = poverty_percentage,
group = group),
color = "#f8f8fa",
size = 0.20,
show.legend = TRUE) +
geom_polygon(data=subset(map_data("state")),
aes(x=long,
y=lat,
group=group),
size = 0.5,
color="white",
fill = NA) +
scale_fill_gradient(name="Estimates",
low = "#fa9fb5",
high = "#7a0177",
breaks = c(0, 25, 50, 75, 100),
limits = c(0,100),
na.value = "#c9d3d9",
labels = c(str_wrap("0.00% - 24.99%", 10),
str_wrap("25.00 - 49.99%", 10),
str_wrap("50.00% - 74.99%", 10),
str_wrap("75.00% - 99.99%", 10),
"100%"),
guide = "legend") +
theme(plot.title = element_text(size = 24,
color ="#4682b4",
vjust = -1,
hjust = 0.5,
face = "bold"),
plot.caption = element_text(size = 10,
color ="#4682b4",
face = "italic",
margin = margin(t = 1,
unit = "cm")),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key = element_rect(size = 5,
color = NA),
legend.key.width = unit(2,
"cm"),
legend.text = element_text(size = 12,
color = "#4682b4"),
legend.title.align = 0.5,
legend.title = element_text(size = 15,
color = "#4682b4"),
legend.background = element_rect(linetype = 0,
size = 0.5,
color = 1),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(title = str_to_title(str_wrap("2014-2018 estimate of families with female householder, no husband present with related children of the householder under 18 years", 50)),
caption = "Source: 2018 American Community Survey: 5-Year Estimates") +
guides(fill = guide_legend(title.position = "top",
label.position = "bottom",
label.hjust = 0.5)) +
coord_map("albers",
lat0 = 39,
lat1 = 45)
estimate_map
# Save it as a pdf on standard A4 paper widthwise
ggsave("poverty_estimates.pdf",
estimate_map,
width = 297,
height = 210,
units = "mm")
blogdown::build_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693e")
blogdown::build_site()
blogdown::serve_site()
install.packages("MatrixModels")
blogdown::build_site()
blogdown::serve_site()
library(tidycensus)
library(tidyverse)
acs17 <- load_variables(year = 2019, dataset = "acs5", cache = TRUE)
acs19 <- load_variables(year = 2019, dataset = "acs5", cache = TRUE)
View(acs19)
medhomeval_wv <- get_acs(geography = "county",
variables = "B25077_001",
state = "WV",
survey = "acs5"); medhomeval_wv %>% head()
View(medhomeval_wv)
medhomeval_wv_mon <- get_acs(geography = "tract",
variables = "B25077_001",
state = "WV",
county = 061,
survey = "acs5"); medhomeval_wv_mon %>% head()
DT::datatable(medhomeval_wv_mon)
library(DT)
all_tractValues
all_tractValues <- get_acs(geography = "tract",
table = "B25075",
state = "WV",
county = 061,
survey = "acs5"); all_tractValues %>% head()
ggplot() +
geom_polygon(data = va, aes(x=long, y = lat, group = group, fill=region)) +
scale_fill_manual(values=c("#ce5858")) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = va_count, aes(x=long, y = lat, group = group, fill=subregion),
color = "#FFFFFF") +
scale_fill_viridis(discrete = TRUE,
alpha=0.7,
option="cividis",
guide = FALSE) +
theme_bw() +
theme(plot.title = element_text(size = 26, color ="#105456",  vjust = -1),
legend.position ="bottom",
legend.direction = 'vertical',
legend.text = element_text(size=15, color = "#59595B"),
legend.title = element_blank(),
legend.title.align = 0.5,
legend.spacing.x = unit(0.5, "cm"),
legend.spacing.y = unit(0.5, "cm"),
legend.background = element_rect(linetype = 0, size = 1, colour = 1),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
# guides(color=FALSE) +
coord_fixed(1.3)
ggplot() +
geom_polygon(data = all_tractValues, aes(x=long,
y = lat,
group = group, fill=subregion),
color = "#FFFFFF")
all_tractValues %>%
st_transform(crs = "+init=epsg:4326")
library(tools)
library(leaflet)
library(stringr)
library(sf)
all_tractValues %>%
st_transform(crs = "+init=epsg:4326")
ggplot(all_tractValues) +
geom_sf(aes(fill = estimate),
color = NA) +
coord_sf(datum = NA) +
theme_minimal() +
scale_fill_viridis()
ggplot(all_tractValues) +
geom_sf(aes(fill = estimate),
color = NA) +
coord_sf(datum = NA) +
theme_minimal()
ggplot(all_tractValues) +
geom_sf(aes(),
color = NA) +
coord_sf(datum = NA) +
theme_minimal()
View(all_tractValues)
ggplot(all_tractValues) +
geom_sf(aes(fill = estimate)
)
all_tractValues <- get_acs(geography = "tract",
table = "B25075",
state = "WV",
county = 061,
survey = "acs5"); all_tractValues %>% head()
ggplot(all_tractValues) +
geom_sf(aes(fill = estimate),
color = NA) +
coord_sf(datum = NA) +
theme_minimal()
mon <- get_acs(state = "WV",
county = "Monongahela",
geography = "tract",
variables = "B19013_001",
geometry = TRUE)
mon <- get_acs(state = "WV",
county = "Monongalia",
geography = "tract",
variables = "B19013_001",
geometry = TRUE)
datatable(mon)
head(mon)
library(knitr)
head(mon) %>%
kable()
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_viridis_c(option = "magma")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_viridis_c(option = "magma",
direction = -1)
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_brewer(palette = "Sprectral",
direction = -1)
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_brewer(palette = "Sprectral")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_brewer(palette = "Spectral")
librray(wesanderson)
pal <- wes_palette("Zissou1", 21, type = "continuous")
library(wesanderson)
pal <- wes_palette("Zissou1", 21, type = "continuous")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_manual(values = pal)
mon
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911)
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal)
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
library(ggthemes)
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
pal <- wes_palette("Zissou1", 100, type = "continuous")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
pal <- wes_palette("Zissou1", 100000, type = "continuous")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
pal <- wes_palette("Zissou1", max(mon$estimate), type = "continuous")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = rev(pal)) +
theme_map()
?wes_palette
pal <- wes_palette("Rushmore1",
max(mon$estimate),
type = "continuous")
mon %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
#  coord_sf(crs = 26911) +
scale_fill_gradientn(colours = pal) +
theme_map()
mon %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal) +
theme_map()
### Faceting Map
# Daata for non-Hispanic whites, non-Hispanic blacks, non-Hispanic Asians, and Hispanics by Census tract f
mon_race <- get_decennial(geography = "tract",
state = "TX",
county = "Harris County",
geometry = TRUE,
summary_var = "P001001")
?get_decennial
racevars <- c(White = "P005003",
Black = "P005004",
Asian = "P005006",
Hispanic = "P004003")
mon_race <- get_decennial(geography = "tract",
state = "TX",
county = "Harris County",
geometry = TRUE,
summary_var = "P001001")
mon_race <- get_decennial(geography = "tract",
variables = racevars,
state = "TX",
county = "Harris County",
geometry = TRUE,
summary_var = "P001001")
mon_race <- get_decennial(geography = "tract",
variables = racevars,
state = "WV",
county = "Monongalia County",
geometry = TRUE,
summary_var = "P001001")
View(mon)
mon_race)
datatable(mon_race)
head(mon_race) %>%
kable()
harris %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal) +
theme_map()
mon_race %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal) +
theme_map()
mon_race %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal,
trans="log10") +
theme_map()
### Detailed Mapping
mapview(
zcol = "estimate",
legend = TRUE)
library(mapview)
### Detailed Mapping
mapview(mon,
zcol = "estimate",
legend = TRUE)
mon_alt <- get_acs(geography = "tract",
variables = "B19013_001",
state = "WV",
county = "Monongalia",
geometry = TRUE,
cb = FALSE)
?mapview
### Detailed Mapping
mapview(mon,
zcol = "estimate",
legend = TRUE) +
breweries
### Interactive Mapping with Mapview
mapview(mon,
zcol = "estimate",
legend = TRUE) +
breweries
### Interactive Mapping with Mapview
mapview(mon,
zcol = "estimate",
legend = TRUE)
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693e")
mon_race %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal) +
theme_map()
mon %>%
mutate(pct = 100 * (value / summary_value)) %>%
ggplot(aes(fill = pct)) +
facet_wrap(~variable) +
geom_sf(color = NA) +
scale_fill_gradientn(colours = pal) +
theme_map()
blogdown::build_site()
blogdown::serve_site()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp693e")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
pal <- wes_palette("Rushmore1",
max(mon$estimate),
type = "continuous")
library(wesanderson)
pal <- wes_palette("Rushmore1",
max(mon$estimate),
type = "continuous")
scales::gradient_n_pal(pal)
scales::show_col(pal)
barplot(1:10, col = pal)
barplot(1:max(mon$estimate), col = pal)
wes_palette("Rushmore1")
blogdown::build_site()
blogdown::serve_site()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
purl("06-assignment.Rmd")
