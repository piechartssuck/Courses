"`tidyverse`",
"`tools`",
"`sf`",
"`DT`",
"`ggthemes`",
"`wesanderson`"),
,
description <- c("Another census package. You can actually use any of the others but this is included to give you variety",
"Nope",
"Used to manipulating R packages and their documentation",
"Package that houses spatial geometries and provides a relatively easy way to convert data frames to map objects",
"Nice package to see data frames in a more interactive display",
"Additional ggplot themes you can use",
"Palette based on Wes Anderson movies"),
github <- c("[tidycensus](https://github.com/walkerke/tidycensus){target='_blank'}",
"[tidyverse](https://github.com/tidyverse/tidyverse){target='_blank'}",
"[tools](https://www.rdocumentation.org/packages/tools/versions/3.6.2){target='_blank'}",
"[sf](https://github.com/r-spatial/sf){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://github.com/jrnold/ggthemes){target='_blank'}",
"[wesanderson](https://github.com/karthik/wesanderson){target='_blank'}"
),
example <- c("[tidycensus](https://walker-data.com/tidycensus/articles/basic-usage.html){target='_blank'}",
"Nope",
"[tools](https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540){target='_blank'}",
"[sf](https://r-spatial.github.io/sf/articles/sf1.html){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://mran.microsoft.com/snapshot/2017-02-04/web/packages/ggthemes/vignettes/ggthemes.html){target='_blank'}",
"[wesanderson](https://apreshill.github.io/data-vis-labs-2018/03-colors.html#95_built-in_discrete_palettes){target='_blank'}"
)
); packages_list
packages_list <-
tibble(
name <- c("`tidycensus`",
"`tidyverse`",
"`tools`",
"`sf`",
"`DT`",
"`ggthemes`",
"`wesanderson`"),
description <- c("Another census package. You can actually use any of the others but this is included to give you variety",
"Nope",
"Used to manipulating R packages and their documentation",
"Package that houses spatial geometries and provides a relatively easy way to convert data frames to map objects",
"Nice package to see data frames in a more interactive display",
"Additional ggplot themes you can use",
"Palette based on Wes Anderson movies"),
github <- c("[tidycensus](https://github.com/walkerke/tidycensus){target='_blank'}",
"[tidyverse](https://github.com/tidyverse/tidyverse){target='_blank'}",
"[tools](https://www.rdocumentation.org/packages/tools/versions/3.6.2){target='_blank'}",
"[sf](https://github.com/r-spatial/sf){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://github.com/jrnold/ggthemes){target='_blank'}",
"[wesanderson](https://github.com/karthik/wesanderson){target='_blank'}"
),
example <- c("[tidycensus](https://walker-data.com/tidycensus/articles/basic-usage.html){target='_blank'}",
"Nope",
"[tools](https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540){target='_blank'}",
"[sf](https://r-spatial.github.io/sf/articles/sf1.html){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://mran.microsoft.com/snapshot/2017-02-04/web/packages/ggthemes/vignettes/ggthemes.html){target='_blank'}",
"[wesanderson](https://apreshill.github.io/data-vis-labs-2018/03-colors.html#95_built-in_discrete_palettes){target='_blank'}"
)
); packages_list
.n
packages_list <-
tibble(
name <- c("`tidycensus`",
"`tidyverse`",
"`tools`",
"`sf`",
"`DT`",
"`ggthemes`",
"`wesanderson`"),
description <- c("Another census package. You can actually use any of the others but this is included to give you variety",
"Nope",
"Used to manipulating R packages and their documentation",
"Package that houses spatial geometries and provides a relatively easy way to convert data frames to map objects",
"Nice package to see data frames in a more interactive display",
"Additional ggplot themes you can use",
"Palette based on Wes Anderson movies"),
github <- c("[tidycensus](https://github.com/walkerke/tidycensus){target='_blank'}",
"[tidyverse](https://github.com/tidyverse/tidyverse){target='_blank'}",
"[tools](https://www.rdocumentation.org/packages/tools/versions/3.6.2){target='_blank'}",
"[sf](https://github.com/r-spatial/sf){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://github.com/jrnold/ggthemes){target='_blank'}",
"[wesanderson](https://github.com/karthik/wesanderson){target='_blank'}"
),
example <- c("[tidycensus](https://walker-data.com/tidycensus/articles/basic-usage.html){target='_blank'}",
"Nope",
"[tools](https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540){target='_blank'}",
"[sf](https://r-spatial.github.io/sf/articles/sf1.html){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://mran.microsoft.com/snapshot/2017-02-04/web/packages/ggthemes/vignettes/ggthemes.html){target='_blank'}",
"[wesanderson](https://apreshill.github.io/data-vis-labs-2018/03-colors.html#95_built-in_discrete_palettes){target='_blank'}"
),
name.repair = "minimal"
); packages_list
packages_list <-
tibble(
name <- c("`tidycensus`",
"`tidyverse`",
"`tools`",
"`sf`",
"`DT`",
"`ggthemes`",
"`wesanderson`"),
description <- c("Another census package. You can actually use any of the others but this is included to give you variety",
"Nope",
"Used to manipulating R packages and their documentation",
"Package that houses spatial geometries and provides a relatively easy way to convert data frames to map objects",
"Nice package to see data frames in a more interactive display",
"Additional ggplot themes you can use",
"Palette based on Wes Anderson movies"),
github <- c("[tidycensus](https://github.com/walkerke/tidycensus){target='_blank'}",
"[tidyverse](https://github.com/tidyverse/tidyverse){target='_blank'}",
"[tools](https://www.rdocumentation.org/packages/tools/versions/3.6.2){target='_blank'}",
"[sf](https://github.com/r-spatial/sf){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://github.com/jrnold/ggthemes){target='_blank'}",
"[wesanderson](https://github.com/karthik/wesanderson){target='_blank'}"
),
example <- c("[tidycensus](https://walker-data.com/tidycensus/articles/basic-usage.html){target='_blank'}",
"Nope",
"[tools](https://stackoverflow.com/questions/7779037/extract-file-extension-from-file-path/47115540#47115540){target='_blank'}",
"[sf](https://r-spatial.github.io/sf/articles/sf1.html){target='_blank'}",
"[DT](https://github.com/rstudio/DT){target='_blank'}",
"[ggthemes](https://mran.microsoft.com/snapshot/2017-02-04/web/packages/ggthemes/vignettes/ggthemes.html){target='_blank'}",
"[wesanderson](https://apreshill.github.io/data-vis-labs-2018/03-colors.html#95_built-in_discrete_palettes){target='_blank'}"
),
.name_repair = "minimal"
); packages_list
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
theme_map()
library(tidyverse)
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
theme_map()
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
ggthemes::theme_map()
all_tractValues %>%
ggplot(aes(fill = estimate))
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal)
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA)
all_tractValues
medhomeval_wv
mon <- get_acs(state = "WV",
county = "Monongalia",
geography = "tract",
variables = "B19013_001",
geometry = TRUE)
# you want to use these packages.
library(tidycensus)
library(tidyverse)
library(DT)
library(tools)
library(leaflet)
library(stringr)
library(sf)
all_tractValues %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
ggthemes::theme_map()
ggplot(all_tractValues) +
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
ggthemes::theme_map()
ggplot(all_tractValues) +
geom_sf(aes(fill = estimate),
color = NA) +
coord_sf(datum = NA) +
theme_minimal()
all_tractValues_table <- get_acs(state = "WV",
county = 061,
geography = "tract",
table = "B25075",
survey = "acs5")
DT::datatable(all_tractValues_table)
all_tractValues_table <- get_acs(state = "WV",
county = 061,
geography = "tract",
variables = "B25075",
survey = "acs5")
all_tractValues_table <- get_acs(state = "WV",
county = 061,
geography = "tract",
variables = "B25075*",
survey = "acs5")
all_tractValues_table <- get_acs(geography = "county",
variables = "B25075_001",
shift_geo = TRUE,
geometry = TRUE)
all_tractValues_table <- get_acs(geography = "county",
variables = "B25075_001",
shift_geo = TRUE,
geometry = TRUE)
DT::datatable(all_tractValues_table)
all_tractValues_table %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_gradientn(colors = pal) +
ggthemes::theme_map()
blogdown:::insert_image_addin()
blogdown::build_site()
rve
blogdown::serve_site()
# Now let's take a look at the available variables. Hopefully one is interesting
vars <- listCensusMetadata(name = "acs/acs5/profile",
vintage = 2018,
type = "variables")
library(censusapi)
library(tidyverse)
library(rvest)
library(ggthemes)
library(scales)
# Ok I could also arrange the set filtering the descriptions by geography and demographics.
# There are a lot of ways to do this but we'll use the one that's stepwise.
availableapis %>%                                     # call the data set we need
filter(str_detect(description, c('geo'))) %>%       # we need geographic data but the description could also say geography, geogrphical, etc so we search by a stem
filter(str_detect(description, c('demo'))) %>%      # same idea as above for demographical information
drop_na(vintage) %>%                                # this will drop the rows that have NA for years
arrange(-vintage) %>%                               # arrange the years from most recent going backwards
View()
# Here you get a list of ALL data sets associated with the US Census
availableapis <- listCensusApis()
# The Census APIs have over 550 different data repositories, each with numerous data sets within those.
nrow(availableapis)
# Trying to locate what you want can be difficult but there are ways to reduce the time needed. Say I wanted
# any data set where income is mentioned anywhere.
availableapis %>%
filter_all(any_vars(grepl("income", .))) %>%
View()
# Ok I could also arrange the set filtering the descriptions by geography and demographics.
# There are a lot of ways to do this but we'll use the one that's stepwise.
availableapis %>%                                     # call the data set we need
filter(str_detect(description, c('geo'))) %>%       # we need geographic data but the description could also say geography, geogrphical, etc so we search by a stem
filter(str_detect(description, c('demo'))) %>%      # same idea as above for demographical information
drop_na(vintage) %>%                                # this will drop the rows that have NA for years
arrange(-vintage) %>%                               # arrange the years from most recent going backwards
View()
# first we need to check for geographic data because not everything in the Census API has
listCensusMetadata(name = "acs/acs5/profile",
vintage = 2018,
type = "geography") %>%
as_tibble() %>%
unnest(cols = c())
# Now let's take a look at the available variables. Hopefully one is interesting
vars <- listCensusMetadata(name = "acs/acs5/profile",
vintage = 2018,
type = "variables")
head(vars) %>%
as_tibble()
# Let's look at household relationship data
vars %>%
as_tibble() %>%
filter(str_detect(label, "relate")) %>%
View()
poverty_data <- getCensus(name = "acs/acs5/profile", # same as above
vintage = 2018,
vars = c("NAME", "DP03_0126PE"), # column/variable name
key = mycensuskey, # using the census key from before
region = "county:*",# any county
regionin = "state:*") # any state
# Clean it up
poverty_data_cleaned <- poverty_data %>%
separate(NAME, into = paste0('thing', 1:2), sep = '[,]') %>%
mutate(thing1 = str_replace_all(thing1, " County", "")) %>% # Remove the term County (with a space in front)
mutate(thing2 = str_squish(thing2)) %>%
select(-c(state, county)) %>% # We need to get rid of these becasue we'll be using state and county names to merge
rename(county = thing1,
state = thing2,
poverty_percentage = DP03_0126PE) %>%
mutate(poverty_percentage = replace(poverty_percentage,
which(poverty_percentage <= 0),
NA)) %>%
arrange(state, county)
# Take a look
poverty_data_cleaned %>% head()
# Get the county map level data
county_data <- map_data("county") %>%
rename(state = region, # rename because we'll use this to merge with the income_data_cleaned set
county = subregion) %>% # rename because we'll use this to merge with the income_data_cleaned set
mutate(state = str_to_title(state)) %>% # make into a title case
mutate(county = str_to_title(county)) # make into a title case
# Take a look
county_data %>% head()
# Merge them together using joins
map_data <- left_join(county_data,
poverty_data_cleaned,
by = c("state","county"))
# Take a look
map_data %>% head()
map_data %>%
select(poverty_percentage) %>%
na.omit() %>%
min()
map_data %>%
select(poverty_percentage) %>%
na.omit() %>%
max()
# Plot it!
estimate_map <-
ggplot() +
geom_polygon(data = map_data, aes(x = long,
y = lat,
fill = poverty_percentage,
group = group),
color = "#f8f8fa",
size = 0.20,
show.legend = TRUE) +
geom_polygon(data=subset(map_data("state")),
aes(x=long,
y=lat,
group=group),
size = 0.5,
color="white",
fill = NA) +
scale_fill_gradient(name="Estimates",
low = "#fa9fb5",
high = "#7a0177",
breaks = c(0, 25, 50, 75, 100),
limits = c(0,100),
na.value = "#c9d3d9",
labels = c(str_wrap("0.00% - 24.99%", 10),
str_wrap("25.00 - 49.99%", 10),
str_wrap("50.00% - 74.99%", 10),
str_wrap("75.00% - 99.99%", 10),
"100%"),
guide = "legend") +
theme(plot.title = element_text(size = 24,
color ="#4682b4",
vjust = -1,
hjust = 0.5,
face = "bold"),
plot.caption = element_text(size = 10,
color ="#4682b4",
face = "italic",
margin = margin(t = 1,
unit = "cm")),
legend.position = "bottom",
legend.direction = "horizontal",
legend.key = element_rect(size = 5,
color = NA),
legend.key.width = unit(2,
"cm"),
legend.text = element_text(size = 12,
color = "#4682b4"),
legend.title.align = 0.5,
legend.title = element_text(size = 15,
color = "#4682b4"),
legend.background = element_rect(linetype = 0,
size = 0.5,
color = 1),
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(title = str_to_title(str_wrap("2014-2018 estimate of families with female householder, no husband present with related children of the householder under 18 years", 50)),
caption = "Source: 2018 American Community Survey: 5-Year Estimates") +
guides(fill = guide_legend(title.position = "top",
label.position = "bottom",
label.hjust = 0.5)) +
coord_map("albers",
lat0 = 39,
lat1 = 45)
estimate_map
vars %>%
as_tibble() %>%
filter(str_detect(label, "relate"))
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
mapproj::mapproject()
blogdown::build_site()
blogdown::serve_site()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
purl("06-assignment.Rmd")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
# Chunk 1
library(knitr)
library(kableExtra)
library(tidyverse)
library(downloadthis)
library(here)
# Chunk 2: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 3
library(tidyverse)
library(patchwork) # Used to plot things in a grid
library(RColorBrewer) # A coloring package with multiple palettes
library(scales) # Used to manipulate applications of colors
library(ggpubr)
# Chunk 4
packages_list_walk <-
tibble(
name <- c("`tidyverse`",
"`patchwork`",
"`RColorBrewer`",
"`scales`",
"`ggpubr`"),
description <- c("Nope",
"Allows for the differing layouts of completed visualizations",
"Predefined palette originally based on map drawings",
"Provides greater functionality to manipulate scales within plots",
"Gives predefined settings for publication quality plots"
),
github <- c("[Github](https://github.com/tidyverse/tidyverse){target='_blank'}",
"[Github](https://github.com/thomasp85/patchwork){target='_blank'}",
"[Github](https://github.com/cran/RColorBrewer){target='_blank'}",
"[Github](https://github.com/r-lib/scales){target='_blank'}",
"[Github](https://github.com/kassambara/ggpubr){target='_blank'}"
),
example <- c("[Tutorial](https://www.datacamp.com/community/tutorials/tidyverse-tutorial-r){target='_blank'}",
"[Vignette](https://patchwork.data-imaginist.com/){target='_blank'}",
"[Interactive](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3){target='_blank'}",
"[Vignette](https://scales.r-lib.org/){target='_blank'}",
"[Vignette](https://rpkgs.datanovia.com/ggpubr/){target='_blank'}"
),
.name_repair = "minimal"
)
# Chunk 5
packages_list_walk %>%
kbl(col.names = c("Library", "Description", "Repository", "Example"),
"html",
escape = FALSE,
align = 'llcc') %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "30em") %>%
column_spec(3, width = "10em") %>%
column_spec(4, width = "10em") %>%
row_spec(2, extra_css = 'vertical-align: middle !important;')
# Chunk 8
election2016_rdata <- here("static", "data", "election2016.RData")
load(election2016_rdata)
# Chunk 10
names(election2016)
# Chunk 12
partyColors <- c("#2E74C0", "#CB454A")
scales::show_col(partyColors)
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
<details>
```{r "100%"}
ggplot(data = subset(election2016, !st %in% "DC"),
mapping = aes(x = r_points,
xend=r_points,
y = reorder(state, r_points),
color = party)) +
geom_vline(xintercept = 0, color = "gray30") +
geom_segment(aes(x = 0, y = reorder(state, r_points), xend = r_points,
yend = reorder(state, r_points)), color = "grey70") +
# Here is the fix but what do you think happened?
geom_point(shape = 21, size = 3, fill="white", stroke = 1) +
scale_color_manual(values = partyColors) +
scale_x_continuous(labels = function(x) paste0(abs(x), "%"), limits = c(-35, 50)) +
theme_minimal() +
theme(
legend.position = "none",
panel.border = element_blank()
) +
xlab("Party Affiliation") +
ylab("State")
```
</details>
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
