inv_logit <- function(x) 1 / (1 + exp(-x))
model_formula <- bf(
# Logistic curve
prop ~ inv_logit(asymlogit) * inv(1 + exp((mid - avg_BABIP) * exp(scale))),
# Each term in the logistic equation gets a linear model
asymlogit ~ 1,
mid ~ 1,
scale ~ 1,
# Precision
phi ~ 1,
# This is a nonlinear Beta regression model
nl = TRUE,
family = Beta(link = identity)
)
fit_prior <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
sample_prior = "only",
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
model_formula <- bf(
# Logistic curve
avg_FIP ~ inv_logit(asymlogit) * inv(1 + exp((mid - as.numeric(avg_BABIP)) * exp(scale))),
# Each term in the logistic equation gets a linear model
asymlogit ~ 1,
mid ~ 1,
scale ~ 1,
# Precision
phi ~ 1,
# This is a nonlinear Beta regression model
nl = TRUE,
family = Beta(link = identity)
)
fit_prior <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
sample_prior = "only",
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
prior_fixef <- c(
# Point of steepest growth is  4 plus/minus 2 years
prior(normal(48, 12), nlpar = "mid", coef = "Intercept"),
prior(normal(1.25, .75), nlpar = "asymlogit", coef = "Intercept"),
prior(normal(-2, 1), nlpar = "scale", coef = "Intercept")
)
fit_prior <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
sample_prior = "only",
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
prior_phi <- c(
prior(normal(2, 1), dpar = "phi", class = "Intercept")
)
prior_fixef <- c(
# Point of steepest growth is  4 plus/minus 2 years
prior(normal(48, 12), nlpar = "mid", coef = "Intercept"),
prior(normal(1.25, .75), nlpar = "asymlogit", coef = "Intercept"),
prior(normal(-2, 1), nlpar = "scale", coef = "Intercept")
)
prior_phi <- c(
prior(normal(2, 1), dpar = "phi", class = "Intercept")
)
prior_fixef <- c(
# Point of steepest growth is age 4 plus/minus 2 years
prior(normal(48, 12), nlpar = "mid", coef = "Intercept"),
prior(normal(1.25, .75), nlpar = "asymlogit", coef = "Intercept"),
prior(normal(-2, 1), nlpar = "scale", coef = "Intercept")
)
prior_phi <- c(
prior(normal(2, 1), dpar = "phi", class = "Intercept")
)
ggplot(draws_posterior) +
aes(x = age, y = .value) +
geom_line(aes(group = .draw), alpha = .2) +
geom_point(
aes(y = prop),
color = point_orange, size = 2,
data = data
) +
theme(
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank()
) +
expand_limits(y = 0:1) +
ggtitle("Plausible curves after seeing data")
draws_posterior <- test %>%
filter(!Year <= 2015) %>%
# tidyr::expand(age = 0:100) %>%
tidybayes::add_fitted_draws(fit, n = 100)
fit <- brm(
model_formula,
data = data,
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
fit <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
test %>%
filter(!Year <= 2015)
prior_fixef
fit <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
test %>%
filter(!Year <= 2015)
test %>%
filter(!Year <= 2015) %>%
# tidyr::expand(age = 0:100) %>%
tidybayes::add_fitted_draws(fit, n = 100)
brm(
model_formula,
data = test %>%
filter(!Year <= 2015)
)
brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi)
)
prior_fixef
prior_phi)
prior_phi
model_formula <- bf(
# Logistic curve
avg_FIP ~ inv_logit(asymlogit) * inv(1 + exp((mid - as.numeric(avg_BABIP)) * exp(scale))),
# Each term in the logistic equation gets a linear model
asymlogit ~ 1,
mid ~ 1,
scale ~ 1,
# Precision
phi ~ 1,
# This is a nonlinear Beta regression model
nl = TRUE,
family = Beta(link = identity)
)
model_formula
prior_fixef <- c(
# Point of steepest growth is  4 plus/minus 2 years
prior(normal(48, 12), nlpar = "mid", coef = "Intercept"),
prior(normal(1.25, .75), nlpar = "asymlogit", coef = "Intercept"),
prior(normal(-2, 1), nlpar = "scale", coef = "Intercept")
)
prior_phi <- c(
prior(normal(2, 1), dpar = "phi", class = "Intercept")
)
fit <- brm(
model_formula,
data = test %>%
filter(!Year <= 2015),
prior = c(prior_fixef, prior_phi),
iter = 2000,
chains = 4,
cores = 1,
control = list(adapt_delta = 0.9, max_treedepth = 15)
)
draws_posterior <- test %>%
filter(!Year <= 2015) %>%
# tidyr::expand(age = 0:100) %>%
tidybayes::add_fitted_draws(fit, n = 100)
test %>%
filter(!Year <= 2015)
model_formula
jv <- rbind(pitcher_game_logs_fg(playerid = 8700, year = 2010),
pitcher_game_logs_fg(playerid = 8700, year = 2011),
pitcher_game_logs_fg(playerid = 8700, year = 2012),
pitcher_game_logs_fg(playerid = 8700, year = 2013),
pitcher_game_logs_fg(playerid = 8700, year = 2014),
pitcher_game_logs_fg(playerid = 8700, year = 2015),
pitcher_game_logs_fg(playerid = 8700, year = 2016),
pitcher_game_logs_fg(playerid = 8700, year = 2017),
pitcher_game_logs_fg(playerid = 8700, year = 2018),
pitcher_game_logs_fg(playerid = 8700, year = 2019),
pitcher_game_logs_fg(playerid = 8700, year = 2020)
) %>%
as_tibble() %>%
separate(Date, into = c("Year", "Month", "Day"))
full <- jv %>%
dplyr::select(Year, Month, FIP, BABIP) %>%
mutate(FIP = as.numeric(FIP),
BABIP = as.numeric(BABIP),
Year = as.numeric(Year)) %>%
group_by(Year, Month) %>%
summarize(avg_FIP = mean(FIP, na.rm = TRUE),
avg_BABIP = mean(BABIP, na.rm = TRUE)) %>%
filter(avg_BABIP >=0.30) %>%
mutate(avg_BABIP = fct_reorder(as_factor(avg_BABIP), Year)) %>%
unite("MoYr",
c("Month", "Year"),
sep = "/",
remove = FALSE)
ggplot(full, aes(x = as.numeric(avg_BABIP),
y = avg_FIP,
fill = "avg_FIP")) +
theme_minimal() +
theme(plot.title = element_text(size=22,
hjust = 0.5,
margin = margin(b = 20)),
axis.title.x = element_text(size=18,
margin = margin(t = 20)),
axis.title.y = element_text(size=18,
margin = margin(r = 20)),
axis.text.x = element_text(size=12,
angle = 45),
axis.text.y = element_text(size=12),
panel.grid.major.x = element_line(color = "#addfee"),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank()) +
expand_limits(y = 0:10)  +
geom_line(method="lm",
stat = "smooth",
se=TRUE,
formula = y ~ poly(x, 3,
raw=TRUE),
color="#ff6347",
alpha = 0.65,
size = 2,
show.legend = FALSE) +
geom_point(color = "#333333",
shape = 21,
size = 3,
alpha = 0.7,
stroke = 1.3,
show.legend = FALSE) +
scale_fill_manual(values = c("#4682b4")) +
scale_x_continuous(breaks=seq(1,21,1),
labels = unique(priors$MoYr)) +
labs(title = "Justin Verlander BABIP vs FIP Over the Years",
x = "Average BABIP by Month",
y = "Average FIP")
ggplot(full, aes(x = as.numeric(avg_BABIP),
y = avg_FIP,
fill = "avg_FIP")) +
theme_minimal() +
theme(plot.title = element_text(size=22,
hjust = 0.5,
margin = margin(b = 20)),
axis.title.x = element_text(size=18,
margin = margin(t = 20)),
axis.title.y = element_text(size=18,
margin = margin(r = 20)),
axis.text.x = element_text(size=12,
angle = 45),
axis.text.y = element_text(size=12),
panel.grid.major.x = element_line(color = "#addfee"),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank()) +
expand_limits(y = 0:10)  +
geom_line(method="lm",
stat = "smooth",
se=TRUE,
formula = y ~ poly(x, 3,
raw=TRUE),
color="#ff6347",
alpha = 0.65,
size = 2,
show.legend = FALSE) +
geom_point(color = "#333333",
shape = 21,
size = 3,
alpha = 0.7,
stroke = 1.3,
show.legend = FALSE) +
scale_fill_manual(values = c("#4682b4")) +
scale_x_continuous(breaks=seq(1,21,1),
labels = unique(full$MoYr)) +
labs(title = "Justin Verlander BABIP vs FIP Over the Years",
x = "Average BABIP by Month",
y = "Average FIP")
# Subset ----
priors <- full %>%
filter(!Year <= 2015)
priors
ggplot(priors, aes(x = as.numeric(avg_BABIP),
y = avg_FIP,
fill = "avg_FIP")) +
theme_minimal() +
theme(axis.title.x = element_text(size=18,
margin = margin(t = 20))) +
theme(axis.title.y = element_text(size=18,
margin = margin(r = 20))) +
expand_limits(y = 0:10) +
geom_line(method="lm",
stat = "smooth",
se=TRUE,
formula = y ~ poly(x, 3,
raw=TRUE),
color="#ff6347",
alpha = 0.65,
size = 2,
show.legend = FALSE) +
geom_point(color = "#333333",
shape = 21,
size = 3,
alpha = 0.7,
stroke = 1.3,
show.legend = FALSE) +
scale_fill_manual(values = c("#4682b4")) +
labs(x = "Average BABIP by Annum",
y = "Average FIP")
form  <- lm(avg_FIP ~ poly(as.numeric(avg_BABIP, 3,
raw=TRUE)),
data = priors,
family = binomial)
predict(form)
form
predict(form)
ggplot(priors, aes(x = as.numeric(avg_BABIP),
y = avg_FIP,
fill = "avg_FIP")) +
theme_minimal() +
theme(axis.title.x = element_text(size=18,
margin = margin(t = 20))) +
theme(axis.title.y = element_text(size=18,
margin = margin(r = 20))) +
expand_limits(y = 0:10) +
geom_line(method="lm",
stat = "smooth",
se=TRUE,
formula = y ~ poly(x, 3,
raw=TRUE),
color="#ff6347",
alpha = 0.65,
size = 2,
show.legend = FALSE) +
geom_point(color = "#333333",
shape = 21,
size = 3,
alpha = 0.7,
stroke = 1.3,
show.legend = FALSE) +
scale_fill_manual(values = c("#4682b4")) +
labs(x = "Average BABIP by Annum",
y = "Average FIP")
form  <- lm(avg_FIP ~ poly(as.numeric(avg_BABIP, 3,
raw=TRUE)),
data = priors,
family = binomial)
form  <- lm(avg_FIP ~ poly(as.numeric(avg_BABIP, 3,
raw=TRUE)),
data = priors)
predict(form)
inv_logit <- function(x) 1 / (1 + exp(-x))
inv_logit <- function(x) poly(x, 3,
raw=TRUE)
cubic <- function(x) poly(x, 3,
raw=TRUE)
cubic
asymlogit
?prior
model_formula <- bf(
# Cubic curve
avg_FIP ~ cubic(cub) * poly(mid - as.numeric(avg_BABIP)),
# Each term in the cubic equation gets a linear model
cub ~ 1,
mid ~ 1,
scale ~ 1,
# Precision
phi ~ 1,
# This is a nonlinear Beta regression model
nl = TRUE,
family = Beta(link = identity)
)
normal(48, 12)
ggplot(priors, aes(x = as.numeric(avg_BABIP),
y = avg_FIP,
fill = "avg_FIP")) +
theme_minimal() +
theme(axis.title.x = element_text(size=18,
margin = margin(t = 20))) +
theme(axis.title.y = element_text(size=18,
margin = margin(r = 20))) +
expand_limits(y = 0:10) +
geom_line(method="lm",
stat = "smooth",
se=TRUE,
formula = y ~ poly(x, 3,
raw=TRUE),
color="#ff6347",
alpha = 0.65,
size = 2,
show.legend = FALSE) +
geom_point(color = "#333333",
shape = 21,
size = 3,
alpha = 0.7,
stroke = 1.3,
show.legend = FALSE) +
scale_fill_manual(values = c("#4682b4")) +
labs(x = "Average BABIP by Annum",
y = "Average FIP")
priors
fit <- stan_glm(avg_FIP ~ as.numeric(avg_BABIP), data = priors)
library("rstanarm")
fit <- stan_glm(avg_FIP ~ as.numeric(avg_BABIP), data = priors)
posterior <- as.matrix(fit)
mcmc_areas(posterior,
pars = c("cyl", "drat", "am", "wt"),
prob = 0.8)
library("bayesplot")
mcmc_areas(posterior,
pars = c("cyl", "drat", "am", "wt"),
prob = 0.8)
mcmc_areas(posterior,
pars = c("avg_BABIP"),
prob = 0.8)
posterior
fit
fit <- stan_glm(avg_FIP ~ poly(as.numeric(avg_BABIP), 3,
raw=TRUE), data = priors)
fit
posterior <- as.matrix(fit)
mcmc_areas(posterior,
pars = c("avg_BABIP"),
prob = 0.8)
mcmc_areas(posterior,
#  pars = c("avg_BABIP"),
prob = 0.8)
fit <- stan_glm(avg_FIP ~ avg_BABIP))
posterior <- as.matrix(fit)
fit <- stan_glm(avg_FIP ~ avg_BABIP)
fit <- stan_glm(avg_FIP ~ avg_BABIP, data = priors)
posterior <- as.matrix(fit)
mcmc_areas(posterior,
#  pars = c("avg_BABIP"),
prob = 0.8)
color_scheme_set("red")
ppc_dens_overlay(y = fit$y,
yrep = posterior_predict(fit, draws = 50))
# also works nicely with piping
color_scheme_set("brightblue")
fit %>%
posterior_predict(draws = 500) %>%
ppc_stat_grouped(y = mtcars$mpg,
group = mtcars$carb,
stat = "median")
# also works nicely with piping
color_scheme_set("brightblue")
fit %>%
posterior_predict(draws = 500) %>%
ppc_stat_grouped(y = prior$,
group = mtcars$carb,
stat = "median")
fit %>%
posterior_predict(draws = 500) %>%
ppc_stat_grouped(y = priors$avg_FIP,
group = as.numeric(priors$avg_BABIP),
stat = "median")
color_scheme_set("red")
ppc_dens_overlay(y = fit$y,
yrep = posterior_predict(fit, draws = 50))
fit %>%
posterior_predict(draws = 500) %>%
ppc_stat_grouped(y = priors$avg_FIP,
group = as.numeric(priors$avg_BABIP),
stat = "median")
install.packages(c("network", "servr", "vdiffr"))
install.packages("ps")
setwd("~/Documents/WVU/Research/REU SURE/Analysis/Cari Data Set/CHEM 497")
library(dplyr)
Chem_Demo = read.csv("CHEM_Demographics.csv")
Chem_Biweekly = read.csv("CHEM_Biweekly.csv")
library(readr)
Chem_Demo = read_csv("CHEM_Demographics.csv")
View(Chem_Demo)
alt_CHEM_Dataset <- Chem_Biweekly %>%
left_join(Chem_Demo, by = c("Student Random Number Code"))
Chem_Demo = read_csv("CHEM_Demographics.csv")
Chem_Biweekly = read_csv("CHEM_Biweekly.csv")
names(Chem_Biweekly)
names(Chem_Demo)
alt_CHEM_Dataset <- Chem_Biweekly %>%
left_join(Chem_Demo, by = c("Student Random Number Code"))
View(alt_CHEM_Dataset)
alt_CHEM_Dataset <- Chem_Biweekly %>%
left_join(Chem_Demo, by = c("Student Random Number Code", "Term"))
install.packages(c("scipub", "sp"))
