blogdown::serve_site()
?DT::datatable
?htmlwidgets::saveWidget
vignette("develop_sizing", package = "htmlwidgets")
?htmlwidgets::saveWidget
vignette("develop_sizing", package = "htmlwidgets")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(widgetframe_self_contained = TRUE)
knitr::opts_knit$set(root.dir = getwd())
library(tidyverse)
library(fivethirtyeight)
library(psych)
library(DT)
library(knitr)
library(kableExtra)
library(htmlwidgets)
library(htmltools)
# Chunk 2
loc <- here::here("static", "data", "EDP611Week4Data&Script&Paper.zip")
downloadthis::download_file(
path = loc,
output_name = "Week 4 Data and Script and Paper",
button_label = "Download Data and Script and Paper",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
# Chunk 7
conspiracy_data <- read_csv(here::here("static", "data", "ConspiracyData.csv"))
# Chunk 9
conspiracy_codebook <-
read_csv(here::here("static", "data", "ConspiracyCodebook.csv"))
# Chunk 11
conspiracy_measures<-
read_csv(here::here("static", "data", "ConspiracyMeasures.csv"))
# Chunk 12
conspiracy_codebook %>%
head()
# Chunk 13
conspiracy_measures
# Chunk 15
conm <- conspiracy_measures %>%
DT::datatable()
conm_width <- htmlwidgets::createWidget(conm,
sizingPolicy = htmlwidgets::sizingPolicy(
browser.defaultWidth = TRUE,
browser.defaultHeight = TRUE)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
? htmlwidgets::sizingPolicy
conm_width <- htmlwidgets::createWidget(conm,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm_width <- htmlwidgets::createWidget(datatable(conspiracy_measures),
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm_width <- htmlwidgets::createWidget(datatable(conspiracy_measures),
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
conm_width
htmlwidgets::createWidget(datatable(conspiracy_measures),
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::createWidget(datatable(conspiracy_measures,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
))
htmlwidgets::createWidget(datatable(conspiracy_measures %>%
DT::datatable(),
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
))
htmlwidgets::createWidget(
name = 'conspiracy_measures',
x,
width = width,
height = height,
package = 'DT',
elementId = elementId,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::createWidget(
name = 'conspiracy_measures',
x,
package = 'DT',
elementId = elementId,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::createWidget(
name = 'conspiracy_measures',
x,
package = 'DT',
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
conm_width <- htmlwidgets::createWidget(datatable(conspiracy_measures),
x,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm_width <- htmlwidgets::createWidget(conspiracy_measures %>%
DT::datatable(),
x,
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm_width <- htmlwidgets::createWidget(conspiracy_measures,
x,
package = "DT",
sizingPolicy = htmlwidgets::sizingPolicy(
defaultWidth = "100%",
padding = 0,
browser.fill = TRUE
)
)
htmlwidgets::saveWidget(conm_width,
file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm <- conspiracy_measures %>%
DT::datatable() %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm <- conspiracy_measures %>%
DT::datatable(options = list(
scrollX=FALSE,
autoWidth = TRUE,)) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm <- conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
autoWidth = TRUE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm <- conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
blogdown::build_site()
blogdown::serve_site()
conm <- conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(widgetframe_self_contained = TRUE)
knitr::opts_knit$set(root.dir = getwd())
library(tidyverse)
library(fivethirtyeight)
library(psych)
library(DT)
library(knitr)
library(kableExtra)
library(htmlwidgets)
library(htmltools)
# Chunk 2
loc <- here::here("static", "data", "EDP611Week4Data&Script&Paper.zip")
downloadthis::download_file(
path = loc,
output_name = "Week 4 Data and Script and Paper",
button_label = "Download Data and Script and Paper",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
# Chunk 7
conspiracy_data <- read_csv(here::here("static", "data", "ConspiracyData.csv"))
# Chunk 9
conspiracy_codebook <-
read_csv(here::here("static", "data", "ConspiracyCodebook.csv"))
# Chunk 11
conspiracy_measures<-
read_csv(here::here("static", "data", "ConspiracyMeasures.csv"))
# Chunk 12
conspiracy_codebook %>%
head()
# Chunk 13
conspiracy_measures
conm <- conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm <- conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
conm
conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
options = list(
columnDefs = list(list(className = 'dt-center',
targets = "_all")))
) %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
?DT::datatable
blogdown::build_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
?blogdown:::insert_image_addin()
?blogdown:::insert_image_addin()
View(`authorBundle_Year 6 Q1`)
install.packages("reactable")
library(reactable)
reactable(conspiracy_measures)
conspiracy_measures %>%
DT::datatable(
rownames = FALSE,
extensions = list(Scroller=NULL),
options = list(
autoWidth = TRUE,
scrollY=400,
scrollCollapse=TRUE,
scrollX=TRUE,
columnDefs = list(list(width = '20%',
className = 'dt-center',
targets = "_all")))
) %>%
formatStyle(columns = c(1,2), width='50px') %>%
htmlwidgets::saveWidget(file = here::here("static", "html", "conm.html"),
selfcontained = TRUE)
blogdown::serve_site()
?reactable
head(conspiracy_data) %>%
rowSums()
EFA$loadings
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(widgetframe_self_contained = TRUE)
knitr::opts_knit$set(root.dir = getwd())
library(tidyverse)
library(fivethirtyeight)
library(psych)
library(DT)
library(reactable)
library(knitr)
library(kableExtra)
library(htmlwidgets)
library(htmltools)
# Chunk 2
loc <- here::here("static", "data", "EDP611Week4Data&Script&Paper.zip")
downloadthis::download_file(
path = loc,
output_name = "Week 4 Data and Script and Paper",
button_label = "Download Data and Script and Paper",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
# Chunk 7
conspiracy_data <- read_csv(here::here("static", "data", "ConspiracyData.csv"))
# Chunk 9
conspiracy_codebook <-
read_csv(here::here("static", "data", "ConspiracyCodebook.csv"))
# Chunk 11
conspiracy_measures<-
read_csv(here::here("static", "data", "ConspiracyMeasures.csv"))
# Chunk 12
conspiracy_codebook %>%
head()
# Chunk 13
conspiracy_measures
# Chunk 14
reactable(conspiracy_measures)
# Chunk 15
reactable(conspiracy_codebook)
# Chunk 16
reactable(conspiracy_codebook,
searchable = TRUE,
defaultPageSize = 3)
# Chunk 17
dim(conspiracy_data)
# Chunk 18
thing <- reactable(conspiracy_data,
searchable = TRUE,
defaultPageSize = 5,
showPageSizeOptions = TRUE,
highlight = TRUE)
thing
# Chunk 19
theme <- reactableTheme(
style = list(".dark &" = list(color = "#fff", background = "#282a36")),
cellStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
headerStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
paginationStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
rowHighlightStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.04)")),
pageButtonHoverStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.08)")),
pageButtonActiveStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.1)"))
)
togglething <- reactable(conspiracy_data,
searchable = TRUE,
defaultPageSize = 5,
showPageSizeOptions = TRUE,
highlight = TRUE,
theme = theme) # I only added this part...
tags$button(onclick = "document.querySelector('.themeable-tbl').classList.toggle('dark')",
"Toggle light/dark")
div(class = "themeable-tbl dark", togglething) # ...and changed this last bit.
# Chunk 20
EFA <- fa(conspiracy_data)
# Chunk 21
EFA
EFA$loadings
EFA %>%
select(loadings)
conspiracy_data %>%
head() %>%
rowSums()
EFA_model %>%
scores()
EFA_model
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(widgetframe_self_contained = TRUE)
knitr::opts_knit$set(root.dir = getwd())
library(tidyverse)
library(fivethirtyeight)
library(psych)
library(DT)
library(reactable)
library(knitr)
library(kableExtra)
library(htmlwidgets)
library(htmltools)
# Chunk 2
loc <- here::here("static", "data", "EDP611Week4Data&Script&Paper.zip")
downloadthis::download_file(
path = loc,
output_name = "Week 4 Data and Script and Paper",
button_label = "Download Data and Script and Paper",
button_type = "default",
has_icon = TRUE,
icon = "fa fa-save",
class = "hvr-sweep-to-left"
)
# Chunk 7
conspiracy_data <- read_csv(here::here("static", "data", "ConspiracyData.csv"))
# Chunk 9
conspiracy_codebook <-
read_csv(here::here("static", "data", "ConspiracyCodebook.csv"))
# Chunk 11
conspiracy_measures<-
read_csv(here::here("static", "data", "ConspiracyMeasures.csv"))
# Chunk 12
conspiracy_codebook %>%
head()
# Chunk 13
conspiracy_measures
# Chunk 14
reactable(conspiracy_measures)
# Chunk 15
reactable(conspiracy_codebook)
# Chunk 16
reactable(conspiracy_codebook,
searchable = TRUE,
defaultPageSize = 3)
# Chunk 17
dim(conspiracy_data)
# Chunk 18
thing <- reactable(conspiracy_data,
searchable = TRUE,
defaultPageSize = 5,
showPageSizeOptions = TRUE,
highlight = TRUE)
thing
# Chunk 19
theme <- reactableTheme(
style = list(".dark &" = list(color = "#fff", background = "#282a36")),
cellStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
headerStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
paginationStyle = list(".dark &" = list(borderColor = "rgba(255, 255, 255, 0.15)")),
rowHighlightStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.04)")),
pageButtonHoverStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.08)")),
pageButtonActiveStyle = list(".dark &" = list(background = "rgba(255, 255, 255, 0.1)"))
)
togglething <- reactable(conspiracy_data,
searchable = TRUE,
defaultPageSize = 5,
showPageSizeOptions = TRUE,
highlight = TRUE,
theme = theme) # I only added this part...
tags$button(onclick = "document.querySelector('.themeable-tbl').classList.toggle('dark')",
"Toggle light/dark")
div(class = "themeable-tbl dark", togglething) # ...and changed this last bit.
# Chunk 20
EFA <- fa(conspiracy_data)
# Chunk 21
EFA
# Chunk 22
EFA$loadings
# Chunk 23
fa.diagram(EFA)
# Chunk 24
class(EFA)
# Chunk 25
head(conspiracy_data)
# Chunk 26
reactable(head(conspiracy_data))
# Chunk 27
conspiracy_data %>%
head() %>%
rowSums()
EFA_model
EFA_model$scores
EFA %>%
scores()
EFA %>%
scores
EFA_model$scores
EFA$scores
EFA %>%
select(scores)
head(EFA$scores)
summary(EFA_model$scores)
summary(EFA$scores)
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
# purl("02-walkthrough.Rmd")
# purl("03-walkthrough.Rmd")
purl("04-walkthrough.Rmd")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(knitr)
# purl("02-walkthrough.Rmd")
# purl("03-walkthrough.Rmd")
purl("04-walkthrough.Rmd")
