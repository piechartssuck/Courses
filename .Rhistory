)
papers %>%
kbl(col.names = c("Title", "Citation", "Optional", "Required"),
"html",
escape = FALSE,
align = 'lccc') %>%
kable_styling(full_width = FALSE) %>%
column_spec(1, width = "30em") %>%
column_spec(2, width = "30em") %>%
column_spec(3, width = "10em") %>%
column_spec(4, width = "10em") %>%
row_spec(0, extra_css = 'vertical-align: middle !important;') %>%
row_spec(1, extra_css = 'vertical-align: middle !important;')  %>%
row_spec(2, extra_css = 'vertical-align: middle !important;') %>%
row_spec(3, extra_css = 'vertical-align: middle !important;')  %>%
row_spec(4, extra_css = 'vertical-align: middle !important;') %>%
row_spec(5, extra_css = 'vertical-align: middle !important;')  %>%
row_spec(6, extra_css = 'vertical-align: middle !important;') %>%
row_spec(7, extra_css = 'vertical-align: middle !important;') %>%
row_spec(8, extra_css = 'vertical-align: middle !important;')
blogdown::serve_site()
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(slidex)
library(here)
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week `0",
"Mixing Methodologie",
"Mixing Methodologie.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week `0",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
loc
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(slidex)
library(here)
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(slidex)
library(here)
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
ls
loc
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixing Methodologies.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
# Set the working directory as source ----
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(slidex)
library(here)
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixed Methods.pptx")
convert_pptx(path = loc, author = "Abhik Roy")
loc
loc <- here::here("Documents",
"WVU",
"Teaching",
"Past",
"EDP 617",
"EDP 617 Spring 2020",
"Weekly Tasks",
"Week 10",
"Mixing Methodologies",
"Mixed Methods.pptx")
getwd
getwd()
loc
here::here()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
remove.packages("rstan")
system.file("libs", "rstan.so", package = "rstan")
install.packages("rstan")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
Sqrt[2]
sqrt[2]
install.packages(c("plumber", "processx", "slider", "sparklyr", "tweenr"))
xaringan:::inf_mr()
library(tidyverse)
biopics
library(fivethirtyeight)
my_plot <-  ggplot(biopics) +
aes_string(
x="year_release",
y="box_office",
color= "type_of_subject") +
geom_point() +
theme_minimal()
my_plot
runApp('~/Desktop/class/banana')
blogdown::build_site()
blogdown::serve_site()
install.packages("R2jags")
install.packages("sparklyr")
blogdown::build_site()
blogdown::serve_site()
xaringan:::inf_mr()
setwd("~/Documents/WVU/Teaching/GitHub.nosync/Workspace/edp617")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::check_content()
blogdown::check_hugo()
blogdown::check_netlify()
blogdown::check_config()
blogdown::check_gitignore()
blogdown::check_gitignore()
blogdown::build_site()
blogdown::serve_site()
?blogdown::build_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
install.packages("insight")
xaringan:::inf_mr()
xaringan:::inf_mr()
min(ggplot2movies::movies)
min(ggplot2movies::movies$year)
max(ggplot2movies::movies$year)
ggplot2movies::movies
xaringan:::inf_mr()
# Chunk 1: xaringan-themer
library(xaringanthemer)
style_mono_accent(
base_color = "#428bca",
header_font_google = google_font("Jost"),
link_color = "steelblue",
text_font_size = "24px",
footnote_font_size = "20px"
)
# Chunk 2: xaringanExtra
xaringanExtra::use_xaringan_extra(c("tile_view", "logo", "tachyons"))
xaringanExtra::use_panelset()
xaringanExtra::use_tachyons()
# Chunk 3: setup
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(flair)
library(shiny)
library(fivethirtyeight)
library(plotly)
library(ggplot2movies)
library(RColorBrewer)
data(biopics)
# Chunk 4
.tiny .remark-code { /*Change made here*/
font-size: 80% !important;
}
# Chunk 5
knitr::include_graphics("img/shiny.png")
# Chunk 8
decorate("ui_min") %>%
flair("%>%", background="#cdecff") %>%
knit_print.with_flair()
# Chunk 10
decorate("server_min", eval = FALSE) %>%
flair("{}", background="#ffb700") %>%
knit_print.with_flair()
# Chunk 12
gt::gt(biopics[1:5,])
ggplot2movies::movies
# Chunk 13
movies_wrangled <- movies %>%
na.omit() %>%
mutate(budget = budget/1000000) %>%
gather(key = genre, value, -c(title:mpaa)) %>%
filter(!mpaa == "") %>%
select(-value)
movies_by_decade <- movies_wrangled  %>%
mutate(year = case_when(
year %in% 1930:1939 ~ "1930s",
year %in% 1940:1949 ~ "1940s",
year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009~ "2000s"
)
)
```
---
# Chunk 14
movies_by_decade %>%
head()
# Chunk 16
decorate("aes1") %>%
flair("aes_string", background="#ffb700") %>%
knit_print.with_flair()
# Chunk 17
ggplot(movies_by_decade) +
aes_string(
x="length",
fill= "genre"
) +
geom_bar() +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
# Chunk 20
decorate("uibasic2") %>%
flair("movies_plot", background="#cdecff") %>%
flair("plotOutput", background = "#ffb700") %>%
knit_print.with_flair()
# Chunk 21
decorate("serverbasic2") %>%
flair("movies_plot", background="#cdecff") %>%
flair("renderPlot({", background="#ffb700") %>%
flair("})", background="#ffb700") %>%
knit_print.with_flair()
# Chunk 24
decorate("uibasic") %>%
flair("movies_plot", background="#cdecff") %>%
knit_print.with_flair()
# Chunk 25
decorate("serverbasic") %>%
flair("movie_plot", background="#cdecff") %>%
flair_lines(5:12) %>%
knit_print.with_flair()
# Chunk 26: control_opts
categoricalVars <- c("year",
"mpaa",
"genre")
# Chunk 30
decorate("ui2") %>%
flair_lines(3:6) %>%
knit_print.with_flair()
# Chunk 31
decorate("server2") %>%
flair('color = "type_of_subject"') %>%
knit_print.with_flair()
# Chunk 33
decorate("ui2") %>%
flair("color_select", background = "#cdecff") %>%
flair("selectInput", background = "#fbf1a9") %>%
knit_print.with_flair()
# Chunk 34
decorate("server3") %>%
flair("color_select", background = "#cdecff") %>%
knit_print.with_flair()
# Chunk 35
decorate("server3") %>%
flair("color_select", background = "#cdecff") %>%
knit_print.with_flair()
# Chunk 37
decorate("filter") %>%
flair("filter", background = "#ffb700") %>%
knit_print.with_flair()
# Chunk 39
decorate("reactive1") %>%
flair("reactive({", background="#ffb700") %>%
flair("})", background="#ffb700") %>%
flair("input$year_filter", background="#cdecff") %>%
knit_print.with_flair()
# Chunk 42
decorate("slider_ui") %>%
flair_lines(4:8) %>%
knit_print.with_flair()
# Chunk 45
decorate("reactive2") %>%
flair("movies_filtered", background="#ffb700") %>%
knit_print.with_flair()
# Chunk 46
decorate("reactive3") %>%
flair("movies_filtered()", background="#ffb700") %>%
knit_print.with_flair()
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre") +
geom_hist() +
theme(legend.position="none") +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
#ggplotly(my_plot)
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre") +
geom_histogram() +
theme(legend.position="none") +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
#ggplotly(my_plot)
xaringan:::inf_mr()
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre") +
geom_bar() +
theme(legend.position="none") +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
#ggplotly(my_plot)
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre") +
geom_bar() +
theme(legend.position="none") +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
ggplotly(my_plot)
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre") +
geom_bar(stat = "identity") +
theme(legend.position="none") +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
ggplotly(my_plot)
my_plot <- ggplot(movies_wrangled) +
aes_string(x = "length",
y = "year",
fill = "genre",
title = "title") +
geom_bar(stat = "identity") +
theme(legend.position="none") +
theme_minimal() +
theme(legend.position="none") +
scale_fill_brewer(palette = "Spectral")
ggplotly(my_plot)
xaringan:::inf_mr()
ggplot2movies::movies
runApp('~/Dropbox/My Mac (Skynet.hsd1.wv.comcast.net)/Downloads/shinyTemplate.R')
runApp('~/Desktop/classthing.R')
runApp('~/Desktop/classthing.R')
runApp('~/Desktop/classthing.R')
runApp('~/Desktop/classthing.R')
movies %>%
head()
View(movies)
movies_wrangled <- movies %>%
na.omit() %>%
mutate(budget = budget/1000000) %>%
gather(key = genre, value, -c(title:mpaa)) %>%
filter(!mpaa == "") %>%
select(-value)
View(movies_wrangled)
movies_by_decade <- movies_wrangled  %>%
mutate(year = case_when(
year %in% 1930:1939 ~ "1930s",
year %in% 1940:1949 ~ "1940s",
year %in% 1950:1959 ~ "1950s",
year %in% 1960:1969 ~ "1960s",
year %in% 1970:1979 ~ "1970s",
year %in% 1980:1989 ~ "1980s",
year %in% 1990:1999 ~ "1990s",
year %in% 2000:2009~ "2000s"
)
)
View(movies_by_decade)
movies_plot <- ggplot(movies_by_decade) +
aes_string(
x="length",
fill= "genre"
) +
geom_bar() +
theme_minimal() +
scale_fill_brewer(palette = "Spectral")
movies_plot
View(multistate_tract_data)
runApp('~/Desktop/classthing.R')
runApp('~/Desktop/classthing.R')
install.packages("remotes")
runApp('~/Desktop/classthing.R')
movies %>%
filter(year > 1979) %>%
head(n=3)
min(movies$year)
max(movies$year)
runApp('~/Desktop/classthing.R')
runApp('~/Desktop/class_thing/classthing.R')
install.packages("gapminder")
library(gapminder)
View(gapminder)
runApp('~/Desktop/class_thing/gap.R')
runApp('~/Desktop/class_thing/gap.R')
View(multistate_state_data)
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages(c("gh", "lwgeom"))
install.packages("officer")
install.packages("reprex")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
blogdown::build_site(build_rmd = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::check_config()
blogdown::check_content()
blogdown::check_netlify()
blogdown::check_gitignore()
blogdown::check_gitignore()
blogdown::check_hugo()
blogdown::check_site()
blogdown::clean_duplicates()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
