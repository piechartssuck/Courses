

ttest_wrangle <- elam_long_inner %>%
                 select(-starts_with("At this time")) %>%
                 group_by("Recipient Email") %>%
                 rowid_to_column(var = "Respondent") %>%
                 ungroup() %>%
                 gather(key = Item, 
                        value = Agreement, 
                        -c(Respondent, "Recipient Email")) %>%
                 mutate(Agreement = str_replace_all(Agreement, 
                                                    "Neither Agree not Disagree", 
                                                    "Neither Agree nor Disagree")) %>%
                 mutate(Measure = case_when(
                        Agreement == "Strongly Agree" ~ 4,
                        Agreement == "Agree" ~ 3,
                        Agreement == "Neither Agree nor Disagree" ~ 2,
                        Agreement == "Disagree" ~ 1,
                        Agreement == "Strongly Disagree" ~ 0
                      )) %>%
                 filter(str_detect(Agreement, 'agree')) %>% 
                 separate(Item, c('Item', 'Timepoint'), sep="_") %>%
                 mutate(Timepoint = case_when(
                              Timepoint == "1" ~ "t1",
                              Timepoint == "2" ~ "t2"
                          )
                        ) %>%
                 separate(Item, c('QID', 'Item'), sep="  ") %>%
                 arrange(Respondent) %>%
                 group_by(Respondent, Item) %>%
                 mutate(Group_ID = cur_group_id()) %>%
                 ungroup() %>%
                 select(Group_ID, Timepoint, Measure) %>%
                 rowid_to_column(var = "row_number") %>%
                 pivot_wider(id_cols = Group_ID,
                             names_from = Timepoint, 
                             values_from = Measure) %>%
                 arrange(Group_ID)


library(mice)
library(ggthemes)

ttest_data <- ttest_wrangle %>%
              select(t1, t2) 

md.pattern(ttest_data) 

md.pairs(ttest_data)

ttest_data.imp_zero <- mice(ttest_data, maxit=0)
predM = ttest_data.imp_zero$predictorMatrix
meth = ttest_data.imp_zero$method
  
ttest_data.imp <- mice(ttest_data, 
                       maxit = 5, 
                       predictorMatrix = predM, 
                       method = meth, 
                       print =  FALSE)
ttest_data.imp

head(ttest_data.imp$imp$t1)
head(ttest_data.imp$imp$t2)

last_impute <- mice::complete(ttest_data.imp, 5)

# Extract the "tall" matrix which stacks the imputations
ttest_data.comp_long <- complete(ttest_data.imp, "long", include = TRUE)

# Now, the .imp variable identifies which imputation each belongs to.
# 0 (included because of `include = TRUE` above) is the un-imputed data.
table(ttest_data.comp_long$.imp)

# Let's visualize the distribution of imputed and observed values.
# `cci` returns logical whether its input is complete at each observation. 
# ~~ t1
ttest_data.comp_long$t1.NA <- cci(ttest_data$t1)

head(ttest_data.comp_long[, c("t1", "t1.NA")])

ggplot(ttest_data.comp_long, 
       aes(x = .imp, 
           y = t1, 
           color = t1.NA)) + 
  scale_color_manual(values = c("#d9534f", "#428bca")) +
  theme_hc() +
  geom_jitter(show.legend = FALSE, 
              width = 0.2,
              cex = 0.6)

# ~~ t2
ttest_data.comp_long$t2.NA <- cci(ttest_data$t2)

head(ttest_data.comp_long[, c("t2", "t2.NA")])

ggplot(ttest_data.comp_long, 
       aes(x = .imp, 
           y = t2, 
           color = t2.NA)) + 
  scale_color_manual(values = c("#d9534f", "#428bca")) +
  theme_hc() +
  geom_jitter(show.legend = FALSE, 
              width = 0.2,
              cex = 0.6)

# descriptives ----
with(ttest_data.imp, mean(t1))
with(ttest_data.imp, mean(t2))

imputed_data <- mice::complete(ttest_data.imp, 5) %>%
  gather(key = group, value = measure, -Group_ID) %>%
  as_tibble() %>%
  na.omit() 

ggplot(imputed_data, aes(group, measure)) +
  geom_boxplot()

t.test(measure ~ group, data = imputed_data, paired = TRUE)


